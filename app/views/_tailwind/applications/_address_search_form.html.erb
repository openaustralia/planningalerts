<%# TODO: It would be good to integrate this back with our standard tailwind form builder %>
<%# TODO: Show errors if necessary %>
<%# Right now the styling is quite different from the other forms %>
<div class="px-6 py-10 sm:py-16 bg-navy sm:px-28">
  <%= form_with url: address_applications_path, method: :get, class: "gap-4 flex flex-col items-center" do |form| %>
    <%# Not using a heading here so that we don't mess up the heading order on different pages. %>
    <%# TODO: There's probably something simpler and more sensible we should do here %>
    <div class="text-3xl font-bold text-white sm:text-4xl font-display">Application Search</div>
    <p class="text-2xl text-white">
      Find me applications within <%= meters_in_words(Alert::DEFAULT_RADIUS) %> of:
    </p>
    <%= form.label :q, "Street address", class: "sr-only" %>
    <%# TODO: Re-enable autofocus:true below after finished testing with livereload %>
    <div class="flex flex-col w-full gap-4">
      <%= form.text_field :q,
                          value: q,
                          placeholder: "e.g. 1 Sowerby St, Goulburn, NSW 2580",
                          class: "text-2xl text-navy w-full px-4 py-3 sm:py-4 placeholder-shown:truncate",
                          required: "required",
                          # This handles both when google maps is ready before alpine and the
                          # other way around
                          "x-data" => "{ initAfterMaps() { new google.maps.places.Autocomplete($el, {componentRestrictions: {country: 'au'}, types: ['address']})} }",
                          "x-init" => "if('google' in window) initAfterMaps()",
                          "x-on:map-loaded.window" => "initAfterMaps()" %>
      <%= button_tag type: "button", class: "text-white sm:text-xl block w-full" do %>
        <span class="inline-block mr-2 align-middle">
          <%= render "application/svg/location" %>
        </span>
        <%# TODO: Make geolocate button work %>
        <span class="underline">or use my current location</span>
      <% end %>
    </div>

    <div class="mt-4">
      <%= render Tailwind::ButtonComponent.new(tag: :button, size: "2xl", type: :primary) do %>
        <div class="px-12">Search</div>
      <% end %>
    </div>
  <% end %>
</div>
