- content_for :page_title, "Get the Data - API"
%h3= yield :page_title
%p
  Planning application data is available programmatically as feeds which can
  be used in most web mapping APIs and desktop GIS software like <a href="http://mapufacture.com">mapufacture</a>
  and <a href="http://pipes.yahoo.com/">Yahoo Pipes</a>. Details of the API are listed below.
%p
  All the API calls listed below return planning application sorted by the date they were scraped from the planning authority website with the most
  recent listed first. They will return a maximum of #{Application.per_page} results. To retrieve more results simply append "&amp;<strong>page</strong>=[2,3,etc..]" to the url.
%p
  By appending "&amp;<strong>style</strong>=html" to the end of the url it will return an html formatted
  description in the georss feed rather than the default plain text. This is especially
  useful when a georss feed is embedded in a map as in the examples below.
%p
  The API can return different formats including <a href="http://www.georss.org/">GeoRSS</a>, <a href="http://www.json.org/">JSON</a> and human readable HTML. The examples below all return
  GeoRSS. To get JSON instead simply replace ".rss" in the URL with ".js". To return HTML simply
  remove the ".rss" suffix completely.
%h4
  API documentation
.apiitem
  %h5
    Single Location by address
  %p.apidefinition
    Return applications near a given street address. The area included is a circle with a radius of the given size (in metres)
    with the address at its center. Suggested sizes are 400, 800 or 4000 metres.
  %code= raw api_example_address_url_html
  %p.apiexamples
    = link_to "view example", api_example_address_url
    |
    = link_to "view on a map", mapify(api_example_address_url + "&style=html", 14)
.apiitem
  %h5
    Single Location by longitude/latitude
  %p.apidefinition
    Return applications near a given longitude/latitude. The area included is a circle with a radius of the given size (in metres)
    with the longitude/latitude at its center. Suggested sizes are 400, 800 or 4000 metres.
  %code= raw api_example_latlong_url_html
  %p.apiexamples
    = link_to "view example", api_example_latlong_url
    |
    = link_to "view on a map", mapify(api_example_latlong_url + "&style=html", 14)
.apiitem
  %h5
    Area by longitude/latitude
  %p.apidefinition
    Return applications within a rectangle defined by longitude/latitude.
  %code= raw api_example_area_url_html
  %p.apiexamples
    = link_to "view example", api_example_area_url
    |
    = link_to "view on a map", mapify(api_example_area_url + "&style=html", 6)
.apiitem
  %h5
    Planning authority
  %p.apidefinition
    Return applications for a specific planning authority (e.g. a local council) by authority short name. To discover the authority short name
    to use here, find the planning authority on the
    = link_to "list of authorities", authorities_path
    and follow the link. The url has the authority short name in it.
  %code= raw api_example_authority_url_html
  %p.apiexamples
    = link_to "view example", api_example_authority_url
    |
    = link_to "view on a map", mapify(api_example_authority_url + "&style=html", 11)
.apiitem
  %h5
    Postcode
  %p.apidefinition
    Return applications for a specific postcode area
  %code= raw api_example_postcode_url_html
  %p.apiexamples
    = link_to "view example", api_example_postcode_url
    |
    = link_to "view on a map", mapify(api_example_postcode_url + "&style=html", 13)
.apiitem
  %h5
    Suburb
  %p.apidefinition
    Return applications in a suburb. Including "state" in the search is optional.
  %code= raw api_example_suburb_and_state_url_html
  %p.apiexamples
    = link_to "view example", api_example_suburb_and_state_url
    |
    = link_to "view on a map", mapify(api_example_suburb_and_state_url + "&style=html", 13)

%h4#hLicenseInfo
  License information
%p
  Data via the api is licensed under the
  <a href="http://creativecommons.org/licenses/by-sa/3.0/">Creative Commons Attribution-Share Alike 3.0 license</a>.
