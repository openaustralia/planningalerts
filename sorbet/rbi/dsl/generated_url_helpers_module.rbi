# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for dynamic methods in `GeneratedUrlHelpersModule`.
# Please instead update this file by running `bin/tapioca dsl GeneratedUrlHelpersModule`.

module GeneratedUrlHelpersModule
  include ::ActionDispatch::Routing::UrlFor
  include ::ActionDispatch::Routing::PolymorphicRoutes

  sig { params(args: T.untyped).returns(String) }
  def about_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def address_applications_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def admin_alert_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def admin_alerts_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def admin_api_key_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def admin_api_keys_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def admin_api_usages_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def admin_application_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def admin_applications_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def admin_authorities_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def admin_authority_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def admin_background_jobs_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def admin_comment_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def admin_comments_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def admin_report_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def admin_reports_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def admin_root_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def admin_site_settings_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def admin_user_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def admin_users_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def alert_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def alerts_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def api_howto_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def application_comments_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def application_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def application_versions_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def applications_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def atdis_feed_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def atdis_specification_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def atdis_test_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def authorities_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def authority_applications_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def authority_comments_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def authority_under_the_hood_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def authority_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def cancel_user_registration_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def comment_reports_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def comments_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def confirm_admin_comment_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def confirmed_alert_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def confirmed_comment_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def cuttlefish_event_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def destroy_user_session_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def donations_create_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def donations_new_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def donations_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def edit_admin_api_key_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def edit_admin_authority_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def edit_admin_comment_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def edit_admin_user_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def edit_alert_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def edit_rails_conductor_inbound_email_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def edit_user_password_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def edit_user_registration_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def export_active_emails_admin_alerts_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def faq_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def get_involved_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def how_to_lobby_your_local_council_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def how_to_write_a_scraper_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def import_admin_authority_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def nearby_application_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def new_admin_authority_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def new_alert_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def new_comment_report_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def new_rails_conductor_inbound_email_source_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def new_rails_conductor_inbound_email_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def new_user_confirmation_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def new_user_password_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def new_user_registration_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def new_user_session_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def per_day_authority_applications_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def per_week_authority_applications_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def per_week_authority_comments_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def rails_blob_representation_proxy_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def rails_blob_representation_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def rails_blob_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def rails_conductor_inbound_email_incinerate_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def rails_conductor_inbound_email_reroute_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def rails_conductor_inbound_email_sources_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def rails_conductor_inbound_email_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def rails_conductor_inbound_emails_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def rails_direct_uploads_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def rails_disk_service_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def rails_mailgun_inbound_emails_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def rails_mandrill_inbound_emails_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def rails_mandrill_inbound_health_check_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def rails_postmark_inbound_emails_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def rails_relay_inbound_emails_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def rails_representation_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def rails_sendgrid_inbound_emails_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def rails_service_blob_proxy_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def rails_service_blob_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def rails_storage_proxy_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def rails_storage_redirect_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def resend_admin_comment_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def root_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def search_applications_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def sidekiq_web_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def toggle_theme_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def trending_applications_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def unsubscribe_admin_alert_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def unsubscribe_alert_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def update_rails_disk_service_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def user_confirmation_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def user_password_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def user_registration_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def user_session_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def users_alerts_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def users_api_keys_url(*args); end
end
