# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for types exported from the `bootstrap_form` gem.
# Please instead update this file by running `bin/tapioca gem bootstrap_form`.

# require 'bootstrap_form/aliasing'
#
# source://bootstrap_form//lib/bootstrap_form/action_view_extensions/form_helper.rb#3
module BootstrapForm
  extend ::ActiveSupport::Autoload

  # source://bootstrap_form//lib/bootstrap_form.rb#41
  def field_error_proc; end

  # source://bootstrap_form//lib/bootstrap_form.rb#41
  def field_error_proc=(val); end

  class << self
    # source://bootstrap_form//lib/bootstrap_form.rb#32
    def config; end

    # @yield [config]
    #
    # source://bootstrap_form//lib/bootstrap_form.rb#36
    def configure; end

    # source://bootstrap_form//lib/bootstrap_form.rb#25
    def eager_load!; end

    # source://bootstrap_form//lib/bootstrap_form.rb#41
    def field_error_proc; end

    # source://bootstrap_form//lib/bootstrap_form.rb#41
    def field_error_proc=(val); end
  end
end

# source://bootstrap_form//lib/bootstrap_form/action_view_extensions/form_helper.rb#4
module BootstrapForm::ActionViewExtensions; end

# This module creates BootstrapForm wrappers around the default form_with
# and form_for methods
#
# Example:
#
#   bootstrap_form_for @user do |f|
#     f.text_field :name
#   end
#
# Example:
#
#   bootstrap_form_with model: @user do |f|
#     f.text_field :name
#   end
#
# source://bootstrap_form//lib/bootstrap_form/action_view_extensions/form_helper.rb#19
module BootstrapForm::ActionViewExtensions::FormHelper
  # source://bootstrap_form//lib/bootstrap_form/action_view_extensions/form_helper.rb#20
  def bootstrap_form_for(record, options = T.unsafe(nil), &block); end

  # source://bootstrap_form//lib/bootstrap_form/action_view_extensions/form_helper.rb#36
  def bootstrap_form_tag(options = T.unsafe(nil), &block); end

  # source://bootstrap_form//lib/bootstrap_form/action_view_extensions/form_helper.rb#28
  def bootstrap_form_with(options = T.unsafe(nil), &block); end

  private

  # source://bootstrap_form//lib/bootstrap_form/action_view_extensions/form_helper.rb#44
  def with_bootstrap_form_field_error_proc; end
end

# source://bootstrap_form//lib/bootstrap_form/components.rb#4
module BootstrapForm::Components
  include ::BootstrapForm::Components::Hints
  include ::BootstrapForm::Components::Labels
  include ::BootstrapForm::Components::Layout
  include ::BootstrapForm::Components::Validation
  extend ::ActiveSupport::Autoload
end

# source://bootstrap_form//lib/bootstrap_form/components/hints.rb#5
module BootstrapForm::Components::Hints
  extend ::ActiveSupport::Concern

  private

  # source://bootstrap_form//lib/bootstrap_form/components/hints.rb#10
  def generate_help(name, help_text); end

  # source://bootstrap_form//lib/bootstrap_form/components/hints.rb#20
  def get_help_text_by_i18n_key(name); end

  # source://bootstrap_form//lib/bootstrap_form/components/hints.rb#41
  def object_class; end

  # source://bootstrap_form//lib/bootstrap_form/components/hints.rb#50
  def scoped_help_text(name, partial_scope); end

  # source://bootstrap_form//lib/bootstrap_form/components/hints.rb#64
  def translated_help_text(name, scope); end
end

# source://bootstrap_form//lib/bootstrap_form/components/labels.rb#5
module BootstrapForm::Components::Labels
  extend ::ActiveSupport::Concern

  private

  # source://bootstrap_form//lib/bootstrap_form/components/labels.rb#10
  def generate_label(id, name, options, custom_label_col, group_layout); end

  # source://bootstrap_form//lib/bootstrap_form/components/labels.rb#25
  def label_classes(name, options, custom_label_col, group_layout); end

  # source://bootstrap_form//lib/bootstrap_form/components/labels.rb#39
  def label_layout_classes(custom_label_col, group_layout); end

  # source://bootstrap_form//lib/bootstrap_form/components/labels.rb#47
  def label_text(name, options); end
end

# source://bootstrap_form//lib/bootstrap_form/components/layout.rb#5
module BootstrapForm::Components::Layout
  extend ::ActiveSupport::Concern

  private

  # @return [Boolean]
  #
  # source://bootstrap_form//lib/bootstrap_form/components/layout.rb#22
  def field_inline_override?(field_layout = T.unsafe(nil)); end

  # source://bootstrap_form//lib/bootstrap_form/components/layout.rb#34
  def get_group_layout(group_layout); end

  # @return [Boolean]
  #
  # source://bootstrap_form//lib/bootstrap_form/components/layout.rb#10
  def layout_default?(field_layout = T.unsafe(nil)); end

  # @return [Boolean]
  #
  # source://bootstrap_form//lib/bootstrap_form/components/layout.rb#14
  def layout_horizontal?(field_layout = T.unsafe(nil)); end

  # true and false should only come from check_box and radio_button,
  # and those don't have a :horizontal layout
  #
  # source://bootstrap_form//lib/bootstrap_form/components/layout.rb#28
  def layout_in_effect(field_layout); end

  # @return [Boolean]
  #
  # source://bootstrap_form//lib/bootstrap_form/components/layout.rb#18
  def layout_inline?(field_layout = T.unsafe(nil)); end
end

# source://bootstrap_form//lib/bootstrap_form/components/validation.rb#5
module BootstrapForm::Components::Validation
  extend ::ActiveSupport::Concern

  private

  # @return [Boolean]
  #
  # source://bootstrap_form//lib/bootstrap_form/components/validation.rb#10
  def error?(name); end

  # source://bootstrap_form//lib/bootstrap_form/components/validation.rb#46
  def generate_error(name); end

  # source://bootstrap_form//lib/bootstrap_form/components/validation.rb#56
  def get_error_messages(name); end

  # @return [Boolean]
  #
  # source://bootstrap_form//lib/bootstrap_form/components/validation.rb#42
  def inline_error?(name); end

  # @return [Boolean]
  #
  # source://bootstrap_form//lib/bootstrap_form/components/validation.rb#28
  def presence_validator?(target_validators); end

  # @return [Boolean]
  #
  # source://bootstrap_form//lib/bootstrap_form/components/validation.rb#14
  def required_attribute?(obj, attribute); end
end

# source://bootstrap_form//lib/bootstrap_form/configuration.rb#4
class BootstrapForm::Configuration
  # source://bootstrap_form//lib/bootstrap_form/configuration.rb#16
  def default_form_attributes; end

  # source://bootstrap_form//lib/bootstrap_form/configuration.rb#5
  def default_form_attributes=(attributes); end
end

# source://bootstrap_form//lib/bootstrap_form/engine.rb#6
class BootstrapForm::Engine < ::Rails::Engine; end

# source://bootstrap_form//lib/bootstrap_form/form_builder.rb#4
class BootstrapForm::FormBuilder < ::ActionView::Helpers::FormBuilder
  include ::BootstrapForm::Helpers::Bootstrap
  include ::BootstrapForm::FormGroupBuilder
  include ::BootstrapForm::FormGroup
  include ::BootstrapForm::Components::Hints
  include ::BootstrapForm::Components::Labels
  include ::BootstrapForm::Components::Layout
  include ::BootstrapForm::Components::Validation
  include ::BootstrapForm::Components
  include ::BootstrapForm::Inputs::Base
  include ::BootstrapForm::Inputs::CheckBox
  include ::BootstrapForm::Inputs::InputsCollection
  include ::BootstrapForm::Inputs::CollectionCheckBoxes
  include ::BootstrapForm::Inputs::CollectionRadioButtons
  include ::BootstrapForm::Inputs::CollectionSelect
  include ::BootstrapForm::Inputs::ColorField
  include ::BootstrapForm::Inputs::DateField
  include ::BootstrapForm::Inputs::DateSelect
  include ::BootstrapForm::Inputs::DatetimeField
  include ::BootstrapForm::Inputs::DatetimeLocalField
  include ::BootstrapForm::Inputs::DatetimeSelect
  include ::BootstrapForm::Inputs::EmailField
  include ::BootstrapForm::Inputs::FileField
  include ::BootstrapForm::Inputs::GroupedCollectionSelect
  include ::BootstrapForm::Inputs::MonthField
  include ::BootstrapForm::Inputs::NumberField
  include ::BootstrapForm::Inputs::PasswordField
  include ::BootstrapForm::Inputs::PhoneField
  include ::BootstrapForm::Inputs::RadioButton
  include ::BootstrapForm::Inputs::RangeField
  include ::BootstrapForm::Inputs::RichTextArea
  include ::BootstrapForm::Inputs::SearchField
  include ::BootstrapForm::Inputs::Select
  include ::BootstrapForm::Inputs::TelephoneField
  include ::BootstrapForm::Inputs::TextArea
  include ::BootstrapForm::Inputs::TextField
  include ::BootstrapForm::Inputs::TimeField
  include ::BootstrapForm::Inputs::TimeSelect
  include ::BootstrapForm::Inputs::TimeZoneSelect
  include ::BootstrapForm::Inputs::UrlField
  include ::BootstrapForm::Inputs::WeekField
  extend ::BootstrapForm::Inputs::Base::ClassMethods

  # @return [FormBuilder] a new instance of FormBuilder
  #
  # source://bootstrap_form//lib/bootstrap_form/form_builder.rb#48
  def initialize(object_name, object, template, options); end

  # Returns the value of attribute acts_like_form_tag.
  #
  # source://bootstrap_form//lib/bootstrap_form/form_builder.rb#5
  def acts_like_form_tag; end

  # source://bootstrap_form//lib/bootstrap_form/form_builder.rb#64
  def add_default_form_attributes_and_form_inline(options); end

  # source://bootstrap_form//lib/bootstrap_form/form_builder.rb#46
  def capture(*_arg0, &_arg1); end

  # source://bootstrap_form//lib/bootstrap_form/inputs/check_box.rb#10
  def check_box(name, options = T.unsafe(nil), checked_value = T.unsafe(nil), unchecked_value = T.unsafe(nil), &block); end

  # source://bootstrap_form//lib/bootstrap_form/inputs/check_box.rb#10
  def check_box_with_bootstrap(name, options = T.unsafe(nil), checked_value = T.unsafe(nil), unchecked_value = T.unsafe(nil), &block); end

  # source://actionview/6.1.4.1/lib/action_view/helpers/form_helper.rb#2335
  def check_box_without_bootstrap(method, options = T.unsafe(nil), checked_value = T.unsafe(nil), unchecked_value = T.unsafe(nil)); end

  # source://bootstrap_form//lib/bootstrap_form/inputs/collection_check_boxes.rb#11
  def collection_check_boxes(*args); end

  # source://bootstrap_form//lib/bootstrap_form/inputs/collection_check_boxes.rb#11
  def collection_check_boxes_with_bootstrap(*args); end

  # source://actionview/6.1.4.1/lib/action_view/helpers/form_options_helper.rb#870
  def collection_check_boxes_without_bootstrap(method, collection, value_method, text_method, options = T.unsafe(nil), html_options = T.unsafe(nil), &block); end

  # source://bootstrap_form//lib/bootstrap_form/inputs/collection_radio_buttons.rb#11
  def collection_radio_buttons(*args); end

  # source://bootstrap_form//lib/bootstrap_form/inputs/collection_radio_buttons.rb#11
  def collection_radio_buttons_with_bootstrap(*args); end

  # source://actionview/6.1.4.1/lib/action_view/helpers/form_options_helper.rb#882
  def collection_radio_buttons_without_bootstrap(method, collection, value_method, text_method, options = T.unsafe(nil), html_options = T.unsafe(nil), &block); end

  # source://bootstrap_form//lib/bootstrap_form/inputs/collection_select.rb#12
  def collection_select(method, collection, value_method, text_method, options = T.unsafe(nil), html_options = T.unsafe(nil)); end

  # source://bootstrap_form//lib/bootstrap_form/inputs/collection_select.rb#12
  def collection_select_with_bootstrap(method, collection, value_method, text_method, options = T.unsafe(nil), html_options = T.unsafe(nil)); end

  # source://actionview/6.1.4.1/lib/action_view/helpers/form_options_helper.rb#834
  def collection_select_without_bootstrap(method, collection, value_method, text_method, options = T.unsafe(nil), html_options = T.unsafe(nil)); end

  # source://bootstrap_form//lib/bootstrap_form/inputs/base.rb#10
  def color_field(name, options = T.unsafe(nil)); end

  # source://bootstrap_form//lib/bootstrap_form/inputs/base.rb#10
  def color_field_with_bootstrap(name, options = T.unsafe(nil)); end

  # source://actionview/6.1.4.1/lib/action_view/helpers/form_helper.rb#1911
  def color_field_without_bootstrap(method, options = T.unsafe(nil)); end

  # source://bootstrap_form//lib/bootstrap_form/form_builder.rb#46
  def concat(*_arg0, &_arg1); end

  # source://bootstrap_form//lib/bootstrap_form/form_builder.rb#46
  def content_tag(*_arg0, &_arg1); end

  # Returns the value of attribute control_col.
  #
  # source://bootstrap_form//lib/bootstrap_form/form_builder.rb#5
  def control_col; end

  # source://bootstrap_form//lib/bootstrap_form/inputs/base.rb#10
  def date_field(name, options = T.unsafe(nil)); end

  # source://bootstrap_form//lib/bootstrap_form/inputs/base.rb#10
  def date_field_with_bootstrap(name, options = T.unsafe(nil)); end

  # source://actionview/6.1.4.1/lib/action_view/helpers/form_helper.rb#1911
  def date_field_without_bootstrap(method, options = T.unsafe(nil)); end

  # source://bootstrap_form//lib/bootstrap_form/inputs/base.rb#23
  def date_select(name, options = T.unsafe(nil), html_options = T.unsafe(nil)); end

  # source://bootstrap_form//lib/bootstrap_form/inputs/base.rb#23
  def date_select_with_bootstrap(name, options = T.unsafe(nil), html_options = T.unsafe(nil)); end

  # source://actionview/6.1.4.1/lib/action_view/helpers/date_helper.rb#1170
  def date_select_without_bootstrap(method, options = T.unsafe(nil), html_options = T.unsafe(nil)); end

  # source://bootstrap_form//lib/bootstrap_form/inputs/base.rb#10
  def datetime_field(name, options = T.unsafe(nil)); end

  # source://bootstrap_form//lib/bootstrap_form/inputs/base.rb#10
  def datetime_field_with_bootstrap(name, options = T.unsafe(nil)); end

  # source://actionview/6.1.4.1/lib/action_view/helpers/form_helper.rb#1911
  def datetime_field_without_bootstrap(method, options = T.unsafe(nil)); end

  # source://bootstrap_form//lib/bootstrap_form/inputs/base.rb#10
  def datetime_local_field(name, options = T.unsafe(nil)); end

  # source://bootstrap_form//lib/bootstrap_form/inputs/base.rb#10
  def datetime_local_field_with_bootstrap(name, options = T.unsafe(nil)); end

  # source://actionview/6.1.4.1/lib/action_view/helpers/form_helper.rb#1911
  def datetime_local_field_without_bootstrap(method, options = T.unsafe(nil)); end

  # source://bootstrap_form//lib/bootstrap_form/inputs/base.rb#23
  def datetime_select(name, options = T.unsafe(nil), html_options = T.unsafe(nil)); end

  # source://bootstrap_form//lib/bootstrap_form/inputs/base.rb#23
  def datetime_select_with_bootstrap(name, options = T.unsafe(nil), html_options = T.unsafe(nil)); end

  # source://actionview/6.1.4.1/lib/action_view/helpers/date_helper.rb#1194
  def datetime_select_without_bootstrap(method, options = T.unsafe(nil), html_options = T.unsafe(nil)); end

  # source://bootstrap_form//lib/bootstrap_form/inputs/base.rb#10
  def email_field(name, options = T.unsafe(nil)); end

  # source://bootstrap_form//lib/bootstrap_form/inputs/base.rb#10
  def email_field_with_bootstrap(name, options = T.unsafe(nil)); end

  # source://actionview/6.1.4.1/lib/action_view/helpers/form_helper.rb#1911
  def email_field_without_bootstrap(method, options = T.unsafe(nil)); end

  # source://bootstrap_form//lib/bootstrap_form/form_builder.rb#75
  def fields_for(record_name, record_object = T.unsafe(nil), fields_options = T.unsafe(nil), &block); end

  # source://bootstrap_form//lib/bootstrap_form/form_builder.rb#75
  def fields_for_with_bootstrap(record_name, record_object = T.unsafe(nil), fields_options = T.unsafe(nil), &block); end

  # source://actionview/6.1.4.1/lib/action_view/helpers/form_helper.rb#2162
  def fields_for_without_bootstrap(record_name, record_object = T.unsafe(nil), fields_options = T.unsafe(nil), &block); end

  # source://bootstrap_form//lib/bootstrap_form/inputs/file_field.rb#10
  def file_field(name, options = T.unsafe(nil)); end

  # source://bootstrap_form//lib/bootstrap_form/inputs/file_field.rb#10
  def file_field_with_bootstrap(name, options = T.unsafe(nil)); end

  # source://actionview/6.1.4.1/lib/action_view/helpers/form_helper.rb#2417
  def file_field_without_bootstrap(method, options = T.unsafe(nil)); end

  # source://bootstrap_form//lib/bootstrap_form/inputs/grouped_collection_select.rb#12
  def grouped_collection_select(method, collection, group_method, group_label_method, option_key_method, option_value_method, options = T.unsafe(nil), html_options = T.unsafe(nil)); end

  # source://bootstrap_form//lib/bootstrap_form/inputs/grouped_collection_select.rb#12
  def grouped_collection_select_with_bootstrap(method, collection, group_method, group_label_method, option_key_method, option_value_method, options = T.unsafe(nil), html_options = T.unsafe(nil)); end

  # source://actionview/6.1.4.1/lib/action_view/helpers/form_options_helper.rb#846
  def grouped_collection_select_without_bootstrap(method, collection, group_method, group_label_method, option_key_method, option_value_method, options = T.unsafe(nil), html_options = T.unsafe(nil)); end

  # Returns the value of attribute has_error.
  #
  # source://bootstrap_form//lib/bootstrap_form/form_builder.rb#5
  def has_error; end

  # Returns the value of attribute inline_errors.
  #
  # source://bootstrap_form//lib/bootstrap_form/form_builder.rb#5
  def inline_errors; end

  # Returns the value of attribute label_col.
  #
  # source://bootstrap_form//lib/bootstrap_form/form_builder.rb#5
  def label_col; end

  # Returns the value of attribute label_errors.
  #
  # source://bootstrap_form//lib/bootstrap_form/form_builder.rb#5
  def label_errors; end

  # Returns the value of attribute layout.
  #
  # source://bootstrap_form//lib/bootstrap_form/form_builder.rb#5
  def layout; end

  # source://bootstrap_form//lib/bootstrap_form/inputs/base.rb#10
  def month_field(name, options = T.unsafe(nil)); end

  # source://bootstrap_form//lib/bootstrap_form/inputs/base.rb#10
  def month_field_with_bootstrap(name, options = T.unsafe(nil)); end

  # source://actionview/6.1.4.1/lib/action_view/helpers/form_helper.rb#1911
  def month_field_without_bootstrap(method, options = T.unsafe(nil)); end

  # source://bootstrap_form//lib/bootstrap_form/inputs/base.rb#10
  def number_field(name, options = T.unsafe(nil)); end

  # source://bootstrap_form//lib/bootstrap_form/inputs/base.rb#10
  def number_field_with_bootstrap(name, options = T.unsafe(nil)); end

  # source://actionview/6.1.4.1/lib/action_view/helpers/form_helper.rb#1911
  def number_field_without_bootstrap(method, options = T.unsafe(nil)); end

  # source://bootstrap_form//lib/bootstrap_form/inputs/base.rb#10
  def password_field(name, options = T.unsafe(nil)); end

  # source://bootstrap_form//lib/bootstrap_form/inputs/base.rb#10
  def password_field_with_bootstrap(name, options = T.unsafe(nil)); end

  # source://actionview/6.1.4.1/lib/action_view/helpers/form_helper.rb#1911
  def password_field_without_bootstrap(method, options = T.unsafe(nil)); end

  # source://bootstrap_form//lib/bootstrap_form/inputs/base.rb#10
  def phone_field(name, options = T.unsafe(nil)); end

  # source://bootstrap_form//lib/bootstrap_form/inputs/base.rb#10
  def phone_field_with_bootstrap(name, options = T.unsafe(nil)); end

  # source://actionview/6.1.4.1/lib/action_view/helpers/form_helper.rb#1911
  def phone_field_without_bootstrap(method, options = T.unsafe(nil)); end

  # source://bootstrap_form//lib/bootstrap_form/inputs/radio_button.rb#10
  def radio_button(name, value, *args); end

  # source://bootstrap_form//lib/bootstrap_form/inputs/radio_button.rb#10
  def radio_button_with_bootstrap(name, value, *args); end

  # source://actionview/6.1.4.1/lib/action_view/helpers/form_helper.rb#2357
  def radio_button_without_bootstrap(method, tag_value, options = T.unsafe(nil)); end

  # source://bootstrap_form//lib/bootstrap_form/inputs/base.rb#10
  def range_field(name, options = T.unsafe(nil)); end

  # source://bootstrap_form//lib/bootstrap_form/inputs/base.rb#10
  def range_field_with_bootstrap(name, options = T.unsafe(nil)); end

  # source://actionview/6.1.4.1/lib/action_view/helpers/form_helper.rb#1911
  def range_field_without_bootstrap(method, options = T.unsafe(nil)); end

  # source://bootstrap_form//lib/bootstrap_form/inputs/rich_text_area.rb#10
  def rich_text_area(name, options = T.unsafe(nil)); end

  # source://bootstrap_form//lib/bootstrap_form/inputs/rich_text_area.rb#10
  def rich_text_area_with_bootstrap(name, options = T.unsafe(nil)); end

  def rich_text_area_without_bootstrap(method, options = T.unsafe(nil)); end

  # source://bootstrap_form//lib/bootstrap_form/inputs/base.rb#10
  def search_field(name, options = T.unsafe(nil)); end

  # source://bootstrap_form//lib/bootstrap_form/inputs/base.rb#10
  def search_field_with_bootstrap(name, options = T.unsafe(nil)); end

  # source://actionview/6.1.4.1/lib/action_view/helpers/form_helper.rb#1911
  def search_field_without_bootstrap(method, options = T.unsafe(nil)); end

  # source://bootstrap_form//lib/bootstrap_form/inputs/select.rb#10
  def select(method, choices = T.unsafe(nil), options = T.unsafe(nil), html_options = T.unsafe(nil), &block); end

  # source://bootstrap_form//lib/bootstrap_form/inputs/select.rb#10
  def select_with_bootstrap(method, choices = T.unsafe(nil), options = T.unsafe(nil), html_options = T.unsafe(nil), &block); end

  # source://actionview/6.1.4.1/lib/action_view/helpers/form_options_helper.rb#822
  def select_without_bootstrap(method, choices = T.unsafe(nil), options = T.unsafe(nil), html_options = T.unsafe(nil), &block); end

  # source://bootstrap_form//lib/bootstrap_form/form_builder.rb#46
  def tag(*_arg0, &_arg1); end

  # source://bootstrap_form//lib/bootstrap_form/inputs/base.rb#10
  def telephone_field(name, options = T.unsafe(nil)); end

  # source://bootstrap_form//lib/bootstrap_form/inputs/base.rb#10
  def telephone_field_with_bootstrap(name, options = T.unsafe(nil)); end

  # source://actionview/6.1.4.1/lib/action_view/helpers/form_helper.rb#1911
  def telephone_field_without_bootstrap(method, options = T.unsafe(nil)); end

  # source://bootstrap_form//lib/bootstrap_form/inputs/base.rb#10
  def text_area(name, options = T.unsafe(nil)); end

  # source://bootstrap_form//lib/bootstrap_form/inputs/base.rb#10
  def text_area_with_bootstrap(name, options = T.unsafe(nil)); end

  # source://actionview/6.1.4.1/lib/action_view/helpers/form_helper.rb#1911
  def text_area_without_bootstrap(method, options = T.unsafe(nil)); end

  # source://bootstrap_form//lib/bootstrap_form/inputs/base.rb#10
  def text_field(name, options = T.unsafe(nil)); end

  # source://bootstrap_form//lib/bootstrap_form/inputs/base.rb#10
  def text_field_with_bootstrap(name, options = T.unsafe(nil)); end

  # source://actionview/6.1.4.1/lib/action_view/helpers/form_helper.rb#1911
  def text_field_without_bootstrap(method, options = T.unsafe(nil)); end

  # source://bootstrap_form//lib/bootstrap_form/inputs/base.rb#10
  def time_field(name, options = T.unsafe(nil)); end

  # source://bootstrap_form//lib/bootstrap_form/inputs/base.rb#10
  def time_field_with_bootstrap(name, options = T.unsafe(nil)); end

  # source://actionview/6.1.4.1/lib/action_view/helpers/form_helper.rb#1911
  def time_field_without_bootstrap(method, options = T.unsafe(nil)); end

  # source://bootstrap_form//lib/bootstrap_form/inputs/base.rb#23
  def time_select(name, options = T.unsafe(nil), html_options = T.unsafe(nil)); end

  # source://bootstrap_form//lib/bootstrap_form/inputs/base.rb#23
  def time_select_with_bootstrap(name, options = T.unsafe(nil), html_options = T.unsafe(nil)); end

  # source://actionview/6.1.4.1/lib/action_view/helpers/date_helper.rb#1182
  def time_select_without_bootstrap(method, options = T.unsafe(nil), html_options = T.unsafe(nil)); end

  # source://bootstrap_form//lib/bootstrap_form/inputs/time_zone_select.rb#10
  def time_zone_select(method, priority_zones = T.unsafe(nil), options = T.unsafe(nil), html_options = T.unsafe(nil)); end

  # source://bootstrap_form//lib/bootstrap_form/inputs/time_zone_select.rb#10
  def time_zone_select_with_bootstrap(method, priority_zones = T.unsafe(nil), options = T.unsafe(nil), html_options = T.unsafe(nil)); end

  # source://actionview/6.1.4.1/lib/action_view/helpers/form_options_helper.rb#858
  def time_zone_select_without_bootstrap(method, priority_zones = T.unsafe(nil), options = T.unsafe(nil), html_options = T.unsafe(nil)); end

  # source://bootstrap_form//lib/bootstrap_form/inputs/base.rb#10
  def url_field(name, options = T.unsafe(nil)); end

  # source://bootstrap_form//lib/bootstrap_form/inputs/base.rb#10
  def url_field_with_bootstrap(name, options = T.unsafe(nil)); end

  # source://actionview/6.1.4.1/lib/action_view/helpers/form_helper.rb#1911
  def url_field_without_bootstrap(method, options = T.unsafe(nil)); end

  # source://bootstrap_form//lib/bootstrap_form/inputs/base.rb#10
  def week_field(name, options = T.unsafe(nil)); end

  # source://bootstrap_form//lib/bootstrap_form/inputs/base.rb#10
  def week_field_with_bootstrap(name, options = T.unsafe(nil)); end

  # source://actionview/6.1.4.1/lib/action_view/helpers/form_helper.rb#1911
  def week_field_without_bootstrap(method, options = T.unsafe(nil)); end

  private

  # source://bootstrap_form//lib/bootstrap_form/form_builder.rb#120
  def control_class; end

  # source://bootstrap_form//lib/bootstrap_form/form_builder.rb#128
  def control_specific_class(method); end

  # source://bootstrap_form//lib/bootstrap_form/form_builder.rb#112
  def default_control_col; end

  # source://bootstrap_form//lib/bootstrap_form/form_builder.rb#104
  def default_label_col; end

  # source://bootstrap_form//lib/bootstrap_form/form_builder.rb#99
  def default_layout; end

  # source://bootstrap_form//lib/bootstrap_form/form_builder.rb#124
  def feedback_class; end

  # source://bootstrap_form//lib/bootstrap_form/form_builder.rb#89
  def fields_for_options(record_object, fields_options); end

  # source://bootstrap_form//lib/bootstrap_form/form_builder.rb#116
  def hide_class; end

  # source://bootstrap_form//lib/bootstrap_form/form_builder.rb#108
  def offset_col(label_col); end
end

# source://bootstrap_form//lib/bootstrap_form/form_group.rb#4
module BootstrapForm::FormGroup
  extend ::ActiveSupport::Concern

  # source://bootstrap_form//lib/bootstrap_form/form_group.rb#7
  def form_group(*args, &block); end

  private

  # @return [Boolean]
  #
  # source://bootstrap_form//lib/bootstrap_form/form_group.rb#75
  def classes_include_gutters?(classes); end

  # source://bootstrap_form//lib/bootstrap_form/form_group.rb#54
  def form_group_classes(options); end

  # source://bootstrap_form//lib/bootstrap_form/form_group.rb#35
  def form_group_content(label, help_text, options, &block); end

  # source://bootstrap_form//lib/bootstrap_form/form_group.rb#25
  def form_group_content_tag(name, field_name, without_field_name, options, html_options); end

  # source://bootstrap_form//lib/bootstrap_form/form_group.rb#47
  def form_group_control_class(options); end

  # source://bootstrap_form//lib/bootstrap_form/form_group.rb#63
  def form_group_default_class; end

  # @return [Boolean]
  #
  # source://bootstrap_form//lib/bootstrap_form/form_group.rb#71
  def group_layout_horizontal?(layout); end

  # @return [Boolean]
  #
  # source://bootstrap_form//lib/bootstrap_form/form_group.rb#67
  def horizontal_group_with_gutters?(layout, classes); end
end

# source://bootstrap_form//lib/bootstrap_form/form_group_builder.rb#4
module BootstrapForm::FormGroupBuilder
  extend ::ActiveSupport::Concern

  private

  # source://bootstrap_form//lib/bootstrap_form/form_group_builder.rb#35
  def convert_form_tag_options(method, options = T.unsafe(nil)); end

  # source://bootstrap_form//lib/bootstrap_form/form_group_builder.rb#9
  def form_group_builder(method, options, html_options = T.unsafe(nil), &block); end

  # source://bootstrap_form//lib/bootstrap_form/form_group_builder.rb#28
  def form_group_builder_options(options, method); end

  # source://bootstrap_form//lib/bootstrap_form/form_group_builder.rb#87
  def form_group_css_options(method, html_options, options); end

  # source://bootstrap_form//lib/bootstrap_form/form_group_builder.rb#58
  def form_group_label(options, css_options); end

  # source://bootstrap_form//lib/bootstrap_form/form_group_builder.rb#72
  def form_group_label_class(options); end

  # source://bootstrap_form//lib/bootstrap_form/form_group_builder.rb#66
  def form_group_label_text(label); end

  # source://bootstrap_form//lib/bootstrap_form/form_group_builder.rb#43
  def form_group_opts(options, css_options); end

  # source://bootstrap_form//lib/bootstrap_form/form_group_builder.rb#97
  def form_group_placeholder(options, method); end

  # source://bootstrap_form//lib/bootstrap_form/form_group_builder.rb#80
  def form_group_required(options); end
end

# source://bootstrap_form//lib/bootstrap_form/helpers.rb#4
module BootstrapForm::Helpers
  extend ::ActiveSupport::Autoload
end

# source://bootstrap_form//lib/bootstrap_form/helpers/bootstrap.rb#3
module BootstrapForm::Helpers::Bootstrap
  # source://bootstrap_form//lib/bootstrap_form/helpers/bootstrap.rb#25
  def alert_message(title, options = T.unsafe(nil)); end

  # source://bootstrap_form//lib/bootstrap_form/helpers/bootstrap.rb#4
  def button(value = T.unsafe(nil), options = T.unsafe(nil), &block); end

  # source://bootstrap_form//lib/bootstrap_form/helpers/bootstrap.rb#78
  def custom_control(*args, &block); end

  # source://bootstrap_form//lib/bootstrap_form/helpers/bootstrap.rb#39
  def error_summary; end

  # source://bootstrap_form//lib/bootstrap_form/helpers/bootstrap.rb#49
  def errors_on(name, options = T.unsafe(nil)); end

  # source://bootstrap_form//lib/bootstrap_form/helpers/bootstrap.rb#102
  def input_group_content(content); end

  # source://bootstrap_form//lib/bootstrap_form/helpers/bootstrap.rb#97
  def input_with_error(name, &block); end

  # source://bootstrap_form//lib/bootstrap_form/helpers/bootstrap.rb#85
  def prepend_and_append_input(name, options, &block); end

  # source://bootstrap_form//lib/bootstrap_form/helpers/bootstrap.rb#14
  def primary(name = T.unsafe(nil), options = T.unsafe(nil), &block); end

  # source://bootstrap_form//lib/bootstrap_form/helpers/bootstrap.rb#108
  def static_class; end

  # source://bootstrap_form//lib/bootstrap_form/helpers/bootstrap.rb#64
  def static_control(*args); end

  # source://bootstrap_form//lib/bootstrap_form/helpers/bootstrap.rb#9
  def submit(name = T.unsafe(nil), options = T.unsafe(nil)); end

  private

  # source://bootstrap_form//lib/bootstrap_form/helpers/bootstrap.rb#114
  def attach_input(options, key); end

  # source://bootstrap_form//lib/bootstrap_form/helpers/bootstrap.rb#121
  def setup_css_class(the_class, options = T.unsafe(nil)); end
end

# source://bootstrap_form//lib/bootstrap_form/inputs.rb#4
module BootstrapForm::Inputs
  extend ::ActiveSupport::Autoload
end

# source://bootstrap_form//lib/bootstrap_form/inputs/base.rb#5
module BootstrapForm::Inputs::Base
  extend ::ActiveSupport::Concern

  mixes_in_class_methods ::BootstrapForm::Inputs::Base::ClassMethods
end

# source://bootstrap_form//lib/bootstrap_form/inputs/base.rb#0
module BootstrapForm::Inputs::Base::ClassMethods
  # source://bootstrap_form//lib/bootstrap_form/inputs/base.rb#33
  def bootstrap_alias(field_name); end

  # source://bootstrap_form//lib/bootstrap_form/inputs/base.rb#9
  def bootstrap_field(field_name); end

  # source://bootstrap_form//lib/bootstrap_form/inputs/base.rb#22
  def bootstrap_select_group(field_name); end
end

# source://bootstrap_form//lib/bootstrap_form/inputs/check_box.rb#5
module BootstrapForm::Inputs::CheckBox
  extend ::ActiveSupport::Concern
  include ::BootstrapForm::Inputs::Base

  private

  # source://bootstrap_form//lib/bootstrap_form/inputs/check_box.rb#52
  def check_box_classes(name, options); end

  # source://bootstrap_form//lib/bootstrap_form/inputs/check_box.rb#40
  def check_box_description(name, options, &block); end

  # source://bootstrap_form//lib/bootstrap_form/inputs/check_box.rb#29
  def check_box_label(name, options, checked_value, &block); end

  # source://bootstrap_form//lib/bootstrap_form/inputs/check_box.rb#59
  def check_box_label_class(options); end

  # source://bootstrap_form//lib/bootstrap_form/inputs/check_box.rb#45
  def check_box_value(name, value); end

  # source://bootstrap_form//lib/bootstrap_form/inputs/check_box.rb#66
  def check_box_wrapper_class(options); end
end

# source://bootstrap_form//lib/bootstrap_form/inputs/collection_check_boxes.rb#5
module BootstrapForm::Inputs::CollectionCheckBoxes
  extend ::ActiveSupport::Concern
  include ::BootstrapForm::Inputs::Base
  include ::BootstrapForm::Inputs::InputsCollection
end

# source://bootstrap_form//lib/bootstrap_form/inputs/collection_radio_buttons.rb#5
module BootstrapForm::Inputs::CollectionRadioButtons
  extend ::ActiveSupport::Concern
  include ::BootstrapForm::Inputs::Base
  include ::BootstrapForm::Inputs::InputsCollection
end

# source://bootstrap_form//lib/bootstrap_form/inputs/collection_select.rb#5
module BootstrapForm::Inputs::CollectionSelect
  extend ::ActiveSupport::Concern
  include ::BootstrapForm::Inputs::Base
end

# source://bootstrap_form//lib/bootstrap_form/inputs/color_field.rb#5
module BootstrapForm::Inputs::ColorField
  extend ::ActiveSupport::Concern
  include ::BootstrapForm::Inputs::Base
end

# source://bootstrap_form//lib/bootstrap_form/inputs/date_field.rb#5
module BootstrapForm::Inputs::DateField
  extend ::ActiveSupport::Concern
  include ::BootstrapForm::Inputs::Base
end

# source://bootstrap_form//lib/bootstrap_form/inputs/date_select.rb#5
module BootstrapForm::Inputs::DateSelect
  extend ::ActiveSupport::Concern
  include ::BootstrapForm::Inputs::Base
end

# source://bootstrap_form//lib/bootstrap_form/inputs/datetime_field.rb#5
module BootstrapForm::Inputs::DatetimeField
  extend ::ActiveSupport::Concern
  include ::BootstrapForm::Inputs::Base
end

# source://bootstrap_form//lib/bootstrap_form/inputs/datetime_local_field.rb#5
module BootstrapForm::Inputs::DatetimeLocalField
  extend ::ActiveSupport::Concern
  include ::BootstrapForm::Inputs::Base
end

# source://bootstrap_form//lib/bootstrap_form/inputs/datetime_select.rb#5
module BootstrapForm::Inputs::DatetimeSelect
  extend ::ActiveSupport::Concern
  include ::BootstrapForm::Inputs::Base
end

# source://bootstrap_form//lib/bootstrap_form/inputs/email_field.rb#5
module BootstrapForm::Inputs::EmailField
  extend ::ActiveSupport::Concern
  include ::BootstrapForm::Inputs::Base
end

# source://bootstrap_form//lib/bootstrap_form/inputs/file_field.rb#5
module BootstrapForm::Inputs::FileField
  extend ::ActiveSupport::Concern
  include ::BootstrapForm::Inputs::Base
end

# source://bootstrap_form//lib/bootstrap_form/inputs/grouped_collection_select.rb#5
module BootstrapForm::Inputs::GroupedCollectionSelect
  extend ::ActiveSupport::Concern
  include ::BootstrapForm::Inputs::Base
end

# source://bootstrap_form//lib/bootstrap_form/inputs/inputs_collection.rb#3
module BootstrapForm::Inputs::InputsCollection
  extend ::ActiveSupport::Concern

  private

  # @return [Boolean]
  #
  # source://bootstrap_form//lib/bootstrap_form/inputs/inputs_collection.rb#38
  def form_group_collection_input_checked?(checked, obj, input_value); end

  # FIXME: Find a way to reduce the parameter list size
  #
  # source://bootstrap_form//lib/bootstrap_form/inputs/inputs_collection.rb#26
  def form_group_collection_input_options(options, text, obj, index, input_value, collection); end

  # source://bootstrap_form//lib/bootstrap_form/inputs/inputs_collection.rb#8
  def inputs_collection(name, collection, value, text, options = T.unsafe(nil)); end
end

# source://bootstrap_form//lib/bootstrap_form/inputs/month_field.rb#5
module BootstrapForm::Inputs::MonthField
  extend ::ActiveSupport::Concern
  include ::BootstrapForm::Inputs::Base
end

# source://bootstrap_form//lib/bootstrap_form/inputs/number_field.rb#5
module BootstrapForm::Inputs::NumberField
  extend ::ActiveSupport::Concern
  include ::BootstrapForm::Inputs::Base
end

# source://bootstrap_form//lib/bootstrap_form/inputs/password_field.rb#5
module BootstrapForm::Inputs::PasswordField
  extend ::ActiveSupport::Concern
  include ::BootstrapForm::Inputs::Base
end

# source://bootstrap_form//lib/bootstrap_form/inputs/phone_field.rb#5
module BootstrapForm::Inputs::PhoneField
  extend ::ActiveSupport::Concern
  include ::BootstrapForm::Inputs::Base
end

# source://bootstrap_form//lib/bootstrap_form/inputs/radio_button.rb#5
module BootstrapForm::Inputs::RadioButton
  extend ::ActiveSupport::Concern
  include ::BootstrapForm::Inputs::Base

  private

  # source://bootstrap_form//lib/bootstrap_form/inputs/radio_button.rb#40
  def radio_button_classes(name, options); end

  # source://bootstrap_form//lib/bootstrap_form/inputs/radio_button.rb#34
  def radio_button_label(name, value, options); end

  # source://bootstrap_form//lib/bootstrap_form/inputs/radio_button.rb#47
  def radio_button_label_class(options); end

  # source://bootstrap_form//lib/bootstrap_form/inputs/radio_button.rb#27
  def radio_button_options(name, options); end

  # source://bootstrap_form//lib/bootstrap_form/inputs/radio_button.rb#54
  def radio_button_wrapper_class(options); end
end

# source://bootstrap_form//lib/bootstrap_form/inputs/range_field.rb#5
module BootstrapForm::Inputs::RangeField
  extend ::ActiveSupport::Concern
  include ::BootstrapForm::Inputs::Base
end

# source://bootstrap_form//lib/bootstrap_form/inputs/rich_text_area.rb#5
module BootstrapForm::Inputs::RichTextArea
  extend ::ActiveSupport::Concern
  include ::BootstrapForm::Inputs::Base
end

# source://bootstrap_form//lib/bootstrap_form/inputs/search_field.rb#5
module BootstrapForm::Inputs::SearchField
  extend ::ActiveSupport::Concern
  include ::BootstrapForm::Inputs::Base
end

# source://bootstrap_form//lib/bootstrap_form/inputs/select.rb#5
module BootstrapForm::Inputs::Select
  extend ::ActiveSupport::Concern
  include ::BootstrapForm::Inputs::Base

  mixes_in_class_methods ::BootstrapForm::Inputs::Base::ClassMethods
end

# source://bootstrap_form//lib/bootstrap_form/inputs/telephone_field.rb#5
module BootstrapForm::Inputs::TelephoneField
  extend ::ActiveSupport::Concern
  include ::BootstrapForm::Inputs::Base
end

# source://bootstrap_form//lib/bootstrap_form/inputs/text_area.rb#5
module BootstrapForm::Inputs::TextArea
  extend ::ActiveSupport::Concern
  include ::BootstrapForm::Inputs::Base
end

# source://bootstrap_form//lib/bootstrap_form/inputs/text_field.rb#5
module BootstrapForm::Inputs::TextField
  extend ::ActiveSupport::Concern
  include ::BootstrapForm::Inputs::Base
end

# source://bootstrap_form//lib/bootstrap_form/inputs/time_field.rb#5
module BootstrapForm::Inputs::TimeField
  extend ::ActiveSupport::Concern
  include ::BootstrapForm::Inputs::Base
end

# source://bootstrap_form//lib/bootstrap_form/inputs/time_select.rb#5
module BootstrapForm::Inputs::TimeSelect
  extend ::ActiveSupport::Concern
  include ::BootstrapForm::Inputs::Base
end

# source://bootstrap_form//lib/bootstrap_form/inputs/time_zone_select.rb#5
module BootstrapForm::Inputs::TimeZoneSelect
  extend ::ActiveSupport::Concern
  include ::BootstrapForm::Inputs::Base
end

# source://bootstrap_form//lib/bootstrap_form/inputs/url_field.rb#5
module BootstrapForm::Inputs::UrlField
  extend ::ActiveSupport::Concern
  include ::BootstrapForm::Inputs::Base
end

# source://bootstrap_form//lib/bootstrap_form/inputs/week_field.rb#5
module BootstrapForm::Inputs::WeekField
  extend ::ActiveSupport::Concern
  include ::BootstrapForm::Inputs::Base
end
