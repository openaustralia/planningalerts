# DO NOT EDIT MANUALLY
# This is an autogenerated file for types exported from the `sass-rails` gem.
# Please instead update this file by running `bin/tapioca gem sass-rails`.

# typed: true

module Sass
  extend ::Sass::Version
  extend ::Sass::Features

  class << self
    def compile(contents, options = T.unsafe(nil)); end
    def compile_file(filename, *args); end
    def load_paths; end
    def logger; end
    def logger=(l); end
    def tests_running; end
    def tests_running=(_arg0); end
  end
end

class Sass::Callable < ::Struct
  def args; end
  def args=(_); end
  def environment; end
  def environment=(_); end
  def has_content; end
  def has_content=(_); end
  def name; end
  def name=(_); end
  def splat; end
  def splat=(_); end
  def tree; end
  def tree=(_); end
  def type; end
  def type=(_); end

  class << self
    def [](*_arg0); end
    def inspect; end
    def members; end
    def new(*_arg0); end
  end
end

Sass::ROOT_DIR = T.let(T.unsafe(nil), String)
module Sass::Rails; end

class Sass::Rails::CacheStore < ::Sass::CacheStores::Base
  def initialize(environment); end

  def _retrieve(key, version, sha); end
  def _store(key, version, sha, contents); end
  def environment; end
  def path_to(key); end
end

class Sass::Rails::Logger < ::Sass::Logger::Base
  def _log(level, message); end
end

class Sass::Rails::Railtie < ::Rails::Railtie; end

class Sass::Rails::SassImporter < ::Sass::Importers::Filesystem
  include ::Sass::Rails::SassImporter::Deprecated
  include ::Sass::Rails::SassImporter::ERB
  include ::Sass::Rails::SassImporter::Globbing

  def extensions; end
end

module Sass::Rails::SassImporter::Deprecated
  def extensions; end
  def find(*args); end
  def find_relative(*args); end

  private

  def deprecate_extra_css_extension(engine); end
end

module Sass::Rails::SassImporter::ERB
  def erb_extensions; end
  def extensions; end
  def find(*args); end
  def find_relative(*args); end

  private

  def process_erb_engine(engine); end
end

module Sass::Rails::SassImporter::Globbing
  def find(name, options); end
  def find_relative(name, base, options); end

  private

  def each_globbed_file(base, glob, context); end
  def glob_imports(base, glob, options); end
end

Sass::Rails::SassImporter::Globbing::GLOB = T.let(T.unsafe(nil), Regexp)

class Sass::Rails::SassTemplate < ::Tilt::Template
  def evaluate(context, locals, &block); end
  def initialize_engine; end
  def prepare; end
  def syntax; end

  private

  def importer_class; end

  class << self
    def default_mime_type; end
    def engine_initialized?; end
  end
end

class Sass::Rails::ScssTemplate < ::Sass::Rails::SassTemplate
  def syntax; end
end

Sass::Rails::VERSION = T.let(T.unsafe(nil), String)
Sass::VERSION = T.let(T.unsafe(nil), String)

module Sprockets
  extend ::Sprockets::Utils
  extend ::Sprockets::URIUtils
  extend ::Sprockets::PathUtils
  extend ::Sprockets::DigestUtils
  extend ::Sprockets::PathDigestUtils
  extend ::Sprockets::Dependencies
  extend ::Sprockets::Compressing
  extend ::Sprockets::ProcessorUtils
  extend ::Sprockets::Processing
  extend ::Sprockets::HTTPUtils
  extend ::Sprockets::Transformers
  extend ::Sprockets::Engines
  extend ::Sprockets::Mime
  extend ::Sprockets::Paths
  extend ::Sprockets::Configuration
end

Sprockets::Index = Sprockets::CachedEnvironment
Sprockets::SassFunctions = Sprockets::SassProcessor::Functions
Sprockets::VERSION = T.let(T.unsafe(nil), String)
