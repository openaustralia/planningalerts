# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for types exported from the `percy-capybara` gem.
# Please instead update this file by running `bin/tapioca gem percy-capybara`.

class Capybara::Session
  include ::PercyCapybara
end

# source://percy-capybara//lib/percy/version.rb#1
module PercyCapybara
  # Take a DOM snapshot and post it to the snapshot endpoint
  #
  # source://percy-capybara//lib/percy/capybara.rb#18
  def percy_snapshot(name, options = T.unsafe(nil)); end

  private

  # Make an HTTP request (GET,POST) using Ruby's Net::HTTP. If `data` is present,
  # `fetch` will POST as JSON.
  #
  # source://percy-capybara//lib/percy/capybara.rb#94
  def fetch(url, data = T.unsafe(nil)); end

  # Fetch the @percy/dom script, caching the result so it is only fetched once
  #
  # source://percy-capybara//lib/percy/capybara.rb#81
  def fetch_percy_dom; end

  # source://percy-capybara//lib/percy/capybara.rb#88
  def log(msg); end

  # Determine if the Percy server is running, caching the result so it is only checked once
  #
  # @return [Boolean]
  #
  # source://percy-capybara//lib/percy/capybara.rb#47
  def percy_enabled?; end
end

# source://percy-capybara//lib/percy/capybara.rb#7
PercyCapybara::CLIENT_INFO = T.let(T.unsafe(nil), String)

# source://percy-capybara//lib/percy/capybara.rb#8
PercyCapybara::ENV_INFO = T.let(T.unsafe(nil), String)

# source://percy-capybara//lib/percy/capybara.rb#10
PercyCapybara::PERCY_DEBUG = T.let(T.unsafe(nil), FalseClass)

# source://percy-capybara//lib/percy/capybara.rb#12
PercyCapybara::PERCY_LABEL = T.let(T.unsafe(nil), String)

# source://percy-capybara//lib/percy/capybara.rb#11
PercyCapybara::PERCY_SERVER_ADDRESS = T.let(T.unsafe(nil), String)

# source://percy-capybara//lib/percy/version.rb#2
PercyCapybara::VERSION = T.let(T.unsafe(nil), String)
