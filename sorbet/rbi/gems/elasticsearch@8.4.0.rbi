# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for types exported from the `elasticsearch` gem.
# Please instead update this file by running `bin/tapioca gem elasticsearch`.

# Helper for the meta-header value for Cloud
#
# source://elasticsearch//lib/elasticsearch.rb#174
module Elastic
  class << self
    # If the version is X.X.X.pre/alpha/beta, use X.X.Xp for the meta-header:
    #
    # source://elasticsearch//lib/elasticsearch.rb#176
    def client_meta_version; end
  end
end

# Constant for elastic-transport meta-header
#
# source://elasticsearch//lib/elasticsearch.rb#185
Elastic::ELASTICSEARCH_SERVICE_VERSION = T.let(T.unsafe(nil), Array)

# source://elasticsearch//lib/elasticsearch/version.rb#18
module Elasticsearch; end

# This is the stateful Elasticsearch::Client, using an instance of elastic-transport.
#
# source://elasticsearch//lib/elasticsearch.rb#28
class Elasticsearch::Client
  include ::Elasticsearch::API
  include ::Elasticsearch::API::XPack
  include ::Elasticsearch::API::Watcher
  include ::Elasticsearch::API::Transform
  include ::Elasticsearch::API::TextStructure
  include ::Elasticsearch::API::SSL
  include ::Elasticsearch::API::SQL
  include ::Elasticsearch::API::SnapshotLifecycleManagement
  include ::Elasticsearch::API::Security
  include ::Elasticsearch::API::SearchableSnapshots
  include ::Elasticsearch::API::Rollup
  include ::Elasticsearch::API::Monitoring
  include ::Elasticsearch::API::MachineLearning
  include ::Elasticsearch::API::Migration
  include ::Elasticsearch::API::Logstash
  include ::Elasticsearch::API::License
  include ::Elasticsearch::API::IndexLifecycleManagement
  include ::Elasticsearch::API::Graph
  include ::Elasticsearch::API::Fleet
  include ::Elasticsearch::API::Eql
  include ::Elasticsearch::API::Enrich
  include ::Elasticsearch::API::DataFrameTransformDeprecated
  include ::Elasticsearch::API::CrossClusterReplication
  include ::Elasticsearch::API::Autoscaling
  include ::Elasticsearch::API::AsyncSearch
  include ::Elasticsearch::API::Shutdown
  include ::Elasticsearch::API::Features
  include ::Elasticsearch::API::DanglingIndices
  include ::Elasticsearch::API::Remote
  include ::Elasticsearch::API::Cat
  include ::Elasticsearch::API::Tasks
  include ::Elasticsearch::API::Snapshot
  include ::Elasticsearch::API::Ingest
  include ::Elasticsearch::API::Indices
  include ::Elasticsearch::API::Nodes
  include ::Elasticsearch::API::Cluster
  include ::Elasticsearch::API::Actions
  include ::Elasticsearch::API::Common

  # Create a client connected to an Elasticsearch cluster.
  #
  # @option arguments
  # @option api_key
  # @option opaque_id_prefix
  # @param arguments [Hash] a customizable set of options
  # @param api_key [Hash] a customizable set of options
  # @param opaque_id_prefix [Hash] a customizable set of options
  # @return [Client] a new instance of Client
  #
  # source://elasticsearch//lib/elasticsearch.rb#44
  def initialize(arguments = T.unsafe(nil), &block); end

  # source://elasticsearch//lib/elasticsearch.rb#59
  def method_missing(name, *args, &block); end

  private

  # source://elasticsearch//lib/elasticsearch.rb#135
  def api_key(arguments); end

  # source://elasticsearch//lib/elasticsearch.rb#160
  def elasticsearch_validation_request; end

  # Encode credentials for the Authorization Header
  # Credentials is the base64 encoding of id and api_key joined by a colon
  #
  # @see https://www.elastic.co/guide/en/elasticsearch/reference/current/security-api-create-api-key.html
  #
  # source://elasticsearch//lib/elasticsearch.rb#156
  def encode(api_key); end

  # @return [Boolean]
  #
  # source://elasticsearch//lib/elasticsearch.rb#77
  def respond_to_missing?(method_name, *args); end

  # source://elasticsearch//lib/elasticsearch.rb#121
  def setup_cloud_host(cloud_id, user, password, port); end

  # source://elasticsearch//lib/elasticsearch.rb#83
  def verify_elasticsearch; end

  # source://elasticsearch//lib/elasticsearch.rb#110
  def verify_with_version_or_header(version, headers); end
end

# The default port to use if connecting using a Cloud ID.
# Updated from 9243 to 443 in client version 7.10.1
#
# @since 7.2.0
#
# source://elasticsearch//lib/elasticsearch.rb#34
Elasticsearch::Client::DEFAULT_CLOUD_PORT = T.let(T.unsafe(nil), Integer)

# source://elasticsearch//lib/elasticsearch.rb#23
Elasticsearch::NOT_ELASTICSEARCH_WARNING = T.let(T.unsafe(nil), String)

# source://elasticsearch//lib/elasticsearch.rb#24
Elasticsearch::SECURITY_PRIVILEGES_VALIDATION_WARNING = T.let(T.unsafe(nil), String)

# Error class for when we detect an unsupported version of Elasticsearch
#
# source://elasticsearch//lib/elasticsearch.rb#166
class Elasticsearch::UnsupportedProductError < ::StandardError
  # @return [UnsupportedProductError] a new instance of UnsupportedProductError
  #
  # source://elasticsearch//lib/elasticsearch.rb#167
  def initialize(message = T.unsafe(nil)); end
end

# source://elasticsearch//lib/elasticsearch.rb#25
Elasticsearch::VALIDATION_WARNING = T.let(T.unsafe(nil), String)

# source://elasticsearch//lib/elasticsearch/version.rb#19
Elasticsearch::VERSION = T.let(T.unsafe(nil), String)
