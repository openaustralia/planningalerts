# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for types exported from the `rb-fsevent` gem.
# Please instead update this file by running `bin/tapioca gem rb-fsevent`.

# source://rb-fsevent//lib/rb-fsevent/fsevent.rb#5
class FSEvent
  # @return [FSEvent] a new instance of FSEvent
  #
  # source://rb-fsevent//lib/rb-fsevent/fsevent.rb#21
  def initialize(args = T.unsafe(nil), &block); end

  # Returns the value of attribute callback.
  #
  # source://rb-fsevent//lib/rb-fsevent/fsevent.rb#19
  def callback; end

  # source://rb-fsevent//lib/rb-fsevent/fsevent.rb#139
  def open_pipe; end

  # Returns the value of attribute paths.
  #
  # source://rb-fsevent//lib/rb-fsevent/fsevent.rb#19
  def paths; end

  # @return [Boolean]
  #
  # source://rb-fsevent//lib/rb-fsevent/fsevent.rb#97
  def process_running?(pid); end

  # source://rb-fsevent//lib/rb-fsevent/fsevent.rb#38
  def run; end

  # source://rb-fsevent//lib/rb-fsevent/fsevent.rb#87
  def stop; end

  # source://rb-fsevent//lib/rb-fsevent/fsevent.rb#25
  def watch(watch_paths, options = T.unsafe(nil), &block); end

  private

  # source://rb-fsevent//lib/rb-fsevent/fsevent.rb#146
  def parse_options(options = T.unsafe(nil)); end

  class << self
    def root_path; end
    def watcher_path; end
  end
end

# source://rb-fsevent//lib/rb-fsevent/version.rb#4
FSEvent::VERSION = T.let(T.unsafe(nil), String)

# source://rb-fsevent//lib/otnetstring.rb#24
module OTNetstring
  class << self
    # source://rb-fsevent//lib/otnetstring.rb#62
    def encode(obj, string_sep = T.unsafe(nil)); end

    # source://rb-fsevent//lib/otnetstring.rb#28
    def parse(io, encoding = T.unsafe(nil), fallback_encoding = T.unsafe(nil)); end

    private

    # source://rb-fsevent//lib/otnetstring.rb#76
    def with_encoding(str, encoding, fallback = T.unsafe(nil)); end
  end
end

# source://rb-fsevent//lib/otnetstring.rb#25
class OTNetstring::Error < ::StandardError; end
