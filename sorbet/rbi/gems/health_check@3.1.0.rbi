# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for types exported from the `health_check` gem.
# Please instead update this file by running `bin/tapioca gem health_check`.


# source://health_check//lib/health_check/health_check_routes.rb#1
module ActionDispatch::Routing; end

# source://health_check//lib/health_check/health_check_routes.rb#2
class ActionDispatch::Routing::Mapper
  # source://actionpack/7.1.3.4/lib/action_dispatch/routing/mapper.rb#2313
  def initialize(set); end

  # source://health_check//lib/health_check/health_check_routes.rb#9
  def add_health_check_routes(prefix = T.unsafe(nil)); end

  # source://devise/4.9.4/lib/devise/rails/routes.rb#363
  def as(scope); end

  # source://devise/4.9.4/lib/devise/rails/routes.rb#290
  def authenticate(scope = T.unsafe(nil), block = T.unsafe(nil)); end

  # source://devise/4.9.4/lib/devise/rails/routes.rb#314
  def authenticated(scope = T.unsafe(nil), block = T.unsafe(nil)); end

  # source://devise/4.9.4/lib/devise/rails/routes.rb#226
  def devise_for(*resources); end

  # source://devise/4.9.4/lib/devise/rails/routes.rb#363
  def devise_scope(scope); end

  # source://health_check//lib/health_check/health_check_routes.rb#4
  def health_check_routes(prefix = T.unsafe(nil)); end

  # source://devise/4.9.4/lib/devise/rails/routes.rb#331
  def unauthenticated(scope = T.unsafe(nil)); end

  protected

  # source://devise/4.9.4/lib/devise/rails/routes.rb#477
  def constraints_for(method_to_apply, scope = T.unsafe(nil), block = T.unsafe(nil)); end

  # source://devise/4.9.4/lib/devise/rails/routes.rb#390
  def devise_confirmation(mapping, controllers); end

  # source://devise/4.9.4/lib/devise/rails/routes.rb#421
  def devise_omniauth_callback(mapping, controllers); end

  # source://devise/4.9.4/lib/devise/rails/routes.rb#385
  def devise_password(mapping, controllers); end

  # source://devise/4.9.4/lib/devise/rails/routes.rb#402
  def devise_registration(mapping, controllers); end

  # source://devise/4.9.4/lib/devise/rails/routes.rb#377
  def devise_session(mapping, controllers); end

  # source://devise/4.9.4/lib/devise/rails/routes.rb#395
  def devise_unlock(mapping, controllers); end

  # source://devise/4.9.4/lib/devise/rails/routes.rb#509
  def raise_no_devise_method_error!(klass); end

  # source://devise/4.9.4/lib/devise/rails/routes.rb#499
  def raise_no_secret_key; end

  # source://devise/4.9.4/lib/devise/rails/routes.rb#488
  def set_omniauth_path_prefix!(path_prefix); end

  # source://devise/4.9.4/lib/devise/rails/routes.rb#461
  def with_devise_exclusive_scope(new_path, new_as, options); end

  class << self
    # source://actionpack/7.1.3.4/lib/action_dispatch/routing/mapper.rb#16
    def backtrace_cleaner; end

    # source://actionpack/7.1.3.4/lib/action_dispatch/routing/mapper.rb#16
    def backtrace_cleaner=(val); end

    # source://actionpack/7.1.3.4/lib/action_dispatch/routing/mapper.rb#392
    def normalize_name(name); end

    # source://actionpack/7.1.3.4/lib/action_dispatch/routing/mapper.rb#375
    def normalize_path(path); end

    # source://actionpack/7.1.3.4/lib/action_dispatch/routing/mapper.rb#15
    def route_source_locations; end

    # source://actionpack/7.1.3.4/lib/action_dispatch/routing/mapper.rb#15
    def route_source_locations=(val); end
  end
end

# source://health_check//lib/health_check/base_health_check.rb#1
module BaseHealthCheck
  # source://health_check//lib/health_check/base_health_check.rb#2
  def create_error(check_type, error_message); end
end

# source://health_check//lib/health_check.rb#4
module HealthCheck
  # source://health_check//lib/health_check.rb#39
  def accept_proxied_requests; end

  # source://health_check//lib/health_check.rb#39
  def accept_proxied_requests=(val); end

  # source://health_check//lib/health_check.rb#64
  def basic_auth_password; end

  # source://health_check//lib/health_check.rb#64
  def basic_auth_password=(val); end

  # source://health_check//lib/health_check.rb#64
  def basic_auth_username; end

  # source://health_check//lib/health_check.rb#64
  def basic_auth_username=(val); end

  # source://health_check//lib/health_check.rb#52
  def buckets; end

  # source://health_check//lib/health_check.rb#52
  def buckets=(val); end

  # source://health_check//lib/health_check.rb#69
  def custom_checks; end

  # source://health_check//lib/health_check.rb#69
  def custom_checks=(val); end

  # source://health_check//lib/health_check.rb#19
  def failure; end

  # source://health_check//lib/health_check.rb#19
  def failure=(val); end

  # source://health_check//lib/health_check.rb#96
  def failure_callbacks; end

  # source://health_check//lib/health_check.rb#96
  def failure_callbacks=(val); end

  # source://health_check//lib/health_check.rb#70
  def full_checks; end

  # source://health_check//lib/health_check.rb#70
  def full_checks=(val); end

  # source://health_check//lib/health_check.rb#31
  def http_status_for_error_object; end

  # source://health_check//lib/health_check.rb#31
  def http_status_for_error_object=(val); end

  # source://health_check//lib/health_check.rb#27
  def http_status_for_error_text; end

  # source://health_check//lib/health_check.rb#27
  def http_status_for_error_text=(val); end

  # source://health_check//lib/health_check.rb#35
  def http_status_for_ip_whitelist_error; end

  # source://health_check//lib/health_check.rb#35
  def http_status_for_ip_whitelist_error=(val); end

  # source://health_check//lib/health_check.rb#91
  def include_error_in_response_body; end

  # source://health_check//lib/health_check.rb#91
  def include_error_in_response_body=(val); end

  # source://health_check//lib/health_check.rb#80
  def installed_as_middleware; end

  # source://health_check//lib/health_check.rb#80
  def installed_as_middleware=(val); end

  # source://health_check//lib/health_check.rb#11
  def log_level; end

  # source://health_check//lib/health_check.rb#11
  def log_level=(val); end

  # source://health_check//lib/health_check.rb#48
  def max_age; end

  # source://health_check//lib/health_check.rb#48
  def max_age=(val); end

  # source://health_check//lib/health_check.rb#77
  def middleware_checks; end

  # source://health_check//lib/health_check.rb#77
  def middleware_checks=(val); end

  # source://health_check//lib/health_check.rb#43
  def origin_ip_whitelist; end

  # source://health_check//lib/health_check.rb#43
  def origin_ip_whitelist=(val); end

  # source://health_check//lib/health_check.rb#56
  def rabbitmq_config; end

  # source://health_check//lib/health_check.rb#56
  def rabbitmq_config=(val); end

  # source://health_check//lib/health_check.rb#86
  def redis_password; end

  # source://health_check//lib/health_check.rb#86
  def redis_password=(val); end

  # source://health_check//lib/health_check.rb#83
  def redis_url; end

  # source://health_check//lib/health_check.rb#83
  def redis_url=(val); end

  # source://health_check//lib/health_check.rb#23
  def smtp_timeout; end

  # source://health_check//lib/health_check.rb#23
  def smtp_timeout=(val); end

  # source://health_check//lib/health_check.rb#71
  def standard_checks; end

  # source://health_check//lib/health_check.rb#71
  def standard_checks=(val); end

  # source://health_check//lib/health_check.rb#15
  def success; end

  # source://health_check//lib/health_check.rb#15
  def success=(val); end

  # source://health_check//lib/health_check.rb#95
  def success_callbacks; end

  # source://health_check//lib/health_check.rb#95
  def success_callbacks=(val); end

  # source://health_check//lib/health_check.rb#60
  def uri; end

  # source://health_check//lib/health_check.rb#60
  def uri=(val); end

  class << self
    # source://health_check//lib/health_check.rb#39
    def accept_proxied_requests; end

    # source://health_check//lib/health_check.rb#39
    def accept_proxied_requests=(val); end

    # source://health_check//lib/health_check.rb#98
    def add_custom_check(name = T.unsafe(nil), &block); end

    # source://health_check//lib/health_check.rb#64
    def basic_auth_password; end

    # source://health_check//lib/health_check.rb#64
    def basic_auth_password=(val); end

    # source://health_check//lib/health_check.rb#64
    def basic_auth_username; end

    # source://health_check//lib/health_check.rb#64
    def basic_auth_username=(val); end

    # source://health_check//lib/health_check.rb#52
    def buckets; end

    # source://health_check//lib/health_check.rb#52
    def buckets=(val); end

    # source://health_check//lib/health_check.rb#69
    def custom_checks; end

    # source://health_check//lib/health_check.rb#69
    def custom_checks=(val); end

    # source://health_check//lib/health_check.rb#19
    def failure; end

    # source://health_check//lib/health_check.rb#19
    def failure=(val); end

    # source://health_check//lib/health_check.rb#96
    def failure_callbacks; end

    # source://health_check//lib/health_check.rb#96
    def failure_callbacks=(val); end

    # source://health_check//lib/health_check.rb#70
    def full_checks; end

    # source://health_check//lib/health_check.rb#70
    def full_checks=(val); end

    # source://health_check//lib/health_check.rb#31
    def http_status_for_error_object; end

    # source://health_check//lib/health_check.rb#31
    def http_status_for_error_object=(val); end

    # source://health_check//lib/health_check.rb#27
    def http_status_for_error_text; end

    # source://health_check//lib/health_check.rb#27
    def http_status_for_error_text=(val); end

    # source://health_check//lib/health_check.rb#35
    def http_status_for_ip_whitelist_error; end

    # source://health_check//lib/health_check.rb#35
    def http_status_for_ip_whitelist_error=(val); end

    # source://health_check//lib/health_check.rb#91
    def include_error_in_response_body; end

    # source://health_check//lib/health_check.rb#91
    def include_error_in_response_body=(val); end

    # source://health_check//lib/health_check.rb#80
    def installed_as_middleware; end

    # source://health_check//lib/health_check.rb#80
    def installed_as_middleware=(val); end

    # source://health_check//lib/health_check.rb#11
    def log_level; end

    # source://health_check//lib/health_check.rb#11
    def log_level=(val); end

    # source://health_check//lib/health_check.rb#48
    def max_age; end

    # source://health_check//lib/health_check.rb#48
    def max_age=(val); end

    # source://health_check//lib/health_check.rb#77
    def middleware_checks; end

    # source://health_check//lib/health_check.rb#77
    def middleware_checks=(val); end

    # source://health_check//lib/health_check.rb#108
    def on_failure(&block); end

    # source://health_check//lib/health_check.rb#103
    def on_success(&block); end

    # source://health_check//lib/health_check.rb#43
    def origin_ip_whitelist; end

    # source://health_check//lib/health_check.rb#43
    def origin_ip_whitelist=(val); end

    # source://health_check//lib/health_check.rb#56
    def rabbitmq_config; end

    # source://health_check//lib/health_check.rb#56
    def rabbitmq_config=(val); end

    # source://health_check//lib/health_check.rb#86
    def redis_password; end

    # source://health_check//lib/health_check.rb#86
    def redis_password=(val); end

    # source://health_check//lib/health_check.rb#83
    def redis_url; end

    # source://health_check//lib/health_check.rb#83
    def redis_url=(val); end

    # @yield [_self]
    # @yieldparam _self [HealthCheck] the object that the method was called on
    #
    # source://health_check//lib/health_check.rb#113
    def setup; end

    # source://health_check//lib/health_check.rb#23
    def smtp_timeout; end

    # source://health_check//lib/health_check.rb#23
    def smtp_timeout=(val); end

    # source://health_check//lib/health_check.rb#71
    def standard_checks; end

    # source://health_check//lib/health_check.rb#71
    def standard_checks=(val); end

    # source://health_check//lib/health_check.rb#15
    def success; end

    # source://health_check//lib/health_check.rb#15
    def success=(val); end

    # source://health_check//lib/health_check.rb#95
    def success_callbacks; end

    # source://health_check//lib/health_check.rb#95
    def success_callbacks=(val); end

    # source://health_check//lib/health_check.rb#60
    def uri; end

    # source://health_check//lib/health_check.rb#60
    def uri=(val); end
  end
end

# source://health_check//lib/health_check/elasticsearch_health_check.rb#2
class HealthCheck::ElasticsearchHealthCheck
  extend ::BaseHealthCheck

  class << self
    # source://health_check//lib/health_check/elasticsearch_health_check.rb#5
    def check; end
  end
end

# source://health_check//lib/health_check.rb#6
class HealthCheck::Engine < ::Rails::Engine
  # source://health_check//lib/health_check.rb#7
  def routes_explicitly_defined; end

  # source://health_check//lib/health_check.rb#7
  def routes_explicitly_defined=(val); end

  class << self
    # source://activesupport/7.1.3.4/lib/active_support/callbacks.rb#70
    def __callbacks; end

    # source://health_check//lib/health_check.rb#7
    def routes_explicitly_defined; end

    # source://health_check//lib/health_check.rb#7
    def routes_explicitly_defined=(val); end
  end
end

# source://health_check//lib/health_check/health_check_controller.rb#6
class HealthCheck::HealthCheckController < ::ActionController::Base
  # source://health_check//lib/health_check/health_check_controller.rb#12
  def index; end

  protected

  # source://health_check//lib/health_check/health_check_controller.rb#64
  def authenticate; end

  # source://health_check//lib/health_check/health_check_controller.rb#71
  def check_origin_ip; end

  # turn cookies for CSRF off
  #
  # @return [Boolean]
  #
  # source://health_check//lib/health_check/health_check_controller.rb#82
  def protect_against_forgery?; end

  # source://health_check//lib/health_check/health_check_controller.rb#53
  def send_response(healthy, msg, text_status, obj_status); end

  private

  # source://actionview/7.1.3.4/lib/action_view/layouts.rb#330
  def _layout(lookup_context, formats); end

  class << self
    # source://activesupport/7.1.3.4/lib/active_support/callbacks.rb#70
    def __callbacks; end

    # source://actionview/7.1.3.4/lib/action_view/layouts.rb#211
    def _layout; end

    # source://actionview/7.1.3.4/lib/action_view/layouts.rb#212
    def _layout_conditions; end

    # source://actionpack/7.1.3.4/lib/action_controller/metal.rb#262
    def middleware_stack; end
  end
end

# source://health_check//lib/health_check/middleware_health_check.rb#6
class HealthCheck::MiddlewareHealthcheck
  # @return [MiddlewareHealthcheck] a new instance of MiddlewareHealthcheck
  #
  # source://health_check//lib/health_check/middleware_health_check.rb#8
  def initialize(app); end

  # source://health_check//lib/health_check/middleware_health_check.rb#12
  def call(env); end

  protected

  # source://health_check//lib/health_check/middleware_health_check.rb#63
  def ip_blocked(env); end

  # source://health_check//lib/health_check/middleware_health_check.rb#75
  def not_authenticated(env); end

  # source://health_check//lib/health_check/middleware_health_check.rb#52
  def parse_env(env); end
end

# source://health_check//lib/health_check/middleware_health_check.rb#88
class HealthCheck::MiddlewareHealthcheck::Request < ::Rack::Auth::AbstractRequest
  # @return [Boolean]
  #
  # source://health_check//lib/health_check/middleware_health_check.rb#89
  def basic?; end

  # source://health_check//lib/health_check/middleware_health_check.rb#93
  def credentials; end

  # source://health_check//lib/health_check/middleware_health_check.rb#101
  def password; end

  # source://health_check//lib/health_check/middleware_health_check.rb#97
  def username; end
end

# source://health_check//lib/health_check/rabbitmq_health_check.rb#2
class HealthCheck::RabbitMQHealthCheck
  extend ::BaseHealthCheck

  class << self
    # source://health_check//lib/health_check/rabbitmq_health_check.rb#4
    def check; end
  end
end

# source://health_check//lib/health_check/redis_health_check.rb#4
class HealthCheck::RedisHealthCheck
  extend ::BaseHealthCheck

  class << self
    # source://health_check//lib/health_check/redis_health_check.rb#8
    def check; end

    # source://health_check//lib/health_check/redis_health_check.rb#18
    def client; end
  end
end

# source://health_check//lib/health_check/resque_health_check.rb#2
class HealthCheck::ResqueHealthCheck
  extend ::BaseHealthCheck

  class << self
    # source://health_check//lib/health_check/resque_health_check.rb#5
    def check; end
  end
end

# source://health_check//lib/health_check/s3_health_check.rb#2
class HealthCheck::S3HealthCheck
  extend ::BaseHealthCheck

  class << self
    # source://health_check//lib/health_check/s3_health_check.rb#6
    def check; end

    private

    # source://health_check//lib/health_check/s3_health_check.rb#54
    def D(bucket); end

    # source://health_check//lib/health_check/s3_health_check.rb#44
    def R(bucket); end

    # source://health_check//lib/health_check/s3_health_check.rb#48
    def W(bucket); end

    # source://health_check//lib/health_check/s3_health_check.rb#40
    def aws_s3_client; end

    # We already assume you are using Rails.  Let's also assume you have an initializer
    # created for your Aws config.  We will set the region here so you can use an
    # instance profile and simply set the region in your environment.
    #
    # source://health_check//lib/health_check/s3_health_check.rb#33
    def configure_client; end
  end
end

# source://health_check//lib/health_check/sidekiq_health_check.rb#2
class HealthCheck::SidekiqHealthCheck
  extend ::BaseHealthCheck

  class << self
    # source://health_check//lib/health_check/sidekiq_health_check.rb#5
    def check; end
  end
end

# source://health_check//lib/health_check/utils.rb#5
class HealthCheck::Utils
  # source://health_check//lib/health_check/utils.rb#18
  def default_smtp_settings; end

  # source://health_check//lib/health_check/utils.rb#18
  def default_smtp_settings=(val); end

  class << self
    # source://health_check//lib/health_check/utils.rb#161
    def check_cache; end

    # source://health_check//lib/health_check/utils.rb#126
    def check_email; end

    # source://health_check//lib/health_check/utils.rb#137
    def check_sendmail(settings); end

    # source://health_check//lib/health_check/utils.rb#141
    def check_smtp(settings, timeout); end

    # source://health_check//lib/health_check/utils.rb#100
    def db_migrate_path; end

    # source://health_check//lib/health_check/utils.rb#105
    def db_migrate_path=(value); end

    # source://health_check//lib/health_check/utils.rb#18
    def default_smtp_settings; end

    # source://health_check//lib/health_check/utils.rb#18
    def default_smtp_settings=(val); end

    # source://health_check//lib/health_check/utils.rb#113
    def get_database_version; end

    # source://health_check//lib/health_check/utils.rb#117
    def get_migration_version(dir = T.unsafe(nil)); end

    # @return [Boolean]
    #
    # source://health_check//lib/health_check/utils.rb#109
    def mailer_configured?; end

    # process an array containing a list of checks
    #
    # source://health_check//lib/health_check/utils.rb#21
    def process_checks(checks, called_from_middleware = T.unsafe(nil)); end
  end
end

# source://health_check//lib/health_check/version.rb#2
HealthCheck::VERSION = T.let(T.unsafe(nil), String)
