# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for types exported from the `compass-core` gem.
# Please instead update this file by running `bin/tapioca gem compass-core`.

# source://compass-core//lib/compass/core/generated_version.rb#1
module Compass
  extend ::Compass::HasDeprecatedConstantsFromCore

  private

  # source://compass/1.0.3/lib/compass.rb#20
  def base_directory; end

  # source://compass/1.0.3/lib/compass.rb#23
  def lib_directory; end

  # source://compass-core//lib/compass/core.rb#49
  def shared_extension_paths; end

  class << self
    # source://compass-core//lib/compass/configuration.rb#134
    def add_configuration(data, filename = T.unsafe(nil)); end

    # source://compass/1.0.3/lib/compass.rb#20
    def base_directory; end

    # The Compass configuration singleton.
    #
    # source://compass-core//lib/compass/configuration.rb#122
    def configuration; end

    def const_missing(const_name); end

    # source://compass-core//lib/compass/configuration.rb#130
    def default_configuration; end

    # source://compass-core//lib/compass/configuration.rb#162
    def deprojectize(path, project_path = T.unsafe(nil)); end

    # source://compass-core//lib/compass/frameworks.rb#169
    def discover_extensions!; end

    # source://compass-core//lib/compass/frameworks.rb#157
    def discover_gem_extensions!; end

    # source://compass/1.0.3/lib/compass.rb#23
    def lib_directory; end

    # Returns a full path to the relative path to the project directory
    #
    # source://compass-core//lib/compass/configuration.rb#157
    def projectize(path, project_path = T.unsafe(nil)); end

    # source://compass-core//lib/compass/configuration.rb#152
    def reset_configuration!; end

    # source://compass-core//lib/compass/core.rb#49
    def shared_extension_paths; end
  end
end

# source://compass-core//lib/compass/browser_support.rb#2
module Compass::BrowserSupport
  extend ::Compass::BrowserSupport

  # Adds support for one or more aspects for the given simple function
  # Example:
  #
  #   Compass::BrowserSupport.add_support("image", "moz", "webkit")
  #   # => Adds support for moz and webkit to the image() function.
  #
  # This function can be called one or more times in a compass configuration
  # file in order to add support for new, simple browser functions without
  # waiting for a new compass release.
  #
  # source://compass-core//lib/compass/browser_support.rb#23
  def add_support(function, *aspects); end

  # @return [Boolean]
  #
  # source://compass-core//lib/compass/browser_support.rb#59
  def has_aspect?(function); end

  # Removes support for one or more aspects for the given simple function
  # Example:
  #
  #   Compass::BrowserSupport.remove_support("image", "o", "ms")
  #   # => Adds support for moz and webkit to the image() function.
  #
  # This function can be called one or more times in a compass configuration
  # file in order to remove support for simple functions that no longer need to
  # a prefix without waiting for a new compass release.
  #
  # source://compass-core//lib/compass/browser_support.rb#45
  def remove_support(function, *aspects); end

  # @return [Boolean]
  #
  # source://compass-core//lib/compass/browser_support.rb#55
  def supports?(function, aspect); end
end

# source://compass-core//lib/compass/browser_support.rb#5
Compass::BrowserSupport::ASPECTS = T.let(T.unsafe(nil), Array)

# source://compass-core//lib/compass/browser_support.rb#7
Compass::BrowserSupport::SIMPLE_FUNCTIONS = T.let(T.unsafe(nil), Hash)

# source://compass-core//lib/compass/configuration.rb#2
module Compass::Configuration
  class << self
    # Registers a new configuration property.
    # Extensions can use this to add new configuration options to compass.
    #
    # @param name [Symbol] The name of the property.
    # @param comment [String] A comment for the property.
    # @param default [Proc] A method to calculate the default value for the property.
    #   The proc is executed in the context of the project's configuration data.
    #
    # source://compass-core//lib/compass/configuration.rb#21
    def add_configuration_property(name, comment = T.unsafe(nil), &default); end

    # source://compass-core//lib/compass/configuration.rb#5
    def attributes_for_directory(dir_name, http_dir_name = T.unsafe(nil)); end

    # For testing purposes
    #
    # source://compass-core//lib/compass/configuration.rb#44
    def remove_configuration_property(name); end
  end
end

# source://compass-core//lib/compass/configuration.rb#83
Compass::Configuration::ARRAY_ATTRIBUTES = T.let(T.unsafe(nil), Array)

# source://compass-core//lib/compass/configuration.rb#91
Compass::Configuration::ARRAY_ATTRIBUTE_OPTIONS = T.let(T.unsafe(nil), Hash)

# source://compass-core//lib/compass/configuration.rb#50
Compass::Configuration::ATTRIBUTES = T.let(T.unsafe(nil), Array)

# The adapters module provides methods that make configuration data from a compass project
# adapt to various consumers of configuration data
#
# source://compass-core//lib/compass/configuration/adapters.rb#5
module Compass::Configuration::Adapters
  # @return [Boolean]
  #
  # source://compass-core//lib/compass/configuration/adapters.rb#57
  def absolute_path?(path); end

  # source://compass-core//lib/compass/configuration/adapters.rb#47
  def resolve_additional_import_paths; end

  # @return [Boolean]
  #
  # source://compass-core//lib/compass/configuration/adapters.rb#101
  def sass_3_4?; end

  # source://compass-core//lib/compass/configuration/adapters.rb#80
  def sass_load_paths; end

  # source://compass-core//lib/compass/configuration/adapters.rb#6
  def to_compiler_arguments(additional_options = T.unsafe(nil)); end

  # source://compass-core//lib/compass/configuration/adapters.rb#62
  def to_sass_engine_options; end

  # source://compass-core//lib/compass/configuration/adapters.rb#16
  def to_sass_plugin_options; end
end

# The Compass configuration data storage class manages configuration data that comes from a variety of
# different sources and aggregates them together into a consistent API
# Some of the possible sources of configuration data:
#   * Compass default project structure for stand alone projects
#   * App framework specific project structures for rails, etc.
#   * User supplied explicit configuration
#   * Configuration data provided via the command line interface
#
# There are two kinds of configuration data that doesn't come from the user:
#
# 1. Configuration data that is defaulted as if the user had provided it themselves.
#    This is useful for providing defaults that the user is likely to want to edit
#    but shouldn't have to provide explicitly when getting started
# 2. Configuration data that is defaulted behind the scenes because _some_ value is
#    required.
#
# source://compass-core//lib/compass/configuration/data.rb#18
class Compass::Configuration::Data
  include ::Sass::Callbacks::InstanceMethods
  include ::Compass::Configuration::Inheritance
  include ::Compass::Configuration::Inheritance::InstanceMethods
  include ::Compass::Configuration::Adapters
  extend ::Sass::Callbacks
  extend ::Compass::Configuration::Inheritance::ClassMethods
  extend ::Compass::Configuration::Paths

  # @return [Data] a new instance of Data
  #
  # source://compass-core//lib/compass/configuration/data.rb#83
  def initialize(name, attr_hash = T.unsafe(nil)); end

  # source://compass-core//lib/compass/configuration/data.rb#98
  def add_import_path(*paths); end

  # source://compass-core//lib/compass/configuration/inheritance.rb#144
  def add_to_additional_import_paths(v); end

  # source://compass-core//lib/compass/configuration/inheritance.rb#144
  def add_to_framework_path(v); end

  # source://compass-core//lib/compass/configuration/inheritance.rb#144
  def add_to_loaded_frameworks(v); end

  # source://compass-core//lib/compass/configuration/inheritance.rb#144
  def add_to_required_libraries(v); end

  # source://compass-core//lib/compass/configuration/inheritance.rb#144
  def add_to_sprite_load_path(v); end

  # source://compass-core//lib/compass/configuration/inheritance.rb#119
  def additional_import_paths; end

  # source://compass-core//lib/compass/configuration/inheritance.rb#122
  def additional_import_paths=(value); end

  # source://compass-core//lib/compass/configuration/inheritance.rb#32
  def additional_import_paths_set?; end

  # source://compass-core//lib/compass/configuration/inheritance.rb#49
  def additional_import_paths_without_default; end

  # When called with a block, defines the cache buster strategy to be used.
  # If the block returns nil or a string, then it is appended to the url as a query parameter.
  # In this case, the returned string must not include the starting '?'.
  # The block may also return a hash with :path and/or :query values and it
  # will replace the original path and query string with the busted values returned.
  # The block will be passed the root-relative url of the asset.
  # If the block accepts two arguments, it will also be passed a File object
  # that points to the asset on disk -- which may or may not exist.
  # When called without a block, returns the block that was previously set.
  #
  # To disable the asset cache buster:
  #
  #     asset_cache_buster :none
  #
  # source://compass-core//lib/compass/configuration/data.rb#140
  def asset_cache_buster(simple = T.unsafe(nil), &block); end

  # source://compass-core//lib/compass/configuration/inheritance.rb#22
  def asset_cache_buster=(value); end

  # source://compass-core//lib/compass/configuration/inheritance.rb#32
  def asset_cache_buster_set?; end

  # source://compass-core//lib/compass/configuration/inheritance.rb#49
  def asset_cache_buster_without_default; end

  # When called with a block, defines the asset host url to be used.
  # The block must return a string that starts with a protocol (E.g. http).
  # The block will be passed the root-relative url of the asset.
  # When called without a block, returns the block that was previously set.
  #
  # source://compass-core//lib/compass/configuration/data.rb#113
  def asset_host(&block); end

  # source://compass-core//lib/compass/configuration/inheritance.rb#22
  def asset_host=(value); end

  # source://compass-core//lib/compass/configuration/inheritance.rb#32
  def asset_host_set?; end

  # source://compass-core//lib/compass/configuration/inheritance.rb#49
  def asset_host_without_default; end

  # source://compass-core//lib/compass/configuration/inheritance.rb#52
  def cache; end

  # source://compass-core//lib/compass/configuration/inheritance.rb#22
  def cache=(value); end

  def cache_dir; end

  # source://compass-core//lib/compass/configuration/inheritance.rb#22
  def cache_dir=(value); end

  # source://compass-core//lib/compass/configuration/inheritance.rb#32
  def cache_dir_set?; end

  # source://compass-core//lib/compass/configuration/inheritance.rb#52
  def cache_dir_with_trailing_separator; end

  # source://compass-core//lib/compass/configuration/inheritance.rb#49
  def cache_dir_without_default; end

  def cache_path; end

  # source://compass-core//lib/compass/configuration/inheritance.rb#22
  def cache_path=(value); end

  # source://compass-core//lib/compass/configuration/inheritance.rb#32
  def cache_path_set?; end

  # source://compass-core//lib/compass/configuration/inheritance.rb#52
  def cache_path_with_trailing_separator; end

  # source://compass-core//lib/compass/configuration/inheritance.rb#49
  def cache_path_without_default; end

  # source://compass-core//lib/compass/configuration/inheritance.rb#32
  def cache_set?; end

  # source://compass-core//lib/compass/configuration/inheritance.rb#49
  def cache_without_default; end

  # source://compass-core//lib/compass/configuration/inheritance.rb#52
  def chunky_png_options; end

  # source://compass-core//lib/compass/configuration/inheritance.rb#22
  def chunky_png_options=(value); end

  # source://compass-core//lib/compass/configuration/inheritance.rb#32
  def chunky_png_options_set?; end

  # source://compass-core//lib/compass/configuration/inheritance.rb#49
  def chunky_png_options_without_default; end

  # source://compass-core//lib/compass/configuration/inheritance.rb#52
  def color_output; end

  # source://compass-core//lib/compass/configuration/inheritance.rb#22
  def color_output=(value); end

  # source://compass-core//lib/compass/configuration/inheritance.rb#32
  def color_output_set?; end

  # source://compass-core//lib/compass/configuration/inheritance.rb#49
  def color_output_without_default; end

  def css_dir; end

  # source://compass-core//lib/compass/configuration/inheritance.rb#22
  def css_dir=(value); end

  # source://compass-core//lib/compass/configuration/inheritance.rb#32
  def css_dir_set?; end

  # source://compass-core//lib/compass/configuration/inheritance.rb#52
  def css_dir_with_trailing_separator; end

  # source://compass-core//lib/compass/configuration/inheritance.rb#49
  def css_dir_without_default; end

  def css_path; end

  # source://compass-core//lib/compass/configuration/inheritance.rb#22
  def css_path=(value); end

  # source://compass-core//lib/compass/configuration/inheritance.rb#32
  def css_path_set?; end

  # source://compass-core//lib/compass/configuration/inheritance.rb#52
  def css_path_with_trailing_separator; end

  # source://compass-core//lib/compass/configuration/inheritance.rb#49
  def css_path_without_default; end

  # source://compass-core//lib/compass/configuration/inheritance.rb#52
  def disable_warnings; end

  # source://compass-core//lib/compass/configuration/inheritance.rb#22
  def disable_warnings=(value); end

  # source://compass-core//lib/compass/configuration/inheritance.rb#32
  def disable_warnings_set?; end

  # source://compass-core//lib/compass/configuration/inheritance.rb#49
  def disable_warnings_without_default; end

  # Finds all extensions within a directory and registers them.
  #
  # source://compass-core//lib/compass/configuration/data.rb#188
  def discover(frameworks_dir); end

  # source://compass-core//lib/compass/configuration/inheritance.rb#52
  def environment; end

  # source://compass-core//lib/compass/configuration/inheritance.rb#22
  def environment=(value); end

  # source://compass-core//lib/compass/configuration/inheritance.rb#32
  def environment_set?; end

  # source://compass-core//lib/compass/configuration/inheritance.rb#49
  def environment_without_default; end

  def extensions_dir; end

  # source://compass-core//lib/compass/configuration/inheritance.rb#22
  def extensions_dir=(value); end

  # source://compass-core//lib/compass/configuration/inheritance.rb#32
  def extensions_dir_set?; end

  # source://compass-core//lib/compass/configuration/inheritance.rb#52
  def extensions_dir_with_trailing_separator; end

  # source://compass-core//lib/compass/configuration/inheritance.rb#49
  def extensions_dir_without_default; end

  def extensions_path; end

  # source://compass-core//lib/compass/configuration/inheritance.rb#22
  def extensions_path=(value); end

  # source://compass-core//lib/compass/configuration/inheritance.rb#32
  def extensions_path_set?; end

  # source://compass-core//lib/compass/configuration/inheritance.rb#52
  def extensions_path_with_trailing_separator; end

  # source://compass-core//lib/compass/configuration/inheritance.rb#49
  def extensions_path_without_default; end

  def fonts_dir; end

  # source://compass-core//lib/compass/configuration/inheritance.rb#22
  def fonts_dir=(value); end

  # source://compass-core//lib/compass/configuration/inheritance.rb#32
  def fonts_dir_set?; end

  # source://compass-core//lib/compass/configuration/inheritance.rb#52
  def fonts_dir_with_trailing_separator; end

  # source://compass-core//lib/compass/configuration/inheritance.rb#49
  def fonts_dir_without_default; end

  def fonts_path; end

  # source://compass-core//lib/compass/configuration/inheritance.rb#22
  def fonts_path=(value); end

  # source://compass-core//lib/compass/configuration/inheritance.rb#32
  def fonts_path_set?; end

  # source://compass-core//lib/compass/configuration/inheritance.rb#52
  def fonts_path_with_trailing_separator; end

  # source://compass-core//lib/compass/configuration/inheritance.rb#49
  def fonts_path_without_default; end

  # source://compass-core//lib/compass/configuration/inheritance.rb#119
  def framework_path; end

  # source://compass-core//lib/compass/configuration/inheritance.rb#122
  def framework_path=(value); end

  # source://compass-core//lib/compass/configuration/inheritance.rb#32
  def framework_path_set?; end

  # source://compass-core//lib/compass/configuration/inheritance.rb#49
  def framework_path_without_default; end

  def generated_images_dir; end

  # source://compass-core//lib/compass/configuration/inheritance.rb#22
  def generated_images_dir=(value); end

  # source://compass-core//lib/compass/configuration/inheritance.rb#32
  def generated_images_dir_set?; end

  # source://compass-core//lib/compass/configuration/inheritance.rb#52
  def generated_images_dir_with_trailing_separator; end

  # source://compass-core//lib/compass/configuration/inheritance.rb#49
  def generated_images_dir_without_default; end

  def generated_images_path; end

  # source://compass-core//lib/compass/configuration/inheritance.rb#22
  def generated_images_path=(value); end

  # source://compass-core//lib/compass/configuration/inheritance.rb#32
  def generated_images_path_set?; end

  # source://compass-core//lib/compass/configuration/inheritance.rb#52
  def generated_images_path_with_trailing_separator; end

  # source://compass-core//lib/compass/configuration/inheritance.rb#49
  def generated_images_path_without_default; end

  def http_fonts_dir; end

  # source://compass-core//lib/compass/configuration/inheritance.rb#22
  def http_fonts_dir=(value); end

  # source://compass-core//lib/compass/configuration/inheritance.rb#32
  def http_fonts_dir_set?; end

  # source://compass-core//lib/compass/configuration/inheritance.rb#52
  def http_fonts_dir_with_trailing_separator; end

  # source://compass-core//lib/compass/configuration/inheritance.rb#49
  def http_fonts_dir_without_default; end

  def http_fonts_path; end

  # source://compass-core//lib/compass/configuration/inheritance.rb#22
  def http_fonts_path=(value); end

  # source://compass-core//lib/compass/configuration/inheritance.rb#32
  def http_fonts_path_set?; end

  # source://compass-core//lib/compass/configuration/inheritance.rb#52
  def http_fonts_path_with_trailing_separator; end

  # source://compass-core//lib/compass/configuration/inheritance.rb#49
  def http_fonts_path_without_default; end

  def http_generated_images_dir; end

  # source://compass-core//lib/compass/configuration/inheritance.rb#22
  def http_generated_images_dir=(value); end

  # source://compass-core//lib/compass/configuration/inheritance.rb#32
  def http_generated_images_dir_set?; end

  # source://compass-core//lib/compass/configuration/inheritance.rb#52
  def http_generated_images_dir_with_trailing_separator; end

  # source://compass-core//lib/compass/configuration/inheritance.rb#49
  def http_generated_images_dir_without_default; end

  def http_generated_images_path; end

  # source://compass-core//lib/compass/configuration/inheritance.rb#22
  def http_generated_images_path=(value); end

  # source://compass-core//lib/compass/configuration/inheritance.rb#32
  def http_generated_images_path_set?; end

  # source://compass-core//lib/compass/configuration/inheritance.rb#52
  def http_generated_images_path_with_trailing_separator; end

  # source://compass-core//lib/compass/configuration/inheritance.rb#49
  def http_generated_images_path_without_default; end

  def http_images_dir; end

  # source://compass-core//lib/compass/configuration/inheritance.rb#22
  def http_images_dir=(value); end

  # source://compass-core//lib/compass/configuration/inheritance.rb#32
  def http_images_dir_set?; end

  # source://compass-core//lib/compass/configuration/inheritance.rb#52
  def http_images_dir_with_trailing_separator; end

  # source://compass-core//lib/compass/configuration/inheritance.rb#49
  def http_images_dir_without_default; end

  def http_images_path; end

  # source://compass-core//lib/compass/configuration/inheritance.rb#22
  def http_images_path=(value); end

  # source://compass-core//lib/compass/configuration/inheritance.rb#32
  def http_images_path_set?; end

  # source://compass-core//lib/compass/configuration/inheritance.rb#52
  def http_images_path_with_trailing_separator; end

  # source://compass-core//lib/compass/configuration/inheritance.rb#49
  def http_images_path_without_default; end

  def http_javascripts_dir; end

  # source://compass-core//lib/compass/configuration/inheritance.rb#22
  def http_javascripts_dir=(value); end

  # source://compass-core//lib/compass/configuration/inheritance.rb#32
  def http_javascripts_dir_set?; end

  # source://compass-core//lib/compass/configuration/inheritance.rb#52
  def http_javascripts_dir_with_trailing_separator; end

  # source://compass-core//lib/compass/configuration/inheritance.rb#49
  def http_javascripts_dir_without_default; end

  def http_javascripts_path; end

  # source://compass-core//lib/compass/configuration/inheritance.rb#22
  def http_javascripts_path=(value); end

  # source://compass-core//lib/compass/configuration/inheritance.rb#32
  def http_javascripts_path_set?; end

  # source://compass-core//lib/compass/configuration/inheritance.rb#52
  def http_javascripts_path_with_trailing_separator; end

  # source://compass-core//lib/compass/configuration/inheritance.rb#49
  def http_javascripts_path_without_default; end

  def http_path; end

  # source://compass-core//lib/compass/configuration/inheritance.rb#22
  def http_path=(value); end

  # source://compass-core//lib/compass/configuration/inheritance.rb#32
  def http_path_set?; end

  # source://compass-core//lib/compass/configuration/inheritance.rb#52
  def http_path_with_trailing_separator; end

  # source://compass-core//lib/compass/configuration/inheritance.rb#49
  def http_path_without_default; end

  def http_stylesheets_dir; end

  # source://compass-core//lib/compass/configuration/inheritance.rb#22
  def http_stylesheets_dir=(value); end

  # source://compass-core//lib/compass/configuration/inheritance.rb#32
  def http_stylesheets_dir_set?; end

  # source://compass-core//lib/compass/configuration/inheritance.rb#52
  def http_stylesheets_dir_with_trailing_separator; end

  # source://compass-core//lib/compass/configuration/inheritance.rb#49
  def http_stylesheets_dir_without_default; end

  def http_stylesheets_path; end

  # source://compass-core//lib/compass/configuration/inheritance.rb#22
  def http_stylesheets_path=(value); end

  # source://compass-core//lib/compass/configuration/inheritance.rb#32
  def http_stylesheets_path_set?; end

  # source://compass-core//lib/compass/configuration/inheritance.rb#52
  def http_stylesheets_path_with_trailing_separator; end

  # source://compass-core//lib/compass/configuration/inheritance.rb#49
  def http_stylesheets_path_without_default; end

  def images_dir; end

  # source://compass-core//lib/compass/configuration/inheritance.rb#22
  def images_dir=(value); end

  # source://compass-core//lib/compass/configuration/inheritance.rb#32
  def images_dir_set?; end

  # source://compass-core//lib/compass/configuration/inheritance.rb#52
  def images_dir_with_trailing_separator; end

  # source://compass-core//lib/compass/configuration/inheritance.rb#49
  def images_dir_without_default; end

  def images_path; end

  # source://compass-core//lib/compass/configuration/inheritance.rb#22
  def images_path=(value); end

  # source://compass-core//lib/compass/configuration/inheritance.rb#32
  def images_path_set?; end

  # source://compass-core//lib/compass/configuration/inheritance.rb#52
  def images_path_with_trailing_separator; end

  # source://compass-core//lib/compass/configuration/inheritance.rb#49
  def images_path_without_default; end

  # source://compass-core//lib/compass/configuration/inheritance.rb#11
  def inherited_data; end

  # source://compass-core//lib/compass/configuration/inheritance.rb#11
  def inherited_data=(_arg0); end

  def javascripts_dir; end

  # source://compass-core//lib/compass/configuration/inheritance.rb#22
  def javascripts_dir=(value); end

  # source://compass-core//lib/compass/configuration/inheritance.rb#32
  def javascripts_dir_set?; end

  # source://compass-core//lib/compass/configuration/inheritance.rb#52
  def javascripts_dir_with_trailing_separator; end

  # source://compass-core//lib/compass/configuration/inheritance.rb#49
  def javascripts_dir_without_default; end

  def javascripts_path; end

  # source://compass-core//lib/compass/configuration/inheritance.rb#22
  def javascripts_path=(value); end

  # source://compass-core//lib/compass/configuration/inheritance.rb#32
  def javascripts_path_set?; end

  # source://compass-core//lib/compass/configuration/inheritance.rb#52
  def javascripts_path_with_trailing_separator; end

  # source://compass-core//lib/compass/configuration/inheritance.rb#49
  def javascripts_path_without_default; end

  # source://compass-core//lib/compass/configuration/inheritance.rb#52
  def line_comments; end

  # source://compass-core//lib/compass/configuration/inheritance.rb#22
  def line_comments=(value); end

  # source://compass-core//lib/compass/configuration/inheritance.rb#32
  def line_comments_set?; end

  # source://compass-core//lib/compass/configuration/inheritance.rb#49
  def line_comments_without_default; end

  # source://compass-core//lib/compass/configuration/data.rb#182
  def load(framework_dir); end

  # source://compass-core//lib/compass/configuration/inheritance.rb#119
  def loaded_frameworks; end

  # source://compass-core//lib/compass/configuration/inheritance.rb#122
  def loaded_frameworks=(value); end

  # source://compass-core//lib/compass/configuration/inheritance.rb#32
  def loaded_frameworks_set?; end

  # source://compass-core//lib/compass/configuration/inheritance.rb#49
  def loaded_frameworks_without_default; end

  # Returns the value of attribute name.
  #
  # source://compass-core//lib/compass/configuration/data.rb#20
  def name; end

  # source://sass/3.4.25/lib/sass/callbacks.rb#53
  def on_sourcemap_removed(&block); end

  # source://sass/3.4.25/lib/sass/callbacks.rb#53
  def on_sourcemap_saved(&block); end

  # source://sass/3.4.25/lib/sass/callbacks.rb#53
  def on_sprite_generated(&block); end

  # source://sass/3.4.25/lib/sass/callbacks.rb#53
  def on_sprite_removed(&block); end

  # source://sass/3.4.25/lib/sass/callbacks.rb#53
  def on_sprite_saved(&block); end

  # source://sass/3.4.25/lib/sass/callbacks.rb#53
  def on_stylesheet_error(&block); end

  # source://sass/3.4.25/lib/sass/callbacks.rb#53
  def on_stylesheet_removed(&block); end

  # source://sass/3.4.25/lib/sass/callbacks.rb#53
  def on_stylesheet_saved(&block); end

  # source://compass-core//lib/compass/configuration/inheritance.rb#52
  def output_style; end

  # source://compass-core//lib/compass/configuration/inheritance.rb#22
  def output_style=(value); end

  # source://compass-core//lib/compass/configuration/inheritance.rb#32
  def output_style_set?; end

  # source://compass-core//lib/compass/configuration/inheritance.rb#49
  def output_style_without_default; end

  # source://compass-core//lib/compass/configuration/inheritance.rb#52
  def preferred_syntax; end

  # source://compass-core//lib/compass/configuration/inheritance.rb#22
  def preferred_syntax=(value); end

  # source://compass-core//lib/compass/configuration/inheritance.rb#32
  def preferred_syntax_set?; end

  # source://compass-core//lib/compass/configuration/inheritance.rb#49
  def preferred_syntax_without_default; end

  def project_path; end

  # source://compass-core//lib/compass/configuration/inheritance.rb#22
  def project_path=(value); end

  # source://compass-core//lib/compass/configuration/inheritance.rb#32
  def project_path_set?; end

  # source://compass-core//lib/compass/configuration/inheritance.rb#52
  def project_path_with_trailing_separator; end

  # source://compass-core//lib/compass/configuration/inheritance.rb#49
  def project_path_without_default; end

  # source://compass-core//lib/compass/configuration/inheritance.rb#52
  def project_type; end

  # source://compass-core//lib/compass/configuration/inheritance.rb#22
  def project_type=(value); end

  # source://compass-core//lib/compass/configuration/inheritance.rb#32
  def project_type_set?; end

  # source://compass-core//lib/compass/configuration/inheritance.rb#49
  def project_type_without_default; end

  # source://compass-core//lib/compass/configuration/inheritance.rb#46
  def raw_additional_import_paths; end

  # source://compass-core//lib/compass/configuration/inheritance.rb#46
  def raw_asset_cache_buster; end

  # source://compass-core//lib/compass/configuration/inheritance.rb#46
  def raw_asset_host; end

  # source://compass-core//lib/compass/configuration/inheritance.rb#46
  def raw_cache; end

  # source://compass-core//lib/compass/configuration/inheritance.rb#46
  def raw_cache_dir; end

  # source://compass-core//lib/compass/configuration/inheritance.rb#46
  def raw_cache_path; end

  # source://compass-core//lib/compass/configuration/inheritance.rb#46
  def raw_chunky_png_options; end

  # source://compass-core//lib/compass/configuration/inheritance.rb#46
  def raw_color_output; end

  # source://compass-core//lib/compass/configuration/inheritance.rb#46
  def raw_css_dir; end

  # source://compass-core//lib/compass/configuration/inheritance.rb#46
  def raw_css_path; end

  # source://compass-core//lib/compass/configuration/inheritance.rb#46
  def raw_disable_warnings; end

  # source://compass-core//lib/compass/configuration/inheritance.rb#46
  def raw_environment; end

  # source://compass-core//lib/compass/configuration/inheritance.rb#46
  def raw_extensions_dir; end

  # source://compass-core//lib/compass/configuration/inheritance.rb#46
  def raw_extensions_path; end

  # source://compass-core//lib/compass/configuration/inheritance.rb#46
  def raw_fonts_dir; end

  # source://compass-core//lib/compass/configuration/inheritance.rb#46
  def raw_fonts_path; end

  # source://compass-core//lib/compass/configuration/inheritance.rb#46
  def raw_framework_path; end

  # source://compass-core//lib/compass/configuration/inheritance.rb#46
  def raw_generated_images_dir; end

  # source://compass-core//lib/compass/configuration/inheritance.rb#46
  def raw_generated_images_path; end

  # source://compass-core//lib/compass/configuration/inheritance.rb#46
  def raw_http_fonts_dir; end

  # source://compass-core//lib/compass/configuration/inheritance.rb#46
  def raw_http_fonts_path; end

  # source://compass-core//lib/compass/configuration/inheritance.rb#46
  def raw_http_generated_images_dir; end

  # source://compass-core//lib/compass/configuration/inheritance.rb#46
  def raw_http_generated_images_path; end

  # source://compass-core//lib/compass/configuration/inheritance.rb#46
  def raw_http_images_dir; end

  # source://compass-core//lib/compass/configuration/inheritance.rb#46
  def raw_http_images_path; end

  # source://compass-core//lib/compass/configuration/inheritance.rb#46
  def raw_http_javascripts_dir; end

  # source://compass-core//lib/compass/configuration/inheritance.rb#46
  def raw_http_javascripts_path; end

  # source://compass-core//lib/compass/configuration/inheritance.rb#46
  def raw_http_path; end

  # source://compass-core//lib/compass/configuration/inheritance.rb#46
  def raw_http_stylesheets_dir; end

  # source://compass-core//lib/compass/configuration/inheritance.rb#46
  def raw_http_stylesheets_path; end

  # source://compass-core//lib/compass/configuration/inheritance.rb#46
  def raw_images_dir; end

  # source://compass-core//lib/compass/configuration/inheritance.rb#46
  def raw_images_path; end

  # source://compass-core//lib/compass/configuration/inheritance.rb#46
  def raw_javascripts_dir; end

  # source://compass-core//lib/compass/configuration/inheritance.rb#46
  def raw_javascripts_path; end

  # source://compass-core//lib/compass/configuration/inheritance.rb#46
  def raw_line_comments; end

  # source://compass-core//lib/compass/configuration/inheritance.rb#46
  def raw_loaded_frameworks; end

  # source://compass-core//lib/compass/configuration/inheritance.rb#46
  def raw_output_style; end

  # source://compass-core//lib/compass/configuration/inheritance.rb#46
  def raw_preferred_syntax; end

  # source://compass-core//lib/compass/configuration/inheritance.rb#46
  def raw_project_path; end

  # source://compass-core//lib/compass/configuration/inheritance.rb#46
  def raw_project_type; end

  # source://compass-core//lib/compass/configuration/inheritance.rb#46
  def raw_relative_assets; end

  # source://compass-core//lib/compass/configuration/inheritance.rb#46
  def raw_required_libraries; end

  # source://compass-core//lib/compass/configuration/inheritance.rb#46
  def raw_sass_dir; end

  # source://compass-core//lib/compass/configuration/inheritance.rb#46
  def raw_sass_options; end

  # source://compass-core//lib/compass/configuration/inheritance.rb#46
  def raw_sass_path; end

  # source://compass-core//lib/compass/configuration/inheritance.rb#46
  def raw_sourcemap; end

  # source://compass-core//lib/compass/configuration/inheritance.rb#46
  def raw_sprite_engine; end

  # source://compass-core//lib/compass/configuration/inheritance.rb#46
  def raw_sprite_load_path; end

  # source://compass-core//lib/compass/configuration/inheritance.rb#129
  def read_inherited_additional_import_paths_array; end

  # source://compass-core//lib/compass/configuration/inheritance.rb#129
  def read_inherited_framework_path_array; end

  # source://compass-core//lib/compass/configuration/inheritance.rb#129
  def read_inherited_loaded_frameworks_array; end

  # source://compass-core//lib/compass/configuration/inheritance.rb#129
  def read_inherited_required_libraries_array; end

  # source://compass-core//lib/compass/configuration/inheritance.rb#129
  def read_inherited_sprite_load_path_array; end

  # source://compass-core//lib/compass/configuration/inheritance.rb#52
  def relative_assets; end

  # source://compass-core//lib/compass/configuration/inheritance.rb#22
  def relative_assets=(value); end

  # @return [Boolean]
  #
  # source://compass-core//lib/compass/configuration/data.rb#193
  def relative_assets?; end

  # source://compass-core//lib/compass/configuration/inheritance.rb#32
  def relative_assets_set?; end

  # source://compass-core//lib/compass/configuration/inheritance.rb#49
  def relative_assets_without_default; end

  # source://compass-core//lib/compass/configuration/inheritance.rb#151
  def remove_from_additional_import_paths(v); end

  # source://compass-core//lib/compass/configuration/inheritance.rb#151
  def remove_from_framework_path(v); end

  # source://compass-core//lib/compass/configuration/inheritance.rb#151
  def remove_from_loaded_frameworks(v); end

  # source://compass-core//lib/compass/configuration/inheritance.rb#151
  def remove_from_required_libraries(v); end

  # source://compass-core//lib/compass/configuration/inheritance.rb#151
  def remove_from_sprite_load_path(v); end

  # Require a compass plugin and capture that it occured so that the configuration serialization works next time.
  #
  # source://compass-core//lib/compass/configuration/data.rb#177
  def require(lib); end

  # source://compass-core//lib/compass/configuration/inheritance.rb#119
  def required_libraries; end

  # source://compass-core//lib/compass/configuration/inheritance.rb#122
  def required_libraries=(value); end

  # source://compass-core//lib/compass/configuration/inheritance.rb#32
  def required_libraries_set?; end

  # source://compass-core//lib/compass/configuration/inheritance.rb#49
  def required_libraries_without_default; end

  # source://compass-core//lib/compass/configuration/inheritance.rb#166
  def run_sourcemap_removed(*args, &block); end

  # source://compass-core//lib/compass/configuration/inheritance.rb#166
  def run_sourcemap_saved(*args, &block); end

  # source://compass-core//lib/compass/configuration/inheritance.rb#166
  def run_sprite_generated(*args, &block); end

  # source://compass-core//lib/compass/configuration/inheritance.rb#166
  def run_sprite_removed(*args, &block); end

  # source://compass-core//lib/compass/configuration/inheritance.rb#166
  def run_sprite_saved(*args, &block); end

  # source://compass-core//lib/compass/configuration/inheritance.rb#166
  def run_stylesheet_error(*args, &block); end

  # source://compass-core//lib/compass/configuration/inheritance.rb#166
  def run_stylesheet_removed(*args, &block); end

  # source://compass-core//lib/compass/configuration/inheritance.rb#166
  def run_stylesheet_saved(*args, &block); end

  def sass_dir; end

  # source://compass-core//lib/compass/configuration/inheritance.rb#22
  def sass_dir=(value); end

  # source://compass-core//lib/compass/configuration/inheritance.rb#32
  def sass_dir_set?; end

  # source://compass-core//lib/compass/configuration/inheritance.rb#52
  def sass_dir_with_trailing_separator; end

  # source://compass-core//lib/compass/configuration/inheritance.rb#49
  def sass_dir_without_default; end

  # source://compass-core//lib/compass/configuration/inheritance.rb#52
  def sass_options; end

  # source://compass-core//lib/compass/configuration/inheritance.rb#22
  def sass_options=(value); end

  # source://compass-core//lib/compass/configuration/inheritance.rb#32
  def sass_options_set?; end

  # source://compass-core//lib/compass/configuration/inheritance.rb#49
  def sass_options_without_default; end

  def sass_path; end

  # source://compass-core//lib/compass/configuration/inheritance.rb#22
  def sass_path=(value); end

  # source://compass-core//lib/compass/configuration/inheritance.rb#32
  def sass_path_set?; end

  # source://compass-core//lib/compass/configuration/inheritance.rb#52
  def sass_path_with_trailing_separator; end

  # source://compass-core//lib/compass/configuration/inheritance.rb#49
  def sass_path_without_default; end

  # source://compass-core//lib/compass/configuration/data.rb#90
  def set_all(attr_hash); end

  # source://compass-core//lib/compass/configuration/inheritance.rb#11
  def set_attributes; end

  # source://compass-core//lib/compass/configuration/inheritance.rb#11
  def set_attributes=(_arg0); end

  # source://compass-core//lib/compass/configuration/inheritance.rb#52
  def sourcemap; end

  # source://compass-core//lib/compass/configuration/inheritance.rb#22
  def sourcemap=(value); end

  # source://compass-core//lib/compass/configuration/inheritance.rb#32
  def sourcemap_set?; end

  # source://compass-core//lib/compass/configuration/inheritance.rb#49
  def sourcemap_without_default; end

  # source://compass-core//lib/compass/configuration/inheritance.rb#52
  def sprite_engine; end

  # source://compass-core//lib/compass/configuration/inheritance.rb#22
  def sprite_engine=(value); end

  # source://compass-core//lib/compass/configuration/inheritance.rb#32
  def sprite_engine_set?; end

  # source://compass-core//lib/compass/configuration/inheritance.rb#49
  def sprite_engine_without_default; end

  # source://compass-core//lib/compass/configuration/inheritance.rb#119
  def sprite_load_path; end

  # source://compass-core//lib/compass/configuration/inheritance.rb#122
  def sprite_load_path=(value); end

  # source://compass-core//lib/compass/configuration/inheritance.rb#32
  def sprite_load_path_set?; end

  # source://compass-core//lib/compass/configuration/inheritance.rb#49
  def sprite_load_path_without_default; end

  # source://compass-core//lib/compass/configuration/inheritance.rb#11
  def top_level; end

  # source://compass-core//lib/compass/configuration/inheritance.rb#11
  def top_level=(_arg0); end

  # source://compass-core//lib/compass/configuration/inheritance.rb#28
  def unset_additional_import_paths!; end

  # source://compass-core//lib/compass/configuration/inheritance.rb#28
  def unset_asset_cache_buster!; end

  # source://compass-core//lib/compass/configuration/inheritance.rb#28
  def unset_asset_host!; end

  # source://compass-core//lib/compass/configuration/inheritance.rb#28
  def unset_cache!; end

  # source://compass-core//lib/compass/configuration/inheritance.rb#28
  def unset_cache_dir!; end

  # source://compass-core//lib/compass/configuration/inheritance.rb#28
  def unset_cache_path!; end

  # source://compass-core//lib/compass/configuration/inheritance.rb#28
  def unset_chunky_png_options!; end

  # source://compass-core//lib/compass/configuration/inheritance.rb#28
  def unset_color_output!; end

  # source://compass-core//lib/compass/configuration/inheritance.rb#28
  def unset_css_dir!; end

  # source://compass-core//lib/compass/configuration/inheritance.rb#28
  def unset_css_path!; end

  # source://compass-core//lib/compass/configuration/inheritance.rb#28
  def unset_disable_warnings!; end

  # source://compass-core//lib/compass/configuration/inheritance.rb#28
  def unset_environment!; end

  # source://compass-core//lib/compass/configuration/inheritance.rb#28
  def unset_extensions_dir!; end

  # source://compass-core//lib/compass/configuration/inheritance.rb#28
  def unset_extensions_path!; end

  # source://compass-core//lib/compass/configuration/inheritance.rb#28
  def unset_fonts_dir!; end

  # source://compass-core//lib/compass/configuration/inheritance.rb#28
  def unset_fonts_path!; end

  # source://compass-core//lib/compass/configuration/inheritance.rb#28
  def unset_framework_path!; end

  # source://compass-core//lib/compass/configuration/inheritance.rb#28
  def unset_generated_images_dir!; end

  # source://compass-core//lib/compass/configuration/inheritance.rb#28
  def unset_generated_images_path!; end

  # source://compass-core//lib/compass/configuration/inheritance.rb#28
  def unset_http_fonts_dir!; end

  # source://compass-core//lib/compass/configuration/inheritance.rb#28
  def unset_http_fonts_path!; end

  # source://compass-core//lib/compass/configuration/inheritance.rb#28
  def unset_http_generated_images_dir!; end

  # source://compass-core//lib/compass/configuration/inheritance.rb#28
  def unset_http_generated_images_path!; end

  # source://compass-core//lib/compass/configuration/inheritance.rb#28
  def unset_http_images_dir!; end

  # source://compass-core//lib/compass/configuration/inheritance.rb#28
  def unset_http_images_path!; end

  # source://compass-core//lib/compass/configuration/inheritance.rb#28
  def unset_http_javascripts_dir!; end

  # source://compass-core//lib/compass/configuration/inheritance.rb#28
  def unset_http_javascripts_path!; end

  # source://compass-core//lib/compass/configuration/inheritance.rb#28
  def unset_http_path!; end

  # source://compass-core//lib/compass/configuration/inheritance.rb#28
  def unset_http_stylesheets_dir!; end

  # source://compass-core//lib/compass/configuration/inheritance.rb#28
  def unset_http_stylesheets_path!; end

  # source://compass-core//lib/compass/configuration/inheritance.rb#28
  def unset_images_dir!; end

  # source://compass-core//lib/compass/configuration/inheritance.rb#28
  def unset_images_path!; end

  # source://compass-core//lib/compass/configuration/inheritance.rb#28
  def unset_javascripts_dir!; end

  # source://compass-core//lib/compass/configuration/inheritance.rb#28
  def unset_javascripts_path!; end

  # source://compass-core//lib/compass/configuration/inheritance.rb#28
  def unset_line_comments!; end

  # source://compass-core//lib/compass/configuration/inheritance.rb#28
  def unset_loaded_frameworks!; end

  # source://compass-core//lib/compass/configuration/inheritance.rb#28
  def unset_output_style!; end

  # source://compass-core//lib/compass/configuration/inheritance.rb#28
  def unset_preferred_syntax!; end

  # source://compass-core//lib/compass/configuration/inheritance.rb#28
  def unset_project_path!; end

  # source://compass-core//lib/compass/configuration/inheritance.rb#28
  def unset_project_type!; end

  # source://compass-core//lib/compass/configuration/inheritance.rb#28
  def unset_relative_assets!; end

  # source://compass-core//lib/compass/configuration/inheritance.rb#28
  def unset_required_libraries!; end

  # source://compass-core//lib/compass/configuration/inheritance.rb#28
  def unset_sass_dir!; end

  # source://compass-core//lib/compass/configuration/inheritance.rb#28
  def unset_sass_options!; end

  # source://compass-core//lib/compass/configuration/inheritance.rb#28
  def unset_sass_path!; end

  # source://compass-core//lib/compass/configuration/inheritance.rb#28
  def unset_sourcemap!; end

  # source://compass-core//lib/compass/configuration/inheritance.rb#28
  def unset_sprite_engine!; end

  # source://compass-core//lib/compass/configuration/inheritance.rb#28
  def unset_sprite_load_path!; end

  # source://compass-core//lib/compass/configuration/data.rb#161
  def watch(glob, &block); end

  # source://compass-core//lib/compass/configuration/data.rb#166
  def watches; end

  private

  # source://sass/3.4.25/lib/sass/callbacks.rb#58
  def _chained_run_sourcemap_removed(*args); end

  # source://sass/3.4.25/lib/sass/callbacks.rb#58
  def _chained_run_sourcemap_saved(*args); end

  # source://sass/3.4.25/lib/sass/callbacks.rb#58
  def _chained_run_sprite_generated(*args); end

  # source://sass/3.4.25/lib/sass/callbacks.rb#58
  def _chained_run_sprite_removed(*args); end

  # source://sass/3.4.25/lib/sass/callbacks.rb#58
  def _chained_run_sprite_saved(*args); end

  # source://sass/3.4.25/lib/sass/callbacks.rb#58
  def _chained_run_stylesheet_error(*args); end

  # source://sass/3.4.25/lib/sass/callbacks.rb#58
  def _chained_run_stylesheet_removed(*args); end

  # source://sass/3.4.25/lib/sass/callbacks.rb#58
  def _chained_run_stylesheet_saved(*args); end
end

# source://compass-core//lib/compass/configuration/defaults.rb#3
module Compass::Configuration::Defaults
  # source://compass-core//lib/compass/configuration/defaults.rb#164
  def default_cache; end

  # source://compass-core//lib/compass/configuration/defaults.rb#100
  def default_cache_dir; end

  # source://compass-core//lib/compass/configuration/defaults.rb#104
  def default_cache_path; end

  # source://compass-core//lib/compass/configuration/defaults.rb#176
  def default_chunky_png_options; end

  # source://compass-core//lib/compass/configuration/defaults.rb#52
  def default_color_output; end

  # source://compass-core//lib/compass/configuration/defaults.rb#20
  def default_css_dir; end

  # source://compass-core//lib/compass/configuration/defaults.rb#62
  def default_css_path; end

  # source://compass-core//lib/compass/configuration/defaults.rb#36
  def default_environment; end

  # source://compass-core//lib/compass/configuration/defaults.rb#16
  def default_extensions_dir; end

  # source://compass-core//lib/compass/configuration/defaults.rb#88
  def default_extensions_path; end

  # source://compass-core//lib/compass/configuration/defaults.rb#28
  def default_fonts_dir; end

  # source://compass-core//lib/compass/configuration/defaults.rb#94
  def default_fonts_path; end

  # source://compass-core//lib/compass/configuration/defaults.rb#116
  def default_generated_images_dir; end

  # source://compass-core//lib/compass/configuration/defaults.rb#74
  def default_generated_images_path; end

  # source://compass-core//lib/compass/configuration/defaults.rb#148
  def default_http_fonts_dir; end

  # source://compass-core//lib/compass/configuration/defaults.rb#152
  def default_http_fonts_path; end

  # source://compass-core//lib/compass/configuration/defaults.rb#120
  def default_http_generated_images_dir; end

  # source://compass-core//lib/compass/configuration/defaults.rb#144
  def default_http_generated_images_path; end

  # source://compass-core//lib/compass/configuration/defaults.rb#124
  def default_http_images_dir; end

  # source://compass-core//lib/compass/configuration/defaults.rb#132
  def default_http_images_path; end

  # source://compass-core//lib/compass/configuration/defaults.rb#156
  def default_http_javascripts_dir; end

  # source://compass-core//lib/compass/configuration/defaults.rb#160
  def default_http_javascripts_path; end

  # source://compass-core//lib/compass/configuration/defaults.rb#12
  def default_http_path; end

  # source://compass-core//lib/compass/configuration/defaults.rb#136
  def default_http_stylesheets_dir; end

  # source://compass-core//lib/compass/configuration/defaults.rb#140
  def default_http_stylesheets_path; end

  # source://compass-core//lib/compass/configuration/defaults.rb#32
  def default_images_dir; end

  # source://compass-core//lib/compass/configuration/defaults.rb#68
  def default_images_path; end

  # source://compass-core//lib/compass/configuration/defaults.rb#82
  def default_javascripts_path; end

  # source://compass-core//lib/compass/configuration/defaults.rb#48
  def default_line_comments; end

  # source://compass-core//lib/compass/configuration/defaults.rb#40
  def default_output_style; end

  # source://compass-core//lib/compass/configuration/defaults.rb#168
  def default_preferred_syntax; end

  # source://compass-core//lib/compass/configuration/defaults.rb#4
  def default_project_path; end

  # source://compass-core//lib/compass/configuration/defaults.rb#8
  def default_project_type; end

  # source://compass-core//lib/compass/configuration/defaults.rb#24
  def default_sass_dir; end

  # source://compass-core//lib/compass/configuration/defaults.rb#56
  def default_sass_path; end

  # source://compass-core//lib/compass/configuration/defaults.rb#172
  def default_sprite_engine; end

  # source://compass-core//lib/compass/configuration/defaults.rb#128
  def default_sprite_load_path; end

  # helper functions
  #
  # source://compass-core//lib/compass/configuration/defaults.rb#186
  def http_join(*segments); end

  # source://compass-core//lib/compass/configuration/defaults.rb#194
  def http_pathify(path); end

  # source://compass-core//lib/compass/configuration/defaults.rb#202
  def http_root_relative(path); end
end

# The inheritance module makes it easy for configuration data to inherit from
# other instances of configuration data. This makes it easier for external code to layer
# bits of configuration from various sources.
#
# source://compass-core//lib/compass/configuration/inheritance.rb#6
module Compass::Configuration::Inheritance
  include ::Compass::Configuration::Inheritance::InstanceMethods

  mixes_in_class_methods ::Compass::Configuration::Inheritance::ClassMethods

  class << self
    # @private
    #
    # source://compass-core//lib/compass/configuration/inheritance.rb#8
    def included(base); end
  end
end

# source://compass-core//lib/compass/configuration/inheritance.rb#17
module Compass::Configuration::Inheritance::ClassMethods
  # source://compass-core//lib/compass/configuration/inheritance.rb#162
  def chained_method(method); end

  # source://compass-core//lib/compass/configuration/inheritance.rb#59
  def inherited_accessor(*attributes); end

  # source://compass-core//lib/compass/configuration/inheritance.rb#112
  def inherited_array(*attributes); end

  # Defines the default reader to be an inherited_reader that will look at the inherited_data for its
  # value when not set. The inherited reader calls to a raw reader that acts like a normal attribute
  # reader but prefixes the attribute name with "raw_".
  #
  # source://compass-core//lib/compass/configuration/inheritance.rb#42
  def inherited_reader(*attributes); end

  # source://compass-core//lib/compass/configuration/inheritance.rb#18
  def inherited_writer(*attributes); end
end

# source://compass-core//lib/compass/configuration/inheritance.rb#64
class Compass::Configuration::Inheritance::ClassMethods::ArrayProxy
  # @return [ArrayProxy] a new instance of ArrayProxy
  #
  # source://compass-core//lib/compass/configuration/inheritance.rb#65
  def initialize(data, attr); end

  # source://compass-core//lib/compass/configuration/inheritance.rb#74
  def <<(v); end

  # source://compass-core//lib/compass/configuration/inheritance.rb#77
  def >>(v); end

  # source://compass-core//lib/compass/configuration/inheritance.rb#102
  def method_missing(m, *args, &block); end

  # source://compass-core//lib/compass/configuration/inheritance.rb#80
  def serialize_to_config(prop); end

  # source://compass-core//lib/compass/configuration/inheritance.rb#71
  def to_a; end

  # source://compass-core//lib/compass/configuration/inheritance.rb#68
  def to_ary; end
end

# source://compass-core//lib/compass/configuration/inheritance.rb#178
module Compass::Configuration::Inheritance::InstanceMethods
  # @return [Boolean]
  #
  # source://compass-core//lib/compass/configuration/inheritance.rb#223
  def any_attributes_set?; end

  # source://compass-core//lib/compass/configuration/inheritance.rb#281
  def chain; end

  # source://compass-core//lib/compass/configuration/inheritance.rb#287
  def debug; end

  # source://compass-core//lib/compass/configuration/inheritance.rb#227
  def default_for(attribute); end

  # source://compass-core//lib/compass/configuration/inheritance.rb#192
  def inherit_from!(data); end

  # source://compass-core//lib/compass/configuration/inheritance.rb#263
  def method_missing(meth, *args, &block); end

  # source://compass-core//lib/compass/configuration/inheritance.rb#180
  def on_top!; end

  # Reads the raw value that was set on this object.
  # you generally should call raw_<attribute>() instead.
  #
  # source://compass-core//lib/compass/configuration/inheritance.rb#249
  def raw(attribute); end

  # Read a value that is either inherited or set on this instance, if we get to the bottom-most configuration instance,
  # we ask for the default starting at the top level.
  #
  # source://compass-core//lib/compass/configuration/inheritance.rb#255
  def read(attribute); end

  # Read an explicitly set value that is either inherited or set on this instance
  #
  # source://compass-core//lib/compass/configuration/inheritance.rb#235
  def read_without_default(attribute); end

  # source://compass-core//lib/compass/configuration/inheritance.rb#201
  def reset_inheritance!; end

  # @return [Boolean]
  #
  # source://compass-core//lib/compass/configuration/inheritance.rb#271
  def respond_to?(meth); end

  # @return [Boolean]
  #
  # source://compass-core//lib/compass/configuration/inheritance.rb#218
  def set?(attribute); end

  # source://compass-core//lib/compass/configuration/inheritance.rb#184
  def set_top_level(new_top); end

  # source://compass-core//lib/compass/configuration/inheritance.rb#211
  def unset!(attribute); end

  # source://compass-core//lib/compass/configuration/inheritance.rb#205
  def with_defaults(data); end
end

# source://compass-core//lib/compass/configuration/paths.rb#1
module Compass::Configuration::Paths
  # source://compass-core//lib/compass/configuration/paths.rb#5
  def strip_trailing_separator(*attributes); end
end

# source://compass-core//lib/compass/configuration/paths.rb#3
Compass::Configuration::Paths::TRAILING_SEPARATOR = T.let(T.unsafe(nil), Regexp)

# source://compass-core//lib/compass/configuration.rb#95
Compass::Configuration::RUNTIME_READONLY_ATTRIBUTES = T.let(T.unsafe(nil), Array)

# source://compass-core//lib/compass/configuration/watch.rb#3
class Compass::Configuration::Watch
  # @return [Watch] a new instance of Watch
  #
  # source://compass-core//lib/compass/configuration/watch.rb#8
  def initialize(glob, &block); end

  # Returns the value of attribute callback.
  #
  # source://compass-core//lib/compass/configuration/watch.rb#4
  def callback; end

  # Returns the value of attribute full_glob.
  #
  # source://compass-core//lib/compass/configuration/watch.rb#6
  def full_glob; end

  # Returns the value of attribute glob.
  #
  # source://compass-core//lib/compass/configuration/watch.rb#5
  def glob; end

  # @return [Boolean]
  #
  # source://compass-core//lib/compass/configuration/watch.rb#33
  def match?(changed_path); end

  # source://compass-core//lib/compass/configuration/watch.rb#25
  def run_callback(base, relative, action); end

  # @return [Boolean]
  #
  # source://compass-core//lib/compass/configuration/watch.rb#29
  def run_once_per_changeset?; end
end

# source://compass-core//lib/compass/core/generated_version.rb#2
module Compass::Core
  private

  # source://compass-core//lib/compass/core.rb#8
  def base_directory(*subdirs); end

  # source://compass-core//lib/compass/core.rb#11
  def lib_directory(*subdirs); end

  class << self
    # source://compass-core//lib/compass/core.rb#8
    def base_directory(*subdirs); end

    # source://compass-core//lib/compass/core.rb#11
    def lib_directory(*subdirs); end

    # Returns the value of attribute module_deprecation_warning_issued.
    #
    # source://compass-core//lib/compass/core.rb#6
    def module_deprecation_warning_issued; end

    # Sets the attribute module_deprecation_warning_issued
    #
    # @param value the value to set the attribute module_deprecation_warning_issued to.
    #
    # source://compass-core//lib/compass/core.rb#6
    def module_deprecation_warning_issued=(_arg0); end

    # source://compass-core//lib/compass/core/version.rb#6
    def scope(file); end
  end
end

# source://compass-core//lib/compass/core/caniuse.rb#3
class Compass::Core::CanIUse
  include ::Singleton
  extend ::Singleton::SingletonClassMethods

  # @return [CanIUse] a new instance of CanIUse
  #
  # source://compass-core//lib/compass/core/caniuse.rb#9
  def initialize; end

  # returns all possible prefixes a browser might use.
  #
  # source://compass-core//lib/compass/core/caniuse.rb#61
  def all_prefixes(browser); end

  # efficiently checks if a browser is valid
  #
  # source://compass-core//lib/compass/core/caniuse.rb#291
  def assert_valid_browser(browser); end

  # efficiently checks if a capability is valid
  #
  # source://compass-core//lib/compass/core/caniuse.rb#299
  def assert_valid_capability(capability); end

  # efficiently checks if a prefix is valid
  #
  # source://compass-core//lib/compass/core/caniuse.rb#283
  def assert_valid_prefix(prefix); end

  # source://compass-core//lib/compass/core/caniuse.rb#307
  def assert_valid_version(browser, *versions); end

  # the metadata assocated with a given browser
  #
  # source://compass-core//lib/compass/core/caniuse.rb#278
  def browser_data(browser); end

  # source://compass-core//lib/compass/core/caniuse.rb#80
  def browser_ranges(capability, prefix = T.unsafe(nil), include_unprefixed_versions = T.unsafe(nil)); end

  # source://compass-core//lib/compass/core/caniuse.rb#272
  def browser_support(browser, version, capability); end

  # Returns all the known browsers according to caniuse
  #
  # source://compass-core//lib/compass/core/caniuse.rb#42
  def browsers; end

  # returns the list of browsers that use the given prefix
  #
  # source://compass-core//lib/compass/core/caniuse.rb#137
  def browsers_with_prefix(prefix); end

  # returns a valid version given the version provided by the user
  # This is used to maintain API compatibility when caniuse removes
  # a version from their data (which seems to be replaced with a semantic equivalent).
  #
  # source://compass-core//lib/compass/core/caniuse.rb#258
  def caniuse_version(browser, version); end

  # The list of capabilities tracked by caniuse.
  #
  # source://compass-core//lib/compass/core/caniuse.rb#243
  def capabilities; end

  # the browser data assocated with a given capability
  #
  # source://compass-core//lib/compass/core/caniuse.rb#268
  def capability_data(capability); end

  # Return whether the capability matcher the options specified.
  # For each capability option in the options the capability will need to match it.
  #
  # source://compass-core//lib/compass/core/caniuse.rb#156
  def capability_matches(support, capability_options_list); end

  # source://compass-core//lib/compass/core/caniuse.rb#98
  def find_first_prefixed_version(browser, versions, capability, prefix); end

  # source://compass-core//lib/compass/core/caniuse.rb#263
  def inspect; end

  # source://compass-core//lib/compass/core/caniuse.rb#180
  def next_version(browser, version); end

  # @overload omitted_usage
  # @overload omitted_usage
  #
  # source://compass-core//lib/compass/core/caniuse.rb#116
  def omitted_usage(browser, min_version, max_version = T.unsafe(nil)); end

  # Returns the prefix corresponding to a particular browser
  #
  # source://compass-core//lib/compass/core/caniuse.rb#47
  def prefix(browser, version = T.unsafe(nil)); end

  # returns the percentage of users (0-100) that would be affected if the prefix
  # was not used with the given capability.
  #
  # source://compass-core//lib/compass/core/caniuse.rb#164
  def prefixed_usage(prefix, capability, capability_options_list); end

  # returns the prefixes needed by the list of browsers given
  #
  # source://compass-core//lib/compass/core/caniuse.rb#72
  def prefixes(browsers = T.unsafe(nil)); end

  # source://compass-core//lib/compass/core/caniuse.rb#187
  def previous_version(browser, version); end

  # Returns whether the given minimum version of a browser
  # requires the use of a prefix for the stated capability.
  #
  # @raise [ArgumentError]
  #
  # source://compass-core//lib/compass/core/caniuse.rb#196
  def requires_prefix(browser, min_version, capability, capability_options_list); end

  # the usage % for a given browser version.
  #
  # source://compass-core//lib/compass/core/caniuse.rb#251
  def usage(browser, version); end

  # Returns the versions of a browser. If the min_usage parameter is provided,
  # only those versions having met the threshold of user percentage.
  #
  # @param min_usage a decimal number betwee 0 and 100
  #
  # source://compass-core//lib/compass/core/caniuse.rb#235
  def versions(browser, min_usage = T.unsafe(nil)); end
end

# These are versions that users might reasonably type
# mapped to the caniuse version.
#
# source://compass-core//lib/compass/core/caniuse.rb#215
Compass::Core::CanIUse::ALTERNATE_VERSIONS = T.let(T.unsafe(nil), Hash)

# source://compass-core//lib/compass/core/caniuse.rb#38
Compass::Core::CanIUse::CAN_I_USE_NAMES = T.let(T.unsafe(nil), Hash)

# source://compass-core//lib/compass/core/caniuse.rb#147
Compass::Core::CanIUse::CAPABILITY_MATCHERS = T.let(T.unsafe(nil), Hash)

# source://compass-core//lib/compass/core/caniuse.rb#7
Compass::Core::CanIUse::DATA_FEATURE_FILES = T.let(T.unsafe(nil), Array)

# source://compass-core//lib/compass/core/caniuse.rb#6
Compass::Core::CanIUse::DATA_FILE_NAME = T.let(T.unsafe(nil), String)

# The browser names from caniuse are ugly.
#
# source://compass-core//lib/compass/core/caniuse.rb#22
Compass::Core::CanIUse::PUBLIC_BROWSER_NAMES = T.let(T.unsafe(nil), Hash)

# source://compass-core//lib/compass/core/caniuse.rb#143
Compass::Core::CanIUse::SPEC_VERSION_MATCHERS = T.let(T.unsafe(nil), Hash)

# source://compass-core//lib/compass/core/sass_extensions.rb#6
module Compass::Core::SassExtensions; end

# source://compass-core//lib/compass/core/sass_extensions/functions.rb#1
module Compass::Core::SassExtensions::Functions; end

# source://compass-core//lib/compass/core/sass_extensions/functions/colors.rb#1
module Compass::Core::SassExtensions::Functions::Colors
  # a genericized version of lighten/darken so that negative values can be used.
  #
  # source://compass-core//lib/compass/core/sass_extensions/functions/colors.rb#4
  def adjust_lightness(color, amount); end

  # a genericized version of saturation/desaturate so that negative values can be used.
  #
  # source://compass-core//lib/compass/core/sass_extensions/functions/colors.rb#20
  def adjust_saturation(color, amount); end

  # returns an IE hex string for a color with an alpha channel
  # suitable for passing to IE filters.
  #
  # source://compass-core//lib/compass/core/sass_extensions/functions/colors.rb#51
  def ie_hex_str(color); end

  # Scales a color's lightness by some percentage.
  # If the amount is negative, the color is scaled darker, if positive, it is scaled lighter.
  # This will never return a pure light or dark color unless the amount is 100%.
  #
  # source://compass-core//lib/compass/core/sass_extensions/functions/colors.rb#13
  def scale_lightness(color, amount); end

  # Scales a color's saturation by some percentage.
  # If the amount is negative, the color is desaturated, if positive, it is saturated.
  # This will never return a pure saturated or desaturated color unless the amount is 100%.
  #
  # source://compass-core//lib/compass/core/sass_extensions/functions/colors.rb#29
  def scale_saturation(color, amount); end

  # source://compass-core//lib/compass/core/sass_extensions/functions/colors.rb#35
  def shade(color, percentage); end

  # source://compass-core//lib/compass/core/sass_extensions/functions/colors.rb#42
  def tint(color, percentage); end

  private

  # source://compass-core//lib/compass/core/sass_extensions/functions/colors.rb#59
  def scale_color_value(value, amount); end
end

# source://compass-core//lib/compass/core/sass_extensions/functions/configuration.rb#2
module Compass::Core::SassExtensions::Functions::Configuration
  extend ::Compass::Core::SassExtensions::Functions::SassDeclarationHelper

  # Returns an absolute path for the path relative to the sass file it was called from.
  #
  # source://compass-core//lib/compass/core/sass_extensions/functions/configuration.rb#13
  def absolute_path(relative_path); end

  # source://compass-core//lib/compass/core/sass_extensions/functions/configuration.rb#127
  def add_configuration(options); end

  # source://compass-core//lib/compass/core/sass_extensions/functions/configuration.rb#40
  def add_sass_configuration(project_path); end

  # Users who need to support windows and unix paths in their configuration
  # should construct them with this helper function.
  #
  # source://compass-core//lib/compass/core/sass_extensions/functions/configuration.rb#7
  def join_file_segments(*segments); end

  # source://compass-core//lib/compass/core/sass_extensions/functions/configuration.rb#34
  def reset_configuration; end

  # split a file into directory, basename, and extension
  #
  # source://compass-core//lib/compass/core/sass_extensions/functions/configuration.rb#19
  def split_filename(path); end

  # Returns true if the compass compiler is compiling this stylesheet.
  #
  # source://compass-core//lib/compass/core/sass_extensions/functions/configuration.rb#29
  def using_compass_compiler; end

  private

  # source://compass-core//lib/compass/core/sass_extensions/functions/configuration.rb#150
  def common_parent_directory(directory1, directory2); end

  # source://compass-core//lib/compass/core/sass_extensions/functions/configuration.rb#155
  def relative_path_from(directory1, directory2); end

  # source://compass-core//lib/compass/core/sass_extensions/functions/configuration.rb#146
  def runtime_writable_attributes; end

  # source://compass-core//lib/compass/core/sass_extensions/functions/configuration.rb#159
  def update_sass_options!; end
end

# source://compass-core//lib/compass/core/sass_extensions/functions/configuration.rb#86
Compass::Core::SassExtensions::Functions::Configuration::OPTION_TRANSFORMER = T.let(T.unsafe(nil), Hash)

# source://compass-core//lib/compass/core/sass_extensions/functions/constants.rb#1
module Compass::Core::SassExtensions::Functions::Constants
  # source://compass-core//lib/compass/core/sass_extensions/functions/constants.rb#3
  def is_position(position); end

  # source://compass-core//lib/compass/core/sass_extensions/functions/constants.rb#6
  def is_position_list(position_list); end

  # source://compass-core//lib/compass/core/sass_extensions/functions/constants.rb#48
  def is_url(string); end

  # returns the opposite position of a side or corner.
  #
  # source://compass-core//lib/compass/core/sass_extensions/functions/constants.rb#10
  def opposite_position(position); end
end

# source://compass-core//lib/compass/core/sass_extensions/functions/constants.rb#2
Compass::Core::SassExtensions::Functions::Constants::POSITIONS = T.let(T.unsafe(nil), Regexp)

# source://compass-core//lib/compass/core/sass_extensions/functions/cross_browser_support.rb#1
module Compass::Core::SassExtensions::Functions::CrossBrowserSupport
  extend ::Compass::Core::SassExtensions::Functions::SassDeclarationHelper

  # source://compass-core//lib/compass/core/sass_extensions/functions/cross_browser_support.rb#42
  def _css2(*args); end

  # source://compass-core//lib/compass/core/sass_extensions/functions/cross_browser_support.rb#42
  def _moz(*args); end

  # source://compass-core//lib/compass/core/sass_extensions/functions/cross_browser_support.rb#42
  def _ms(*args); end

  # source://compass-core//lib/compass/core/sass_extensions/functions/cross_browser_support.rb#42
  def _o(*args); end

  # source://compass-core//lib/compass/core/sass_extensions/functions/cross_browser_support.rb#42
  def _owg(*args); end

  # source://compass-core//lib/compass/core/sass_extensions/functions/cross_browser_support.rb#42
  def _svg(*args); end

  # source://compass-core//lib/compass/core/sass_extensions/functions/cross_browser_support.rb#42
  def _webkit(*args); end

  # The known capabilities of browsers.
  #
  # source://compass-core//lib/compass/core/sass_extensions/functions/cross_browser_support.rb#89
  def browser_capabilities; end

  # the prefix for the given browser.
  #
  # source://compass-core//lib/compass/core/sass_extensions/functions/cross_browser_support.rb#120
  def browser_prefix(browser, version = T.unsafe(nil)); end

  # The prefixes used by the given browsers.
  #
  # source://compass-core//lib/compass/core/sass_extensions/functions/cross_browser_support.rb#130
  def browser_prefixes(browsers); end

  # Returns a map of browsers to the first version the capability became available
  # without a prefix.
  #
  # If a prefix is provided, only those browsers using that prefix will be returned
  # and the minimum version will be when it first became available as a prefix or
  # without a prefix.
  #
  # If a browser does not have the capability, it will not included in the map.
  #
  # source://compass-core//lib/compass/core/sass_extensions/functions/cross_browser_support.rb#217
  def browser_ranges(capability, prefix = T.unsafe(nil), include_unprefixed_versions = T.unsafe(nil)); end

  # whether the browser uses a prefix for the given capability at the version
  # specified or a later version. Returns the prefix it requires, or null.
  #
  # source://compass-core//lib/compass/core/sass_extensions/functions/cross_browser_support.rb#105
  def browser_requires_prefix(browser, version, capability, capability_options); end

  # The versions for the given browser.
  #
  # source://compass-core//lib/compass/core/sass_extensions/functions/cross_browser_support.rb#95
  def browser_versions(browser); end

  # The known browsers.
  #
  # If prefix is given, limits the returned browsers to those using the specified prefix.
  #
  # source://compass-core//lib/compass/core/sass_extensions/functions/cross_browser_support.rb#76
  def browsers(prefix = T.unsafe(nil)); end

  # Compares two browser versions. Returning:
  #
  # * 0 if they are the same
  # * <0 if the first version is less than the second
  # * >0 if the first version is more than the second
  #
  # source://compass-core//lib/compass/core/sass_extensions/functions/cross_browser_support.rb#189
  def compare_browser_versions(browser, version1, version2); end

  # source://compass-core//lib/compass/core/sass_extensions/functions/cross_browser_support.rb#69
  def css2_fallback(value, css2_value); end

  # The version before the version for the browser specified
  #
  # source://compass-core//lib/compass/core/sass_extensions/functions/cross_browser_support.rb#164
  def next_version(browser, version); end

  # The percent of users that are omitted by setting the min_version of browser
  # as specified.
  #
  # source://compass-core//lib/compass/core/sass_extensions/functions/cross_browser_support.rb#143
  def omitted_usage(browser, min_version, max_version = T.unsafe(nil)); end

  # source://compass-core//lib/compass/core/sass_extensions/functions/cross_browser_support.rb#48
  def prefix(prefix, *objects); end

  # The percent of users relying on a particular prefix
  #
  # source://compass-core//lib/compass/core/sass_extensions/functions/cross_browser_support.rb#173
  def prefix_usage(prefix, capability, capability_options); end

  # Check if any of the arguments passed require a vendor prefix.
  #
  # source://compass-core//lib/compass/core/sass_extensions/functions/cross_browser_support.rb#31
  def prefixed(prefix, *args); end

  # The version before the version for the browser specified
  #
  # source://compass-core//lib/compass/core/sass_extensions/functions/cross_browser_support.rb#155
  def previous_version(browser, version); end

  private

  # source://compass-core//lib/compass/core/sass_extensions/functions/cross_browser_support.rb#257
  def unbox_capability_options(capability_options); end

  # source://compass-core//lib/compass/core/sass_extensions/functions/cross_browser_support.rb#233
  def unbox_capability_options_list(capability_options_list); end
end

# source://compass-core//lib/compass/core/sass_extensions/functions/cross_browser_support.rb#243
Compass::Core::SassExtensions::Functions::CrossBrowserSupport::CAPABILITY_OPTION_KEYS = T.let(T.unsafe(nil), Hash)

# source://compass-core//lib/compass/core/sass_extensions/functions/cross_browser_support.rb#250
Compass::Core::SassExtensions::Functions::CrossBrowserSupport::CAPABILITY_OPTION_UNBOXER = T.let(T.unsafe(nil), Hash)

# source://compass-core//lib/compass/core/sass_extensions/functions/cross_browser_support.rb#4
class Compass::Core::SassExtensions::Functions::CrossBrowserSupport::CSS2FallbackValue < ::Sass::Script::Value::Base
  # @return [CSS2FallbackValue] a new instance of CSS2FallbackValue
  #
  # source://compass-core//lib/compass/core/sass_extensions/functions/cross_browser_support.rb#9
  def initialize(value, css2_value); end

  # source://compass-core//lib/compass/core/sass_extensions/functions/cross_browser_support.rb#6
  def children; end

  # Returns the value of attribute css2_value.
  #
  # source://compass-core//lib/compass/core/sass_extensions/functions/cross_browser_support.rb#5
  def css2_value; end

  # Sets the attribute css2_value
  #
  # @param value the value to set the attribute css2_value to.
  #
  # source://compass-core//lib/compass/core/sass_extensions/functions/cross_browser_support.rb#5
  def css2_value=(_arg0); end

  # @return [Boolean]
  #
  # source://compass-core//lib/compass/core/sass_extensions/functions/cross_browser_support.rb#22
  def has_aspect?; end

  # source://compass-core//lib/compass/core/sass_extensions/functions/cross_browser_support.rb#13
  def inspect; end

  # @return [Boolean]
  #
  # source://compass-core//lib/compass/core/sass_extensions/functions/cross_browser_support.rb#19
  def supports?(aspect); end

  # source://compass-core//lib/compass/core/sass_extensions/functions/cross_browser_support.rb#25
  def to_css2(options = T.unsafe(nil)); end

  # source://compass-core//lib/compass/core/sass_extensions/functions/cross_browser_support.rb#16
  def to_s(options = T.unsafe(nil)); end

  # Returns the value of attribute value.
  #
  # source://compass-core//lib/compass/core/sass_extensions/functions/cross_browser_support.rb#5
  def value; end

  # Sets the attribute value
  #
  # @param value the value to set the attribute value to.
  #
  # source://compass-core//lib/compass/core/sass_extensions/functions/cross_browser_support.rb#5
  def value=(_arg0); end
end

# source://compass-core//lib/compass/core/sass_extensions/functions/display.rb#1
module Compass::Core::SassExtensions::Functions::Display
  # returns a comma delimited string for all the
  # elements according to their default css3 display value.
  #
  # source://compass-core//lib/compass/core/sass_extensions/functions/display.rb#29
  def elements_of_type(display); end
end

# source://compass-core//lib/compass/core/sass_extensions/functions/display.rb#2
Compass::Core::SassExtensions::Functions::Display::DEFAULT_DISPLAY = T.let(T.unsafe(nil), Hash)

# source://compass-core//lib/compass/core/sass_extensions/functions/enumerate.rb#1
module Compass::Core::SassExtensions::Functions::Enumerate
  # source://compass-core//lib/compass/core/sass_extensions/functions/enumerate.rb#2
  def enumerate(prefix, from, through, separator = T.unsafe(nil)); end
end

# source://compass-core//lib/compass/core/sass_extensions/functions/env.rb#1
module Compass::Core::SassExtensions::Functions::Env
  extend ::Compass::Core::SassExtensions::Functions::SassDeclarationHelper
  extend ::Sass::Script::Value::Helpers

  # source://compass-core//lib/compass/core/sass_extensions/functions/env.rb#66
  def at_stylesheet_root; end

  # source://compass-core//lib/compass/core/sass_extensions/functions/env.rb#5
  def compass_env; end

  # source://compass-core//lib/compass/core/sass_extensions/functions/env.rb#53
  def compass_extensions; end

  # source://compass-core//lib/compass/core/sass_extensions/functions/env.rb#20
  def current_date(format = T.unsafe(nil)); end

  # source://compass-core//lib/compass/core/sass_extensions/functions/env.rb#40
  def current_output_file(absolute = T.unsafe(nil)); end

  # source://compass-core//lib/compass/core/sass_extensions/functions/env.rb#27
  def current_source_file(absolute = T.unsafe(nil)); end

  # source://compass-core//lib/compass/core/sass_extensions/functions/env.rb#12
  def current_time(format = T.unsafe(nil)); end
end

# source://compass-core//lib/compass/core/sass_extensions/functions/env.rb#19
Compass::Core::SassExtensions::Functions::Env::DEFAULT_DATE = T.let(T.unsafe(nil), Sass::Script::Value::String)

# source://compass-core//lib/compass/core/sass_extensions/functions/env.rb#11
Compass::Core::SassExtensions::Functions::Env::DEFAULT_TIME = T.let(T.unsafe(nil), Sass::Script::Value::String)

# source://compass-core//lib/compass/core/sass_extensions/functions/env.rb#26
Compass::Core::SassExtensions::Functions::Env::NOT_ABSOLUTE = T.let(T.unsafe(nil), Sass::Script::Value::Bool)

# source://compass-core//lib/compass/core/sass_extensions/functions/files.rb#3
module Compass::Core::SassExtensions::Functions::Files
  extend ::Compass::Core::SassExtensions::Functions::SassDeclarationHelper
  extend ::Sass::Script::Value::Helpers

  # source://compass-core//lib/compass/core/sass_extensions/functions/files.rb#7
  def md5sum(file, format = T.unsafe(nil)); end
end

# source://compass-core//lib/compass/core/sass_extensions/functions/font_files.rb#1
module Compass::Core::SassExtensions::Functions::FontFiles
  # source://compass-core//lib/compass/core/sass_extensions/functions/font_files.rb#21
  def font_files(*args); end

  # source://compass-core//lib/compass/core/sass_extensions/functions/font_files.rb#13
  def font_formats(*args); end

  protected

  # source://compass-core//lib/compass/core/sass_extensions/functions/font_files.rb#31
  def with_each_font_file(*args); end
end

# source://compass-core//lib/compass/core/sass_extensions/functions/font_files.rb#2
Compass::Core::SassExtensions::Functions::FontFiles::FONT_TYPES = T.let(T.unsafe(nil), Hash)

# source://compass-core//lib/compass/core/sass_extensions/functions/gradient_support.rb#1
module Compass::Core::SassExtensions::Functions::GradientSupport; end

# source://compass-core//lib/compass/core/sass_extensions/functions/gradient_support.rb#837
module Compass::Core::SassExtensions::Functions::GradientSupport::Assertions
  # @raise [ArgumentError]
  #
  # source://compass-core//lib/compass/core/sass_extensions/functions/gradient_support.rb#838
  def assert_type(value, type, name = T.unsafe(nil)); end
end

# source://compass-core//lib/compass/core/sass_extensions/functions/gradient_support.rb#5
class Compass::Core::SassExtensions::Functions::GradientSupport::CSS3AngleToSVGConverter
  include ::Math

  # @return [CSS3AngleToSVGConverter] a new instance of CSS3AngleToSVGConverter
  #
  # source://compass-core//lib/compass/core/sass_extensions/functions/gradient_support.rb#8
  def initialize(angle); end

  # source://compass-core//lib/compass/core/sass_extensions/functions/gradient_support.rb#41
  def handle_keywords(angle); end

  # source://compass-core//lib/compass/core/sass_extensions/functions/gradient_support.rb#61
  def in_radians(angle); end

  # source://compass-core//lib/compass/core/sass_extensions/functions/gradient_support.rb#141
  def result(v); end

  # source://compass-core//lib/compass/core/sass_extensions/functions/gradient_support.rb#137
  def round6(v); end

  # source://compass-core//lib/compass/core/sass_extensions/functions/gradient_support.rb#133
  def scale(p); end

  # source://compass-core//lib/compass/core/sass_extensions/functions/gradient_support.rb#76
  def sin2(a); end

  # source://compass-core//lib/compass/core/sass_extensions/functions/gradient_support.rb#81
  def x; end

  # source://compass-core//lib/compass/core/sass_extensions/functions/gradient_support.rb#97
  def x1; end

  # source://compass-core//lib/compass/core/sass_extensions/functions/gradient_support.rb#115
  def x2; end

  # source://compass-core//lib/compass/core/sass_extensions/functions/gradient_support.rb#89
  def y; end

  # source://compass-core//lib/compass/core/sass_extensions/functions/gradient_support.rb#106
  def y1; end

  # source://compass-core//lib/compass/core/sass_extensions/functions/gradient_support.rb#124
  def y2; end
end

# source://compass-core//lib/compass/core/sass_extensions/functions/gradient_support.rb#26
Compass::Core::SassExtensions::Functions::GradientSupport::CSS3AngleToSVGConverter::BOTTOM = T.let(T.unsafe(nil), Integer)

# source://compass-core//lib/compass/core/sass_extensions/functions/gradient_support.rb#30
Compass::Core::SassExtensions::Functions::GradientSupport::CSS3AngleToSVGConverter::DIR_KEYWORDS_TO_ANGLE = T.let(T.unsafe(nil), Hash)

# source://compass-core//lib/compass/core/sass_extensions/functions/gradient_support.rb#28
Compass::Core::SassExtensions::Functions::GradientSupport::CSS3AngleToSVGConverter::LEFT = T.let(T.unsafe(nil), Integer)

# source://compass-core//lib/compass/core/sass_extensions/functions/gradient_support.rb#27
Compass::Core::SassExtensions::Functions::GradientSupport::CSS3AngleToSVGConverter::RIGHT = T.let(T.unsafe(nil), Integer)

# source://compass-core//lib/compass/core/sass_extensions/functions/gradient_support.rb#25
Compass::Core::SassExtensions::Functions::GradientSupport::CSS3AngleToSVGConverter::TOP = T.let(T.unsafe(nil), Integer)

# source://compass-core//lib/compass/core/sass_extensions/functions/gradient_support.rb#146
class Compass::Core::SassExtensions::Functions::GradientSupport::ColorStop < ::Sass::Script::Value::Base
  include ::Sass::Script::Value::Helpers

  # @return [ColorStop] a new instance of ColorStop
  #
  # source://compass-core//lib/compass/core/sass_extensions/functions/gradient_support.rb#152
  def initialize(color, stop = T.unsafe(nil)); end

  # source://compass-core//lib/compass/core/sass_extensions/functions/gradient_support.rb#161
  def assert_legal_color!(color); end

  # @raise [Sass::SyntaxError]
  #
  # source://compass-core//lib/compass/core/sass_extensions/functions/gradient_support.rb#169
  def assert_legal_color_stop!(stop); end

  # source://compass-core//lib/compass/core/sass_extensions/functions/gradient_support.rb#149
  def children; end

  # Returns the value of attribute color.
  #
  # source://compass-core//lib/compass/core/sass_extensions/functions/gradient_support.rb#148
  def color; end

  # Sets the attribute color
  #
  # @param value the value to set the attribute color to.
  #
  # source://compass-core//lib/compass/core/sass_extensions/functions/gradient_support.rb#148
  def color=(_arg0); end

  # source://compass-core//lib/compass/core/sass_extensions/functions/gradient_support.rb#157
  def inspect; end

  # Returns the value of attribute stop.
  #
  # source://compass-core//lib/compass/core/sass_extensions/functions/gradient_support.rb#148
  def stop; end

  # Sets the attribute stop
  #
  # @param value the value to set the attribute stop to.
  #
  # source://compass-core//lib/compass/core/sass_extensions/functions/gradient_support.rb#148
  def stop=(_arg0); end

  # source://compass-core//lib/compass/core/sass_extensions/functions/gradient_support.rb#211
  def to_s(options = T.unsafe(nil)); end

  # source://compass-core//lib/compass/core/sass_extensions/functions/gradient_support.rb#224
  def to_sass(options = T.unsafe(nil)); end

  class << self
    # source://compass-core//lib/compass/core/sass_extensions/functions/gradient_support.rb#203
    def color_to_s(c); end

    # source://compass-core//lib/compass/core/sass_extensions/functions/gradient_support.rb#191
    def color_to_svg_alpha(c); end

    # source://compass-core//lib/compass/core/sass_extensions/functions/gradient_support.rb#179
    def color_to_svg_s(c); end
  end
end

# source://compass-core//lib/compass/core/sass_extensions/functions/gradient_support.rb#460
module Compass::Core::SassExtensions::Functions::GradientSupport::Functions
  include ::Sass::Script::Value::Helpers

  # source://compass-core//lib/compass/core/sass_extensions/functions/gradient_support.rb#595
  def _build_linear_gradient(position_or_angle, *color_stops); end

  # source://compass-core//lib/compass/core/sass_extensions/functions/gradient_support.rb#612
  def _linear_gradient(position_or_angle, *color_stops); end

  # source://compass-core//lib/compass/core/sass_extensions/functions/gradient_support.rb#617
  def _linear_gradient_legacy(position_or_angle, *color_stops); end

  # source://compass-core//lib/compass/core/sass_extensions/functions/gradient_support.rb#542
  def color_stops(*args); end

  # source://compass-core//lib/compass/core/sass_extensions/functions/gradient_support.rb#630
  def color_stops_in_percentages(color_list); end

  # source://compass-core//lib/compass/core/sass_extensions/functions/gradient_support.rb#481
  def convert_angle_from_offical(deg); end

  # returns color-stop() calls for use in webkit.
  #
  # source://compass-core//lib/compass/core/sass_extensions/functions/gradient_support.rb#623
  def grad_color_stops(color_list); end

  # returns the end position of the gradient from the color stop
  #
  # source://compass-core//lib/compass/core/sass_extensions/functions/gradient_support.rb#673
  def grad_end_position(color_list, radial = T.unsafe(nil)); end

  # given a position list, return a corresponding position in percents
  # otherwise, returns the original argument
  #
  # source://compass-core//lib/compass/core/sass_extensions/functions/gradient_support.rb#505
  def grad_point(position); end

  # source://compass-core//lib/compass/core/sass_extensions/functions/gradient_support.rb#679
  def grad_position(color_list, index, default, radial = T.unsafe(nil)); end

  # only used for webkit
  #
  # source://compass-core//lib/compass/core/sass_extensions/functions/gradient_support.rb#650
  def linear_end_position(position_or_angle, start_point, end_target); end

  # source://compass-core//lib/compass/core/sass_extensions/functions/gradient_support.rb#705
  def linear_svg_gradient(color_stops, start); end

  # source://compass-core//lib/compass/core/sass_extensions/functions/gradient_support.rb#560
  def radial_gradient(position_or_angle, shape_and_size, *color_stops); end

  # source://compass-core//lib/compass/core/sass_extensions/functions/gradient_support.rb#713
  def radial_svg_gradient(color_stops, center); end

  # source://compass-core//lib/compass/core/sass_extensions/functions/gradient_support.rb#463
  def reverse_side_or_corner(position); end

  private

  # source://compass-core//lib/compass/core/sass_extensions/functions/gradient_support.rb#826
  def _center_position; end

  # @return [Boolean]
  #
  # source://compass-core//lib/compass/core/sass_extensions/functions/gradient_support.rb#724
  def color_stop?(arg); end

  # color_stops = array of: [stop, color]
  #
  # source://compass-core//lib/compass/core/sass_extensions/functions/gradient_support.rb#809
  def color_stops_svg(color_stops); end

  # source://compass-core//lib/compass/core/sass_extensions/functions/gradient_support.rb#798
  def linear_svg(color_stops, x1, y1, x2, y2); end

  # @return [Boolean]
  #
  # source://compass-core//lib/compass/core/sass_extensions/functions/gradient_support.rb#790
  def list_of_color_stops?(arg); end

  # source://compass-core//lib/compass/core/sass_extensions/functions/gradient_support.rb#732
  def normalize_stops(color_list); end

  # source://compass-core//lib/compass/core/sass_extensions/functions/gradient_support.rb#830
  def opts(v); end

  # source://compass-core//lib/compass/core/sass_extensions/functions/gradient_support.rb#767
  def parse_color_stop(arg); end

  # source://compass-core//lib/compass/core/sass_extensions/functions/gradient_support.rb#803
  def radial_svg(color_stops, cx, cy, r); end

  # source://compass-core//lib/compass/core/sass_extensions/functions/gradient_support.rb#819
  def svg(gradient); end
end

# source://compass-core//lib/compass/core/sass_extensions/functions/gradient_support.rb#3
Compass::Core::SassExtensions::Functions::GradientSupport::GRADIENT_ASPECTS = T.let(T.unsafe(nil), Array)

# source://compass-core//lib/compass/core/sass_extensions/functions/gradient_support.rb#229
module Compass::Core::SassExtensions::Functions::GradientSupport::Gradient
  include ::Sass::Script::Value::Helpers

  mixes_in_class_methods ::Compass::Core::SassExtensions::Functions::GradientSupport::Gradient::ClassMethods

  # @return [Boolean]
  #
  # source://compass-core//lib/compass/core/sass_extensions/functions/gradient_support.rb#262
  def angle?(value); end

  # @return [Boolean]
  #
  # source://compass-core//lib/compass/core/sass_extensions/functions/gradient_support.rb#254
  def has_aspect?; end

  # source://compass-core//lib/compass/core/sass_extensions/functions/gradient_support.rb#246
  def inspect; end

  # source://compass-core//lib/compass/core/sass_extensions/functions/gradient_support.rb#258
  def is_position(pos); end

  # @return [Boolean]
  #
  # source://compass-core//lib/compass/core/sass_extensions/functions/gradient_support.rb#250
  def supports?(aspect); end

  class << self
    # @private
    #
    # source://compass-core//lib/compass/core/sass_extensions/functions/gradient_support.rb#232
    def included(base); end
  end
end

# source://compass-core//lib/compass/core/sass_extensions/functions/gradient_support.rb#236
module Compass::Core::SassExtensions::Functions::GradientSupport::Gradient::ClassMethods
  # source://compass-core//lib/compass/core/sass_extensions/functions/gradient_support.rb#237
  def standardized_prefix(prefix); end
end

# source://compass-core//lib/compass/core/sass_extensions/functions/gradient_support.rb#373
class Compass::Core::SassExtensions::Functions::GradientSupport::LinearGradient < ::Sass::Script::Value::Base
  include ::Sass::Script::Value::Helpers
  include ::Compass::Core::SassExtensions::Functions::GradientSupport::Gradient
  include ::Compass::Core::SassExtensions::Functions::GradientSupport::Assertions
  include ::Compass::Core::SassExtensions::Functions::GradientSupport::Functions
  include ::Compass::Core::SassExtensions::Functions::Constants
  include ::Compass::Core::SassExtensions::Functions::InlineImage
  extend ::Compass::Core::SassExtensions::Functions::GradientSupport::Gradient::ClassMethods

  # @return [LinearGradient] a new instance of LinearGradient
  #
  # source://compass-core//lib/compass/core/sass_extensions/functions/gradient_support.rb#382
  def initialize(position_or_angle, color_stops, legacy = T.unsafe(nil)); end

  # source://compass-core//lib/compass/core/sass_extensions/functions/gradient_support.rb#378
  def children; end

  # Returns the value of attribute color_stops.
  #
  # source://compass-core//lib/compass/core/sass_extensions/functions/gradient_support.rb#376
  def color_stops; end

  # Sets the attribute color_stops
  #
  # @param value the value to set the attribute color_stops to.
  #
  # source://compass-core//lib/compass/core/sass_extensions/functions/gradient_support.rb#376
  def color_stops=(_arg0); end

  # source://compass-core//lib/compass/core/sass_extensions/functions/gradient_support.rb#402
  def convert_to_or_from_legacy(position_or_angle, options = T.unsafe(nil)); end

  # Returns the value of attribute legacy.
  #
  # source://compass-core//lib/compass/core/sass_extensions/functions/gradient_support.rb#376
  def legacy; end

  # Sets the attribute legacy
  #
  # @param value the value to set the attribute legacy to.
  #
  # source://compass-core//lib/compass/core/sass_extensions/functions/gradient_support.rb#376
  def legacy=(_arg0); end

  # Returns the value of attribute position_or_angle.
  #
  # source://compass-core//lib/compass/core/sass_extensions/functions/gradient_support.rb#376
  def position_or_angle; end

  # Sets the attribute position_or_angle
  #
  # @param value the value to set the attribute position_or_angle to.
  #
  # source://compass-core//lib/compass/core/sass_extensions/functions/gradient_support.rb#376
  def position_or_angle=(_arg0); end

  # @return [Boolean]
  #
  # source://compass-core//lib/compass/core/sass_extensions/functions/gradient_support.rb#426
  def supports?(aspect); end

  # source://compass-core//lib/compass/core/sass_extensions/functions/gradient_support.rb#455
  def to_css2(options = T.unsafe(nil)); end

  def to_moz(options = T.unsafe(nil)); end
  def to_o(options = T.unsafe(nil)); end

  # Output the original webkit gradient syntax
  #
  # source://compass-core//lib/compass/core/sass_extensions/functions/gradient_support.rb#439
  def to_owg(options = T.unsafe(nil)); end

  # source://compass-core//lib/compass/core/sass_extensions/functions/gradient_support.rb#411
  def to_s(options = T.unsafe(nil)); end

  # source://compass-core//lib/compass/core/sass_extensions/functions/gradient_support.rb#391
  def to_s_prefixed(options = T.unsafe(nil)); end

  # source://compass-core//lib/compass/core/sass_extensions/functions/gradient_support.rb#451
  def to_svg(options = T.unsafe(nil)); end

  def to_webkit(options = T.unsafe(nil)); end
end

# source://compass-core//lib/compass/core/sass_extensions/functions/gradient_support.rb#271
class Compass::Core::SassExtensions::Functions::GradientSupport::RadialGradient < ::Sass::Script::Value::Base
  include ::Sass::Script::Value::Helpers
  include ::Compass::Core::SassExtensions::Functions::GradientSupport::Gradient
  include ::Compass::Core::SassExtensions::Functions::GradientSupport::Assertions
  include ::Compass::Core::SassExtensions::Functions::GradientSupport::Functions
  include ::Compass::Core::SassExtensions::Functions::Constants
  include ::Compass::Core::SassExtensions::Functions::InlineImage
  extend ::Compass::Core::SassExtensions::Functions::GradientSupport::Gradient::ClassMethods

  # @return [RadialGradient] a new instance of RadialGradient
  #
  # source://compass-core//lib/compass/core/sass_extensions/functions/gradient_support.rb#280
  def initialize(position, shape_and_size, color_stops); end

  # source://compass-core//lib/compass/core/sass_extensions/functions/gradient_support.rb#362
  def array_to_s(array, opts); end

  # source://compass-core//lib/compass/core/sass_extensions/functions/gradient_support.rb#276
  def children; end

  # Returns the value of attribute color_stops.
  #
  # source://compass-core//lib/compass/core/sass_extensions/functions/gradient_support.rb#274
  def color_stops; end

  # Sets the attribute color_stops
  #
  # @param value the value to set the attribute color_stops to.
  #
  # source://compass-core//lib/compass/core/sass_extensions/functions/gradient_support.rb#274
  def color_stops=(_arg0); end

  # source://compass-core//lib/compass/core/sass_extensions/functions/gradient_support.rb#333
  def new_standard_arguments(options = T.unsafe(nil)); end

  # source://compass-core//lib/compass/core/sass_extensions/functions/gradient_support.rb#343
  def old_standard_arguments(options = T.unsafe(nil)); end

  # Returns the value of attribute position.
  #
  # source://compass-core//lib/compass/core/sass_extensions/functions/gradient_support.rb#274
  def position; end

  # Sets the attribute position
  #
  # @param value the value to set the attribute position to.
  #
  # source://compass-core//lib/compass/core/sass_extensions/functions/gradient_support.rb#274
  def position=(_arg0); end

  # Returns the value of attribute shape_and_size.
  #
  # source://compass-core//lib/compass/core/sass_extensions/functions/gradient_support.rb#274
  def shape_and_size; end

  # Sets the attribute shape_and_size
  #
  # @param value the value to set the attribute shape_and_size to.
  #
  # source://compass-core//lib/compass/core/sass_extensions/functions/gradient_support.rb#274
  def shape_and_size=(_arg0); end

  # @return [Boolean]
  #
  # source://compass-core//lib/compass/core/sass_extensions/functions/gradient_support.rb#300
  def supports?(aspect); end

  # source://compass-core//lib/compass/core/sass_extensions/functions/gradient_support.rb#358
  def to_css2(options = T.unsafe(nil)); end

  # source://compass-core//lib/compass/core/sass_extensions/functions/gradient_support.rb#319
  def to_moz(options = T.unsafe(nil)); end

  # source://compass-core//lib/compass/core/sass_extensions/functions/gradient_support.rb#326
  def to_official; end

  # source://compass-core//lib/compass/core/sass_extensions/functions/gradient_support.rb#292
  def to_s(options = T.unsafe(nil)); end

  # source://compass-core//lib/compass/core/sass_extensions/functions/gradient_support.rb#296
  def to_s_prefixed(options = T.unsafe(nil)); end

  # source://compass-core//lib/compass/core/sass_extensions/functions/gradient_support.rb#353
  def to_svg(options = T.unsafe(nil)); end

  # source://compass-core//lib/compass/core/sass_extensions/functions/gradient_support.rb#312
  def to_webkit(options = T.unsafe(nil)); end
end

# source://compass-core//lib/compass/core/sass_extensions/functions/image_size.rb#1
module Compass::Core::SassExtensions::Functions::ImageSize
  # Returns the height of the image relative to the images directory
  #
  # source://compass-core//lib/compass/core/sass_extensions/functions/image_size.rb#11
  def image_height(image_file); end

  # Returns the width of the image relative to the images directory
  #
  # source://compass-core//lib/compass/core/sass_extensions/functions/image_size.rb#5
  def image_width(image_file); end

  private

  # source://compass-core//lib/compass/core/sass_extensions/functions/image_size.rb#50
  def image_dimensions(image_file); end

  # source://compass-core//lib/compass/core/sass_extensions/functions/image_size.rb#57
  def image_path_for_size(image_file); end

  # source://compass-core//lib/compass/core/sass_extensions/functions/image_size.rb#64
  def real_path(image_file); end
end

# source://compass-core//lib/compass/core/sass_extensions/functions/image_size.rb#16
class Compass::Core::SassExtensions::Functions::ImageSize::ImageProperties
  # @return [ImageProperties] a new instance of ImageProperties
  #
  # source://compass-core//lib/compass/core/sass_extensions/functions/image_size.rb#17
  def initialize(file); end

  # source://compass-core//lib/compass/core/sass_extensions/functions/image_size.rb#25
  def size; end

  private

  # source://compass-core//lib/compass/core/sass_extensions/functions/image_size.rb#34
  def get_size_for_gif; end

  # source://compass-core//lib/compass/core/sass_extensions/functions/image_size.rb#42
  def get_size_for_jpeg; end

  # source://compass-core//lib/compass/core/sass_extensions/functions/image_size.rb#38
  def get_size_for_jpg; end

  # source://compass-core//lib/compass/core/sass_extensions/functions/image_size.rb#30
  def get_size_for_png; end
end

# source://compass-core//lib/compass/core/sass_extensions/functions/image_size.rb#73
class Compass::Core::SassExtensions::Functions::ImageSize::JPEG
  # @return [JPEG] a new instance of JPEG
  #
  # source://compass-core//lib/compass/core/sass_extensions/functions/image_size.rb#76
  def initialize(file); end

  # Returns the value of attribute bits.
  #
  # source://compass-core//lib/compass/core/sass_extensions/functions/image_size.rb#74
  def bits; end

  # Returns the value of attribute height.
  #
  # source://compass-core//lib/compass/core/sass_extensions/functions/image_size.rb#74
  def height; end

  # Returns the value of attribute width.
  #
  # source://compass-core//lib/compass/core/sass_extensions/functions/image_size.rb#74
  def width; end

  private

  # source://compass-core//lib/compass/core/sass_extensions/functions/image_size.rb#85
  def examine(io); end
end

# source://compass-core//lib/compass/core/sass_extensions/functions/image_size.rb#2
Compass::Core::SassExtensions::Functions::ImageSize::KNOWN_TYPES = T.let(T.unsafe(nil), Array)

# source://compass-core//lib/compass/core/sass_extensions/functions/inline_image.rb#1
module Compass::Core::SassExtensions::Functions::InlineImage
  # source://compass-core//lib/compass/core/sass_extensions/functions/inline_image.rb#9
  def inline_font_files(*args); end

  # source://compass-core//lib/compass/core/sass_extensions/functions/inline_image.rb#3
  def inline_image(path, mime_type = T.unsafe(nil)); end

  protected

  # source://compass-core//lib/compass/core/sass_extensions/functions/inline_image.rb#21
  def inline_image_string(data, mime_type); end

  private

  # source://compass-core//lib/compass/core/sass_extensions/functions/inline_image.rb#28
  def compute_mime_type(path, mime_type = T.unsafe(nil)); end

  # source://compass-core//lib/compass/core/sass_extensions/functions/inline_image.rb#56
  def data(real_path); end
end

# source://compass-core//lib/compass/core/sass_extensions/functions/lists.rb#1
module Compass::Core::SassExtensions::Functions::Lists
  # Returns a list object from a value that was passed.
  # This can be used to unpack a space separated list that got turned
  # into a string by sass before it was passed to a mixin.
  #
  # source://compass-core//lib/compass/core/sass_extensions/functions/lists.rb#43
  def _compass_list(arg); end

  # Returns the size of the list.
  #
  # source://compass-core//lib/compass/core/sass_extensions/functions/lists.rb#62
  def _compass_list_size(list); end

  # Get the nth value from a list
  #
  # source://compass-core//lib/compass/core/sass_extensions/functions/lists.rb#29
  def _compass_nth(list, place); end

  # slice a sublist from a list
  #
  # source://compass-core//lib/compass/core/sass_extensions/functions/lists.rb#68
  def _compass_slice(list, start_index, end_index = T.unsafe(nil)); end

  # If the argument is a list, it will return a new list that is space delimited
  # Otherwise it returns a new, single element, space-delimited list.
  #
  # source://compass-core//lib/compass/core/sass_extensions/functions/lists.rb#53
  def _compass_space_list(list); end

  # Returns true when the object is false, an empty string, or an empty list
  #
  # source://compass-core//lib/compass/core/sass_extensions/functions/lists.rb#4
  def blank(obj); end

  # Returns a new list after removing any non-true values
  #
  # source://compass-core//lib/compass/core/sass_extensions/functions/lists.rb#18
  def compact(*args); end

  # returns the first value of a space delimited list.
  #
  # source://compass-core//lib/compass/core/sass_extensions/functions/lists.rb#83
  def first_value_of(list); end

  # removes the given values from the list.
  #
  # source://compass-core//lib/compass/core/sass_extensions/functions/lists.rb#78
  def reject(list, *values); end

  protected

  # source://compass-core//lib/compass/core/sass_extensions/functions/lists.rb#96
  def assert_list(value); end
end

# source://compass-core//lib/compass/core/sass_extensions/functions/math.rb#1
module Compass::Core::SassExtensions::Functions::Math
  extend ::Compass::Core::SassExtensions::Functions::SassDeclarationHelper
  extend ::Sass::Script::Value::Helpers

  # source://compass-core//lib/compass/core/sass_extensions/functions/math.rb#50
  def acos(number); end

  # source://compass-core//lib/compass/core/sass_extensions/functions/math.rb#40
  def asin(number); end

  # source://compass-core//lib/compass/core/sass_extensions/functions/math.rb#60
  def atan(number); end

  # source://compass-core//lib/compass/core/sass_extensions/functions/math.rb#45
  def cos(number); end

  # source://compass-core//lib/compass/core/sass_extensions/functions/math.rb#20
  def deprecated_random(*args); end

  # source://compass-core//lib/compass/core/sass_extensions/functions/math.rb#65
  def e; end

  # @raise [Sass::SyntaxError]
  #
  # source://compass-core//lib/compass/core/sass_extensions/functions/math.rb#70
  def logarithm(number, base = T.unsafe(nil)); end

  # source://compass-core//lib/compass/core/sass_extensions/functions/math.rb#15
  def pi; end

  # @raise [Sass::SyntaxError]
  #
  # source://compass-core//lib/compass/core/sass_extensions/functions/math.rb#89
  def pow(number, exponent); end

  # source://compass-core//lib/compass/core/sass_extensions/functions/math.rb#35
  def sin(number); end

  # source://compass-core//lib/compass/core/sass_extensions/functions/math.rb#81
  def sqrt(number); end

  # source://compass-core//lib/compass/core/sass_extensions/functions/math.rb#81
  def square_root(number); end

  # source://compass-core//lib/compass/core/sass_extensions/functions/math.rb#55
  def tan(number); end

  private

  # source://compass-core//lib/compass/core/sass_extensions/functions/math.rb#98
  def trig(operation, number); end

  class << self
    # @private
    #
    # source://compass-core//lib/compass/core/sass_extensions/functions/math.rb#5
    def included(base); end
  end
end

# source://compass-core//lib/compass/core/sass_extensions/functions/math.rb#13
Compass::Core::SassExtensions::Functions::Math::E = T.let(T.unsafe(nil), Sass::Script::Value::Number)

# source://compass-core//lib/compass/core/sass_extensions/functions/math.rb#12
Compass::Core::SassExtensions::Functions::Math::PI = T.let(T.unsafe(nil), Sass::Script::Value::Number)

# source://compass-core//lib/compass/core/sass_extensions/functions.rb#2
module Compass::Core::SassExtensions::Functions::SassDeclarationHelper
  # source://compass-core//lib/compass/core/sass_extensions/functions.rb#3
  def declare(*args); end
end

# source://compass-core//lib/compass/core/sass_extensions/functions/selectors.rb#1
module Compass::Core::SassExtensions::Functions::Selectors
  # Permute two selectors, the first may be comma delimited.
  # The end result is a new selector that is the equivalent of nesting the second
  # selector under the first one in a sass file and preceding it with an &.
  # To illustrate, the following mixins are equivalent, except the second
  # mixin handles:
  #
  #     @include mixin-a($selector, $to-append) {
  #       #{$selector} {
  #         &#{$to-append} {
  #           width: 2px
  #         }
  #       }
  #     }
  #
  #     @include mixin-b($selector, $to-append) {
  #       #{append_selector($selector, $to-append)} {
  #         width: 2px
  #       }
  #     }
  #
  # source://compass-core//lib/compass/core/sass_extensions/functions/selectors.rb#50
  def append_selector(selector, to_append); end

  # Return the header selectors for the levels indicated
  # Defaults to all headers h1 through h6
  # For example:
  # headers(all) => h1, h2, h3, h4, h5, h6
  # headers(4) => h1, h2, h3, h4
  # headers(2,4) => h2, h3, h4
  #
  # source://compass-core//lib/compass/core/sass_extensions/functions/selectors.rb#63
  def headers(from = T.unsafe(nil), to = T.unsafe(nil)); end

  # Return the header selectors for the levels indicated
  # Defaults to all headers h1 through h6
  # For example:
  # headers(all) => h1, h2, h3, h4, h5, h6
  # headers(4) => h1, h2, h3, h4
  # headers(2,4) => h2, h3, h4
  #
  # source://compass-core//lib/compass/core/sass_extensions/functions/selectors.rb#63
  def headings(from = T.unsafe(nil), to = T.unsafe(nil)); end

  # Permute multiple selectors each of which may be comma delimited, the end result is
  # a new selector that is the equivalent of nesting each under the previous selector.
  # To illustrate, the following mixins are equivalent:
  #
  #     @include mixin-a($selector1, $selector2, $selector3) {
  #       #{$selector1} {
  #         #{$selector2} {
  #           #{$selector3} {
  #             width: 2px
  #           }
  #         }
  #       }
  #     }
  #     @include mixin-b($selector1, $selector2, $selector3) {
  #       #{nest($selector, $selector2, $selector3)} {
  #         width: 2px
  #       }
  #     }
  #
  # source://compass-core//lib/compass/core/sass_extensions/functions/selectors.rb#22
  def nest(*arguments); end
end

# source://compass-core//lib/compass/core/sass_extensions/functions/selectors.rb#2
Compass::Core::SassExtensions::Functions::Selectors::COMMA_SEPARATOR = T.let(T.unsafe(nil), Regexp)

# source://compass-core//lib/compass/core/sass_extensions/functions/urls.rb#1
module Compass::Core::SassExtensions::Functions::Urls
  include ::Compass::Core::SassExtensions::Functions::Urls::StylesheetUrl
  include ::Compass::Core::SassExtensions::Functions::Urls::FontUrl
  include ::Compass::Core::SassExtensions::Functions::Urls::ImageUrl
  include ::Compass::Core::SassExtensions::Functions::Urls::GeneratedImageUrl

  private

  # @return [Boolean]
  #
  # source://compass-core//lib/compass/core/sass_extensions/functions/urls.rb#256
  def absolute_path?(path); end

  # source://compass-core//lib/compass/core/sass_extensions/functions/urls.rb#268
  def cache_busted_path(path, real_path); end

  # Emits a path, taking off any leading "./"
  #
  # source://compass-core//lib/compass/core/sass_extensions/functions/urls.rb#242
  def clean_path(url); end

  # Emits a url, taking off any leading "./"
  #
  # source://compass-core//lib/compass/core/sass_extensions/functions/urls.rb#248
  def clean_url(url); end

  # source://compass-core//lib/compass/core/sass_extensions/functions/urls.rb#285
  def compute_cache_buster(path, real_path); end

  # source://compass-core//lib/compass/core/sass_extensions/functions/urls.rb#260
  def compute_relative_path(path); end

  # source://compass-core//lib/compass/core/sass_extensions/functions/urls.rb#305
  def default_cache_buster(path, real_path); end

  # @return [Boolean]
  #
  # source://compass-core//lib/compass/core/sass_extensions/functions/urls.rb#252
  def relative?; end

  class << self
    # @return [Boolean]
    #
    # source://compass-core//lib/compass/core/sass_extensions/functions/urls.rb#4
    def has?(base, instance_method); end

    # @private
    #
    # source://compass-core//lib/compass/core/sass_extensions/functions/urls.rb#8
    def included(base); end
  end
end

# source://compass-core//lib/compass/core/sass_extensions/functions/urls.rb#42
module Compass::Core::SassExtensions::Functions::Urls::FontUrl
  # source://compass-core//lib/compass/core/sass_extensions/functions/urls.rb#50
  def font_url(path, only_path = T.unsafe(nil), cache_buster = T.unsafe(nil)); end

  class << self
    # @private
    #
    # source://compass-core//lib/compass/core/sass_extensions/functions/urls.rb#43
    def included(base); end
  end
end

# source://compass-core//lib/compass/core/sass_extensions/functions/urls.rb#174
module Compass::Core::SassExtensions::Functions::Urls::GeneratedImageUrl
  # source://compass-core//lib/compass/core/sass_extensions/functions/urls.rb#181
  def generated_image_url(path, cache_buster = T.unsafe(nil)); end

  class << self
    # @private
    #
    # source://compass-core//lib/compass/core/sass_extensions/functions/urls.rb#175
    def included(base); end
  end
end

# source://compass-core//lib/compass/core/sass_extensions/functions/urls.rb#104
module Compass::Core::SassExtensions::Functions::Urls::ImageUrl
  # source://compass-core//lib/compass/core/sass_extensions/functions/urls.rb#112
  def image_url(path, only_path = T.unsafe(nil), cache_buster = T.unsafe(nil)); end

  class << self
    # @private
    #
    # source://compass-core//lib/compass/core/sass_extensions/functions/urls.rb#105
    def included(base); end
  end
end

# source://compass-core//lib/compass/core/sass_extensions/functions/urls.rb#15
module Compass::Core::SassExtensions::Functions::Urls::StylesheetUrl
  # source://compass-core//lib/compass/core/sass_extensions/functions/urls.rb#22
  def stylesheet_url(path, only_path = T.unsafe(nil)); end

  class << self
    # @private
    #
    # source://compass-core//lib/compass/core/sass_extensions/functions/urls.rb#16
    def included(base); end
  end
end

# source://compass-core//lib/compass/core/version.rb#10
Compass::Core::VERSION = T.let(T.unsafe(nil), String)

# source://compass-core//lib/compass/error.rb#2
class Compass::Error < ::Sass::SyntaxError; end

# source://compass-core//lib/compass/frameworks.rb#2
module Compass::Frameworks
  extend ::Compass::Frameworks

  # source://compass-core//lib/compass/frameworks.rb#66
  def [](name); end

  # source://compass-core//lib/compass/frameworks.rb#41
  def detect_registration; end

  # source://compass-core//lib/compass/frameworks.rb#79
  def discover(frameworks_directory); end

  # source://compass-core//lib/compass/frameworks.rb#70
  def guess_gem_version(line_reference); end

  # source://compass-core//lib/compass/frameworks.rb#131
  def pretty_print(skip_patterns = T.unsafe(nil)); end

  # source://compass-core//lib/compass/frameworks.rb#49
  def register(name, *arguments); end

  # source://compass-core//lib/compass/frameworks.rb#91
  def register_directory(directory); end

  # @return [Boolean]
  #
  # source://compass-core//lib/compass/frameworks.rb#106
  def template_exists?(template); end

  # source://compass-core//lib/compass/frameworks.rb#115
  def template_usage(template); end
end

# source://compass-core//lib/compass/frameworks.rb#5
Compass::Frameworks::ALL = T.let(T.unsafe(nil), Array)

# source://compass-core//lib/compass/frameworks.rb#7
class Compass::Frameworks::Framework
  # @return [Framework] a new instance of Framework
  #
  # source://compass-core//lib/compass/frameworks.rb#12
  def initialize(name, *arguments); end

  # source://compass-core//lib/compass/frameworks.rb#35
  def manifest(pattern, options = T.unsafe(nil)); end

  # source://compass-core//lib/compass/frameworks.rb#31
  def manifest_file(pattern); end

  # Returns the value of attribute name.
  #
  # source://compass-core//lib/compass/frameworks.rb#8
  def name; end

  # Sets the attribute name
  #
  # @param value the value to set the attribute name to.
  #
  # source://compass-core//lib/compass/frameworks.rb#8
  def name=(_arg0); end

  # Returns the value of attribute path.
  #
  # source://compass-core//lib/compass/frameworks.rb#9
  def path; end

  # Sets the attribute path
  #
  # @param value the value to set the attribute path to.
  #
  # source://compass-core//lib/compass/frameworks.rb#9
  def path=(_arg0); end

  # Returns the value of attribute stylesheets_directory.
  #
  # source://compass-core//lib/compass/frameworks.rb#11
  def stylesheets_directory; end

  # Sets the attribute stylesheets_directory
  #
  # @param value the value to set the attribute stylesheets_directory to.
  #
  # source://compass-core//lib/compass/frameworks.rb#11
  def stylesheets_directory=(_arg0); end

  # source://compass-core//lib/compass/frameworks.rb#23
  def template_directories; end

  # Returns the value of attribute templates_directory.
  #
  # source://compass-core//lib/compass/frameworks.rb#11
  def templates_directory; end

  # Sets the attribute templates_directory
  #
  # @param value the value to set the attribute templates_directory to.
  #
  # source://compass-core//lib/compass/frameworks.rb#11
  def templates_directory=(_arg0); end

  # Returns the value of attribute version.
  #
  # source://compass-core//lib/compass/frameworks.rb#10
  def version; end

  # Sets the attribute version
  #
  # @param value the value to set the attribute version to.
  #
  # source://compass-core//lib/compass/frameworks.rb#10
  def version=(_arg0); end
end

# source://compass-core//lib/compass/core.rb#18
module Compass::HasDeprecatedConstantsFromCore
  class << self
    # @private
    #
    # source://compass-core//lib/compass/core.rb#19
    def extended(base); end
  end
end

# source://compass-core//lib/compass/core.rb#41
module Compass::SassExtensions
  extend ::Compass::HasDeprecatedConstantsFromCore

  class << self
    def const_missing(const_name); end
  end
end

# source://compass-core//lib/compass/core.rb#44
module Compass::SassExtensions::Functions
  extend ::Compass::HasDeprecatedConstantsFromCore

  class << self
    def const_missing(const_name); end
  end
end

# source://compass-core//lib/compass/util.rb#1
module Compass::Util
  extend ::Compass::Util

  # @return [Boolean]
  #
  # source://compass-core//lib/compass/util.rb#8
  def blank?(value); end

  # source://compass-core//lib/compass/util.rb#4
  def compass_warn(*args); end
end

# source://compass/1.0.3/lib/compass/version.rb#36
Compass::VERSION = T.let(T.unsafe(nil), String)

# source://compass/1.0.3/lib/compass/version.rb#40
Compass::VERSION_DETAILS = T.let(T.unsafe(nil), Hash)

# source://compass/1.0.3/lib/compass/version.rb#37
Compass::VERSION_NAME = T.let(T.unsafe(nil), String)

# source://compass-core//lib/compass/core/sass_extensions/monkey_patches/traversal.rb#1
module Sass
  class << self
    # source://sass/3.4.25/lib/sass.rb#55
    def compile(contents, options = T.unsafe(nil)); end

    # source://sass/3.4.25/lib/sass.rb#82
    def compile_file(filename, *args); end

    # source://sass/3.4.25/lib/sass.rb#37
    def load_paths; end

    # source://sass/3.4.25/lib/sass/logger.rb#13
    def logger; end

    # source://sass/3.4.25/lib/sass/logger.rb#9
    def logger=(l); end

    # source://sass/3.4.25/lib/sass.rb#17
    def tests_running; end

    # source://sass/3.4.25/lib/sass.rb#17
    def tests_running=(_arg0); end
  end
end

# source://sass/3.4.25/lib/sass/root.rb#6
Sass::ROOT_DIR = T.let(T.unsafe(nil), String)

# source://compass-core//lib/compass/core/sass_extensions/monkey_patches/browser_support.rb#3
module Sass::Script
  class << self
    # source://sass/3.4.25/lib/sass/script.rb#59
    def const_missing(name); end

    # source://sass/3.4.25/lib/sass/script.rb#26
    def parse(value, line, offset, options = T.unsafe(nil)); end
  end
end

# source://sass/3.4.25/lib/sass/script.rb#62
Sass::Script::ArgList = Sass::Script::Value::ArgList

# source://sass/3.4.25/lib/sass/script.rb#62
Sass::Script::Bool = Sass::Script::Value::Bool

# source://sass/3.4.25/lib/sass/script.rb#40
Sass::Script::CONST_RENAMES = T.let(T.unsafe(nil), Hash)

# source://sass/3.4.25/lib/sass/script.rb#62
Sass::Script::Color = Sass::Script::Value::Color

# source://compass-core//lib/compass/core/sass_extensions/monkey_patches/browser_support.rb#48
class Sass::Script::CrossBrowserFunctionCall < ::Sass::Script::Value::Base
  include ::Sass::Script::HasSimpleCrossBrowserFunctionSupport
  include ::Sass::Script::Value::Helpers

  # @return [CrossBrowserFunctionCall] a new instance of CrossBrowserFunctionCall
  #
  # source://compass-core//lib/compass/core/sass_extensions/monkey_patches/browser_support.rb#55
  def initialize(name, args); end

  # Returns the value of attribute args.
  #
  # source://compass-core//lib/compass/core/sass_extensions/monkey_patches/browser_support.rb#50
  def args; end

  # Sets the attribute args
  #
  # @param value the value to set the attribute args to.
  #
  # source://compass-core//lib/compass/core/sass_extensions/monkey_patches/browser_support.rb#50
  def args=(_arg0); end

  # source://compass-core//lib/compass/core/sass_extensions/monkey_patches/browser_support.rb#60
  def children; end

  # source://compass-core//lib/compass/core/sass_extensions/monkey_patches/browser_support.rb#64
  def inspect; end

  # Returns the value of attribute name.
  #
  # source://compass-core//lib/compass/core/sass_extensions/monkey_patches/browser_support.rb#50
  def name; end

  # Sets the attribute name
  #
  # @param value the value to set the attribute name to.
  #
  # source://compass-core//lib/compass/core/sass_extensions/monkey_patches/browser_support.rb#50
  def name=(_arg0); end

  # source://compass-core//lib/compass/core/sass_extensions/monkey_patches/browser_support.rb#74
  def to_css2(options = T.unsafe(nil)); end

  # source://compass-core//lib/compass/core/sass_extensions/monkey_patches/browser_support.rb#74
  def to_moz(options = T.unsafe(nil)); end

  # source://compass-core//lib/compass/core/sass_extensions/monkey_patches/browser_support.rb#74
  def to_ms(options = T.unsafe(nil)); end

  # source://compass-core//lib/compass/core/sass_extensions/monkey_patches/browser_support.rb#74
  def to_o(options = T.unsafe(nil)); end

  # source://compass-core//lib/compass/core/sass_extensions/monkey_patches/browser_support.rb#74
  def to_owg(options = T.unsafe(nil)); end

  # source://compass-core//lib/compass/core/sass_extensions/monkey_patches/browser_support.rb#68
  def to_s(options = T.unsafe(nil)); end

  # source://compass-core//lib/compass/core/sass_extensions/monkey_patches/browser_support.rb#74
  def to_svg(options = T.unsafe(nil)); end

  # source://compass-core//lib/compass/core/sass_extensions/monkey_patches/browser_support.rb#74
  def to_webkit(options = T.unsafe(nil)); end
end

# source://sass/3.4.25/lib/sass/script.rb#62
Sass::Script::Funcall = Sass::Script::Tree::Funcall

# source://compass-core//lib/compass/core/sass_extensions/functions.rb#19
module Sass::Script::Functions
  include ::Compass::Core::SassExtensions::Functions::Configuration
  include ::Compass::Core::SassExtensions::Functions::Selectors
  include ::Compass::Core::SassExtensions::Functions::Enumerate
  include ::Compass::Core::SassExtensions::Functions::Urls
  include ::Compass::Core::SassExtensions::Functions::Urls::StylesheetUrl
  include ::Compass::Core::SassExtensions::Functions::Urls::FontUrl
  include ::Compass::Core::SassExtensions::Functions::Urls::ImageUrl
  include ::Compass::Core::SassExtensions::Functions::Urls::GeneratedImageUrl
  include ::Compass::Core::SassExtensions::Functions::Display
  include ::Compass::Core::SassExtensions::Functions::InlineImage
  include ::Compass::Core::SassExtensions::Functions::ImageSize
  include ::Sass::Script::Value::Helpers
  include ::Compass::Core::SassExtensions::Functions::GradientSupport::Functions
  include ::Compass::Core::SassExtensions::Functions::FontFiles
  include ::Compass::Core::SassExtensions::Functions::Files
  include ::Compass::Core::SassExtensions::Functions::Constants
  include ::Compass::Core::SassExtensions::Functions::Lists
  include ::Compass::Core::SassExtensions::Functions::Colors
  include ::Compass::Core::SassExtensions::Functions::Math
  include ::Compass::Core::SassExtensions::Functions::CrossBrowserSupport
  include ::Compass::Core::SassExtensions::Functions::Env

  # source://sass/3.4.25/lib/sass/script/functions.rb#1777
  def abs(number); end

  # source://sass/3.4.25/lib/sass/script/functions.rb#1126
  def adjust_color(color, kwargs); end

  # source://sass/3.4.25/lib/sass/script/functions.rb#1068
  def adjust_hue(color, degrees); end

  # source://sass/3.4.25/lib/sass/script/functions.rb#898
  def alpha(*args); end

  # source://sass/3.4.25/lib/sass/script/functions.rb#1951
  def append(list, val, separator = T.unsafe(nil)); end

  # source://sass/3.4.25/lib/sass/script/functions.rb#828
  def blue(color); end

  # source://sass/3.4.25/lib/sass/script/functions.rb#2219
  def call(name, *args); end

  # source://sass/3.4.25/lib/sass/script/functions.rb#1749
  def ceil(number); end

  # source://sass/3.4.25/lib/sass/script/functions.rb#1258
  def change_color(color, kwargs); end

  # source://sass/3.4.25/lib/sass/script/functions.rb#1702
  def comparable(number1, number2); end

  # source://sass/3.4.25/lib/sass/script/functions.rb#1377
  def complement(color); end

  # source://sass/3.4.25/lib/sass/script/functions.rb#2242
  def counter(*args); end

  # source://sass/3.4.25/lib/sass/script/functions.rb#2256
  def counters(*args); end

  # source://sass/3.4.25/lib/sass/script/functions.rb#1007
  def darken(color, amount); end

  # source://sass/3.4.25/lib/sass/script/functions.rb#1049
  def desaturate(color, amount); end

  # source://sass/3.4.25/lib/sass/script/functions.rb#944
  def fade_in(color, amount); end

  # source://sass/3.4.25/lib/sass/script/functions.rb#966
  def fade_out(color, amount); end

  # source://sass/3.4.25/lib/sass/script/functions.rb#1650
  def feature_exists(feature); end

  # source://sass/3.4.25/lib/sass/script/functions.rb#1763
  def floor(number); end

  # source://sass/3.4.25/lib/sass/script/functions.rb#2318
  def function_exists(name); end

  # source://sass/3.4.25/lib/sass/script/functions.rb#2300
  def global_variable_exists(name); end

  # source://sass/3.4.25/lib/sass/script/functions.rb#1361
  def grayscale(color); end

  # source://sass/3.4.25/lib/sass/script/functions.rb#812
  def green(color); end

  # source://sass/3.4.25/lib/sass/script/functions.rb#736
  def hsl(hue, saturation, lightness); end

  # source://sass/3.4.25/lib/sass/script/functions.rb#764
  def hsla(hue, saturation, lightness, alpha); end

  # source://sass/3.4.25/lib/sass/script/functions.rb#846
  def hue(color); end

  # source://sass/3.4.25/lib/sass/script/functions.rb#1086
  def ie_hex_str(color); end

  # source://sass/3.4.25/lib/sass/script/functions.rb#2180
  def if(condition, if_true, if_false); end

  # source://sass/3.4.25/lib/sass/script/functions.rb#2012
  def index(list, value); end

  # source://sass/3.4.25/lib/sass/script/functions.rb#2350
  def inspect(value); end

  # source://sass/3.4.25/lib/sass/script/functions.rb#1389
  def invert(color); end

  # source://sass/3.4.25/lib/sass/script/functions.rb#2648
  def is_superselector(sup, sub); end

  # source://sass/3.4.25/lib/sass/script/functions.rb#1915
  def join(list1, list2, separator = T.unsafe(nil)); end

  # source://sass/3.4.25/lib/sass/script/functions.rb#2161
  def keywords(args); end

  # source://sass/3.4.25/lib/sass/script/functions.rb#1827
  def length(list); end

  # source://sass/3.4.25/lib/sass/script/functions.rb#988
  def lighten(color, amount); end

  # source://sass/3.4.25/lib/sass/script/functions.rb#882
  def lightness(color); end

  # source://sass/3.4.25/lib/sass/script/functions.rb#2028
  def list_separator(list); end

  # source://sass/3.4.25/lib/sass/script/functions.rb#2046
  def map_get(map, key); end

  # source://sass/3.4.25/lib/sass/script/functions.rb#2141
  def map_has_key(map, key); end

  # source://sass/3.4.25/lib/sass/script/functions.rb#2109
  def map_keys(map); end

  # source://sass/3.4.25/lib/sass/script/functions.rb#2072
  def map_merge(map1, map2); end

  # source://sass/3.4.25/lib/sass/script/functions.rb#2093
  def map_remove(map, *keys); end

  # source://sass/3.4.25/lib/sass/script/functions.rb#2125
  def map_values(map); end

  # source://sass/3.4.25/lib/sass/script/functions.rb#1810
  def max(*values); end

  # source://sass/3.4.25/lib/sass/script/functions.rb#1793
  def min(*numbers); end

  # source://sass/3.4.25/lib/sass/script/functions.rb#1313
  def mix(color1, color2, weight = T.unsafe(nil)); end

  # source://sass/3.4.25/lib/sass/script/functions.rb#2338
  def mixin_exists(name); end

  # source://sass/3.4.25/lib/sass/script/functions.rb#1883
  def nth(list, n); end

  # source://sass/3.4.25/lib/sass/script/functions.rb#944
  def opacify(color, amount); end

  # source://sass/3.4.25/lib/sass/script/functions.rb#921
  def opacity(color); end

  # source://sass/3.4.25/lib/sass/script/functions.rb#1718
  def percentage(number); end

  # source://sass/3.4.25/lib/sass/script/functions.rb#1449
  def quote(string); end

  # source://compass-core//lib/compass/core/sass_extensions/functions/math.rb#20
  def random(*args); end

  # source://sass/3.4.25/lib/sass/script/functions.rb#796
  def red(color); end

  # source://sass/3.4.25/lib/sass/script/functions.rb#637
  def rgb(red, green, blue); end

  # source://sass/3.4.25/lib/sass/script/functions.rb#693
  def rgba(*args); end

  # source://sass/3.4.25/lib/sass/script/functions.rb#1735
  def round(number); end

  # source://sass/3.4.25/lib/sass/script/functions.rb#2365
  def sass_random(limit = T.unsafe(nil)); end

  # source://sass/3.4.25/lib/sass/script/functions.rb#1026
  def saturate(color, amount = T.unsafe(nil)); end

  # source://sass/3.4.25/lib/sass/script/functions.rb#864
  def saturation(color); end

  # source://sass/3.4.25/lib/sass/script/functions.rb#1194
  def scale_color(color, kwargs); end

  # source://sass/3.4.25/lib/sass/script/functions.rb#2449
  def selector_append(*selectors); end

  # source://sass/3.4.25/lib/sass/script/functions.rb#2506
  def selector_extend(selector, extendee, extender); end

  # source://sass/3.4.25/lib/sass/script/functions.rb#2419
  def selector_nest(*selectors); end

  # source://sass/3.4.25/lib/sass/script/functions.rb#2393
  def selector_parse(selector); end

  # source://sass/3.4.25/lib/sass/script/functions.rb#2549
  def selector_replace(selector, original, replacement); end

  # source://sass/3.4.25/lib/sass/script/functions.rb#2595
  def selector_unify(selector1, selector2); end

  # source://sass/3.4.25/lib/sass/script/functions.rb#1852
  def set_nth(list, n, value); end

  # source://sass/3.4.25/lib/sass/script/functions.rb#2622
  def simple_selectors(selector); end

  # source://sass/3.4.25/lib/sass/script/functions.rb#1525
  def str_index(string, substring); end

  # source://sass/3.4.25/lib/sass/script/functions.rb#1493
  def str_insert(original, insert, index); end

  # source://sass/3.4.25/lib/sass/script/functions.rb#1467
  def str_length(string); end

  # source://sass/3.4.25/lib/sass/script/functions.rb#1555
  def str_slice(string, start_at, end_at = T.unsafe(nil)); end

  # source://sass/3.4.25/lib/sass/script/functions.rb#1599
  def to_lower_case(string); end

  # source://sass/3.4.25/lib/sass/script/functions.rb#1584
  def to_upper_case(string); end

  # source://sass/3.4.25/lib/sass/script/functions.rb#966
  def transparentize(color, amount); end

  # source://sass/3.4.25/lib/sass/script/functions.rb#1619
  def type_of(value); end

  # source://sass/3.4.25/lib/sass/script/functions.rb#2195
  def unique_id; end

  # source://sass/3.4.25/lib/sass/script/functions.rb#1670
  def unit(number); end

  # source://sass/3.4.25/lib/sass/script/functions.rb#1685
  def unitless(number); end

  # source://sass/3.4.25/lib/sass/script/functions.rb#1413
  def unquote(string); end

  # source://sass/3.4.25/lib/sass/script/functions.rb#2276
  def variable_exists(name); end

  # source://sass/3.4.25/lib/sass/script/functions.rb#1979
  def zip(*lists); end

  private

  # source://sass/3.4.25/lib/sass/script/functions.rb#2668
  def _adjust(color, amount, attr, range, op, units = T.unsafe(nil)); end

  # source://sass/3.4.25/lib/sass/script/functions.rb#2677
  def check_alpha_unit(alpha, function); end

  # source://sass/3.4.25/lib/sass/script/functions.rb#2660
  def numeric_transformation(value); end

  class << self
    def callable?(*_arg0); end

    # source://sass/3.4.25/lib/sass/script/functions.rb#406
    def declare(method_name, args, options = T.unsafe(nil)); end

    # source://sass/3.4.25/lib/sass/script/functions.rb#480
    def random_number_generator; end

    # source://sass/3.4.25/lib/sass/script/functions.rb#473
    def random_seed=(seed); end

    # source://sass/3.4.25/lib/sass/script/functions.rb#440
    def signature(method_name, arg_arity, kwarg_arity); end

    private

    # source://sass/3.4.25/lib/sass/script/functions.rb#612
    def include(*args); end
  end
end

# Wierd that this has to be re-included to pick up sub-modules. Ruby bug?
#
# source://compass-core//lib/compass/core/sass_extensions/functions.rb#39
class Sass::Script::Functions::EvaluationContext
  include ::Compass::Core::SassExtensions::Functions::Configuration
  include ::Compass::Core::SassExtensions::Functions::Selectors
  include ::Compass::Core::SassExtensions::Functions::Enumerate
  include ::Compass::Core::SassExtensions::Functions::Urls
  include ::Compass::Core::SassExtensions::Functions::Urls::StylesheetUrl
  include ::Compass::Core::SassExtensions::Functions::Urls::FontUrl
  include ::Compass::Core::SassExtensions::Functions::Urls::ImageUrl
  include ::Compass::Core::SassExtensions::Functions::Urls::GeneratedImageUrl
  include ::Compass::Core::SassExtensions::Functions::Display
  include ::Compass::Core::SassExtensions::Functions::InlineImage
  include ::Compass::Core::SassExtensions::Functions::ImageSize
  include ::Compass::Core::SassExtensions::Functions::GradientSupport::Functions
  include ::Compass::Core::SassExtensions::Functions::FontFiles
  include ::Compass::Core::SassExtensions::Functions::Files
  include ::Compass::Core::SassExtensions::Functions::Constants
  include ::Compass::Core::SassExtensions::Functions::Lists
  include ::Compass::Core::SassExtensions::Functions::Colors
  include ::Compass::Core::SassExtensions::Functions::Math
  include ::Compass::Core::SassExtensions::Functions::CrossBrowserSupport
  include ::Compass::Core::SassExtensions::Functions::Env
  include ::Compass::SassExtensions::Functions::Sprites
  include ::Sprockets::SassProcessor::Functions

  # source://sass/3.4.25/lib/sass/script/functions.rb#509
  def initialize(environment); end

  # source://sass/3.4.25/lib/sass/script/functions.rb#574
  def assert_integer(number, name = T.unsafe(nil)); end

  # source://sass/3.4.25/lib/sass/script/functions.rb#528
  def assert_type(value, type, name = T.unsafe(nil)); end

  # source://sass/3.4.25/lib/sass/script/functions.rb#552
  def assert_unit(number, unit, name = T.unsafe(nil)); end

  # source://sass/3.4.25/lib/sass/script/functions.rb#501
  def environment; end

  # source://sass/3.4.25/lib/sass/script/functions.rb#506
  def options; end

  # source://sass/3.4.25/lib/sass/script/functions.rb#594
  def perform(node, env = T.unsafe(nil)); end
end

# source://sass/3.4.25/lib/sass/script/functions.rb#493
Sass::Script::Functions::EvaluationContext::TYPE_NAMES = T.let(T.unsafe(nil), Hash)

# source://compass-core//lib/compass/core/sass_extensions/monkey_patches/browser_support.rb#35
module Sass::Script::HasSimpleCrossBrowserFunctionSupport
  # @return [Boolean]
  #
  # source://compass-core//lib/compass/core/sass_extensions/monkey_patches/browser_support.rb#41
  def has_aspect?(children = T.unsafe(nil)); end

  # @return [Boolean]
  #
  # source://compass-core//lib/compass/core/sass_extensions/monkey_patches/browser_support.rb#36
  def supports?(aspect); end
end

# source://sass/3.4.25/lib/sass/script.rb#62
Sass::Script::Interpolation = Sass::Script::Tree::Interpolation

# source://sass/3.4.25/lib/sass/script.rb#62
Sass::Script::List = Sass::Script::Value::List

# source://sass/3.4.25/lib/sass/script.rb#62
Sass::Script::Literal = Sass::Script::Value::Base

# source://sass/3.4.25/lib/sass/script.rb#10
Sass::Script::MATCH = T.let(T.unsafe(nil), Regexp)

# source://sass/3.4.25/lib/sass/script.rb#62
Sass::Script::Node = Sass::Script::Tree::Node

# source://sass/3.4.25/lib/sass/script.rb#62
Sass::Script::Null = Sass::Script::Value::Null

# source://sass/3.4.25/lib/sass/script.rb#62
Sass::Script::Number = Sass::Script::Value::Number

# source://sass/3.4.25/lib/sass/script.rb#62
Sass::Script::Operation = Sass::Script::Tree::Operation

# source://sass/3.4.25/lib/sass/script.rb#62
Sass::Script::String = Sass::Script::Value::String

# source://sass/3.4.25/lib/sass/script.rb#62
Sass::Script::StringInterpolation = Sass::Script::Tree::StringInterpolation

module Sass::Script::Tree; end

# source://compass-core//lib/compass/core/sass_extensions/monkey_patches/browser_support.rb#95
class Sass::Script::Tree::Funcall < ::Sass::Script::Tree::Node
  include ::Sass::Script::HasSimpleCrossBrowserFunctionSupport
end

# source://sass/3.4.25/lib/sass/script.rb#62
Sass::Script::UnaryOperation = Sass::Script::Tree::UnaryOperation

# source://sass/3.4.25/lib/sass/script.rb#14
Sass::Script::VALIDATE = T.let(T.unsafe(nil), Regexp)

# source://compass-core//lib/compass/core/sass_extensions/monkey_patches/browser_support.rb#4
module Sass::Script::Value; end

# source://compass-core//lib/compass/core/sass_extensions/monkey_patches/browser_support.rb#23
class Sass::Script::Value::ArgList < ::Sass::Script::Value::List
  # source://sass/3.4.25/lib/sass/script/value/arg_list.rb#19
  def initialize(value, keywords, separator); end

  # source://compass-core//lib/compass/core/sass_extensions/monkey_patches/browser_support.rb#24
  def children; end

  # source://sass/3.4.25/lib/sass/script/value/arg_list.rb#31
  def keywords; end

  # source://sass/3.4.25/lib/sass/script/value/arg_list.rb#12
  def keywords_accessed; end

  # source://sass/3.4.25/lib/sass/script/value/arg_list.rb#12
  def keywords_accessed=(_arg0); end
end

# source://compass-core//lib/compass/core/sass_extensions/monkey_patches/browser_support.rb#5
class Sass::Script::Value::Base
  # source://sass/3.4.25/lib/sass/script/value/base.rb#22
  def initialize(value = T.unsafe(nil)); end

  # source://sass/3.4.25/lib/sass/script/value/base.rb#175
  def ==(other); end

  # source://sass/3.4.25/lib/sass/script/value/base.rb#186
  def assert_int!; end

  # source://compass-core//lib/compass/core/sass_extensions/monkey_patches/browser_support.rb#7
  def children; end

  # source://sass/3.4.25/lib/sass/script/value/base.rb#118
  def div(other); end

  # source://sass/3.4.25/lib/sass/script/value/base.rb#58
  def eq(other); end

  # source://sass/3.4.25/lib/sass/script/value/base.rb#157
  def eql?(other); end

  # source://sass/3.4.25/lib/sass/script/value/base.rb#153
  def hash; end

  # source://sass/3.4.25/lib/sass/script/value/base.rb#162
  def inspect; end

  # source://sass/3.4.25/lib/sass/script/value/base.rb#109
  def minus(other); end

  # source://sass/3.4.25/lib/sass/script/value/base.rb#69
  def neq(other); end

  # source://sass/3.4.25/lib/sass/script/value/base.rb#227
  def null?; end

  # source://sass/3.4.25/lib/sass/script/value/base.rb#41
  def options; end

  # source://sass/3.4.25/lib/sass/script/value/base.rb#33
  def options=(_arg0); end

  # source://compass-core//lib/compass/core/sass_extensions/monkey_patches/browser_support.rb#11
  def opts(value); end

  # source://sass/3.4.25/lib/sass/script/value/base.rb#99
  def plus(other); end

  # source://sass/3.4.25/lib/sass/script/value/base.rb#193
  def separator; end

  # source://sass/3.4.25/lib/sass/script/value/base.rb#90
  def single_eq(other); end

  # source://sass/3.4.25/lib/sass/script/value/base.rb#17
  def source_range; end

  # source://sass/3.4.25/lib/sass/script/value/base.rb#17
  def source_range=(_arg0); end

  # source://sass/3.4.25/lib/sass/script/value/base.rb#199
  def to_a; end

  # source://sass/3.4.25/lib/sass/script/value/base.rb#167
  def to_bool; end

  # source://sass/3.4.25/lib/sass/script/value/base.rb#208
  def to_h; end

  # source://sass/3.4.25/lib/sass/script/value/base.rb#181
  def to_i; end

  # source://sass/3.4.25/lib/sass/script/value/base.rb#219
  def to_s(opts = T.unsafe(nil)); end

  # source://sass/3.4.25/lib/sass/script/value/base.rb#219
  def to_sass(opts = T.unsafe(nil)); end

  # source://sass/3.4.25/lib/sass/script/value/base.rb#145
  def unary_div; end

  # source://sass/3.4.25/lib/sass/script/value/base.rb#136
  def unary_minus; end

  # source://sass/3.4.25/lib/sass/script/value/base.rb#80
  def unary_not; end

  # source://sass/3.4.25/lib/sass/script/value/base.rb#127
  def unary_plus; end

  # source://sass/3.4.25/lib/sass/script/value/base.rb#12
  def value; end

  protected

  # source://sass/3.4.25/lib/sass/script/value/base.rb#237
  def _perform(environment); end
end

# source://compass-core//lib/compass/core/sass_extensions/monkey_patches/browser_support.rb#6
Sass::Script::Value::Base::NO_CHILDREN = T.let(T.unsafe(nil), Array)

# source://compass-core//lib/compass/core/sass_extensions/monkey_patches/browser_support.rb#17
class Sass::Script::Value::List < ::Sass::Script::Value::Base
  # source://sass/3.4.25/lib/sass/script/value/list.rb#21
  def initialize(value, separator); end

  # source://compass-core//lib/compass/core/sass_extensions/monkey_patches/browser_support.rb#18
  def children; end

  # source://sass/3.4.25/lib/sass/script/value/list.rb#33
  def eq(other); end

  # source://compass-core//lib/compass/core/sass_extensions/monkey_patches/browser_support.rb#114
  def has_aspect?; end

  # source://sass/3.4.25/lib/sass/script/value/list.rb#39
  def hash; end

  # source://sass/3.4.25/lib/sass/script/value/list.rb#72
  def inspect; end

  # source://sass/3.4.25/lib/sass/script/value/list.rb#27
  def options=(options); end

  # source://sass/3.4.25/lib/sass/script/value/list.rb#15
  def separator; end

  # source://compass-core//lib/compass/core/sass_extensions/monkey_patches/browser_support.rb#110
  def supports?(aspect); end

  # source://sass/3.4.25/lib/sass/script/value/list.rb#8
  def to_a; end

  # source://sass/3.4.25/lib/sass/script/value/list.rb#66
  def to_h; end

  # source://sass/3.4.25/lib/sass/script/value/list.rb#44
  def to_s(opts = T.unsafe(nil)); end

  # source://sass/3.4.25/lib/sass/script/value/list.rb#52
  def to_sass(opts = T.unsafe(nil)); end

  # source://sass/3.4.25/lib/sass/script/value/list.rb#8
  def value; end

  private

  # source://sass/3.4.25/lib/sass/script/value/list.rb#95
  def element_needs_parens?(element); end

  # source://sass/3.4.25/lib/sass/script/value/list.rb#107
  def sep_str(opts = T.unsafe(nil)); end

  class << self
    # source://sass/3.4.25/lib/sass/script/value/list.rb#82
    def assert_valid_index(list, n); end
  end
end

# source://compass-core//lib/compass/core/sass_extensions/monkey_patches/browser_support.rb#29
class Sass::Script::Value::Map < ::Sass::Script::Value::Base
  # source://sass/3.4.25/lib/sass/script/value/map.rb#14
  def initialize(hash); end

  # source://compass-core//lib/compass/core/sass_extensions/monkey_patches/browser_support.rb#30
  def children; end

  # source://sass/3.4.25/lib/sass/script/value/map.rb#42
  def eq(other); end

  # source://sass/3.4.25/lib/sass/script/value/map.rb#46
  def hash; end

  # source://sass/3.4.25/lib/sass/script/value/map.rb#55
  def inspect(opts = T.unsafe(nil)); end

  # source://sass/3.4.25/lib/sass/script/value/map.rb#19
  def options=(options); end

  # source://sass/3.4.25/lib/sass/script/value/map.rb#28
  def separator; end

  # source://sass/3.4.25/lib/sass/script/value/map.rb#33
  def to_a; end

  # source://sass/3.4.25/lib/sass/script/value/map.rb#8
  def to_h; end

  # source://sass/3.4.25/lib/sass/script/value/map.rb#51
  def to_s(opts = T.unsafe(nil)); end

  # source://sass/3.4.25/lib/sass/script/value/map.rb#55
  def to_sass(opts = T.unsafe(nil)); end

  # source://sass/3.4.25/lib/sass/script/value/map.rb#8
  def value; end
end

# source://sass/3.4.25/lib/sass/script.rb#62
Sass::Script::Variable = Sass::Script::Tree::Variable

# source://compass-core//lib/compass/core/sass_extensions/monkey_patches/traversal.rb#2
module Sass::Tree; end

# source://compass-core//lib/compass/core/sass_extensions/monkey_patches/traversal.rb#3
class Sass::Tree::Node
  # source://sass/3.4.25/lib/sass/tree/node.rb#91
  def initialize; end

  # source://sass/3.4.25/lib/sass/tree/node.rb#122
  def <<(child); end

  # source://sass/3.4.25/lib/sass/tree/node.rb#143
  def ==(other); end

  # source://sass/3.4.25/lib/sass/tree/node.rb#225
  def bubbles?; end

  # source://sass/3.4.25/lib/sass/tree/node.rb#61
  def children; end

  # source://sass/3.4.25/lib/sass/tree/node.rb#106
  def children=(children); end

  # source://sass/3.4.25/lib/sass/tree/node.rb#165
  def css; end

  # source://sass/3.4.25/lib/sass/tree/node.rb#174
  def css_with_sourcemap; end

  # source://sass/3.4.25/lib/sass/tree/node.rb#218
  def deep_copy; end

  # source://sass/3.4.25/lib/sass/tree/node.rb#193
  def each; end

  # source://sass/3.4.25/lib/sass/tree/node.rb#114
  def filename; end

  # source://sass/3.4.25/lib/sass/tree/node.rb#83
  def filename=(_arg0); end

  # source://sass/3.4.25/lib/sass/tree/node.rb#68
  def has_children; end

  # source://sass/3.4.25/lib/sass/tree/node.rb#68
  def has_children=(_arg0); end

  # source://sass/3.4.25/lib/sass/tree/node.rb#183
  def inspect; end

  # source://sass/3.4.25/lib/sass/tree/node.rb#152
  def invisible?; end

  # source://sass/3.4.25/lib/sass/tree/node.rb#73
  def line; end

  # source://sass/3.4.25/lib/sass/tree/node.rb#73
  def line=(_arg0); end

  # source://sass/3.4.25/lib/sass/tree/node.rb#89
  def options; end

  # source://sass/3.4.25/lib/sass/tree/node.rb#101
  def options=(options); end

  # source://sass/3.4.25/lib/sass/tree/node.rb#78
  def source_range; end

  # source://sass/3.4.25/lib/sass/tree/node.rb#78
  def source_range=(_arg0); end

  # source://sass/3.4.25/lib/sass/tree/node.rb#157
  def style; end

  # source://sass/3.4.25/lib/sass/tree/node.rb#202
  def to_sass(options = T.unsafe(nil)); end

  # source://sass/3.4.25/lib/sass/tree/node.rb#210
  def to_scss(options = T.unsafe(nil)); end

  # source://compass-core//lib/compass/core/sass_extensions/monkey_patches/traversal.rb#5
  def visit_depth_first(visitor); end

  protected

  # source://sass/3.4.25/lib/sass/tree/node.rb#233
  def balance(*args); end

  class << self
    # source://sass/3.4.25/lib/sass/tree/node.rb#33
    def inherited(base); end
  end
end

# source://sass/3.4.25/lib/sass/version.rb#123
Sass::VERSION = T.let(T.unsafe(nil), String)
