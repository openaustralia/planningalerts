# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for types exported from the `compass` gem.
# Please instead update this file by running `bin/tapioca gem compass`.

# source://compass//lib/compass.rb#1
module Compass
  extend ::Compass::Version
  extend ::QuickCache
  extend ::Compass::Configuration::Helpers

  private

  # source://compass//lib/compass.rb#20
  def base_directory; end

  # source://compass//lib/compass.rb#23
  def lib_directory; end

  # source://compass-core/1.0.3/lib/compass/core.rb#49
  def shared_extension_paths; end

  class << self
    # source://compass-core/1.0.3/lib/compass/configuration.rb#134
    def add_configuration(data, filename = T.unsafe(nil)); end

    # source://compass//lib/compass.rb#20
    def base_directory; end

    # source://compass-core/1.0.3/lib/compass/configuration.rb#122
    def configuration; end

    def const_missing(const_name); end

    # source://compass-core/1.0.3/lib/compass/configuration.rb#130
    def default_configuration; end

    # source://compass-core/1.0.3/lib/compass/configuration.rb#162
    def deprojectize(path, project_path = T.unsafe(nil)); end

    # source://compass-core/1.0.3/lib/compass/frameworks.rb#169
    def discover_extensions!; end

    # source://compass-core/1.0.3/lib/compass/frameworks.rb#157
    def discover_gem_extensions!; end

    # source://compass//lib/compass.rb#23
    def lib_directory; end

    # source://compass-core/1.0.3/lib/compass/configuration.rb#157
    def projectize(path, project_path = T.unsafe(nil)); end

    # source://compass-core/1.0.3/lib/compass/configuration.rb#152
    def reset_configuration!; end

    # source://compass-core/1.0.3/lib/compass/core.rb#49
    def shared_extension_paths; end
  end
end

# source://compass//lib/compass/actions.rb#2
module Compass::Actions
  # source://compass//lib/compass/actions.rb#82
  def basename(file); end

  # copy/process a template in the compass template directory to the project directory.
  #
  # source://compass//lib/compass/actions.rb#11
  def copy(from, to, options = T.unsafe(nil), binary = T.unsafe(nil)); end

  # create a directory and all the directories necessary to reach it.
  #
  # source://compass//lib/compass/actions.rb#22
  def directory(dir, options = T.unsafe(nil)); end

  # source://compass//lib/compass/actions.rb#107
  def log_action(action, file, options); end

  # source://compass//lib/compass/actions.rb#6
  def logger; end

  # Sets the attribute logger
  #
  # @param value the value to set the attribute logger to.
  #
  # source://compass//lib/compass/actions.rb#4
  def logger=(_arg0); end

  # source://compass//lib/compass/actions.rb#66
  def process_erb(contents, ctx = T.unsafe(nil)); end

  # source://compass//lib/compass/actions.rb#86
  def relativize(path); end

  # source://compass//lib/compass/actions.rb#71
  def remove(file_name); end

  # Write paths like we're on unix and then fix it
  #
  # source://compass//lib/compass/actions.rb#98
  def separate(path); end

  # Removes the trailing separator, if any, from a path.
  #
  # source://compass//lib/compass/actions.rb#103
  def strip_trailing_separator(path); end

  # Write a file given the file contents as a string
  #
  # source://compass//lib/compass/actions.rb#37
  def write_file(file_name, contents, options = T.unsafe(nil), binary = T.unsafe(nil)); end
end

# source://compass//lib/compass/app_integration/stand_alone/configuration_defaults.rb#2
module Compass::AppIntegration
  extend ::Compass::AppIntegration::Helpers
end

# source://compass//lib/compass/app_integration.rb#5
module Compass::AppIntegration::Helpers
  # @return [Boolean]
  #
  # source://compass//lib/compass/app_integration.rb#19
  def default?; end

  # source://compass//lib/compass/app_integration.rb#11
  def init; end

  # source://compass//lib/compass/app_integration.rb#23
  def lookup(type); end

  # source://compass//lib/compass/app_integration.rb#15
  def project_types; end

  # source://compass//lib/compass/app_integration.rb#31
  def register(type, klass); end
end

# attr_accessor :project_types
#
# source://compass//lib/compass/app_integration.rb#7
Compass::AppIntegration::Helpers::DEAFULT_PROJECT_TYPES = T.let(T.unsafe(nil), Hash)

# source://compass//lib/compass/app_integration/stand_alone/configuration_defaults.rb#3
module Compass::AppIntegration::StandAlone
  extend ::Compass::AppIntegration::StandAlone

  # source://compass//lib/compass/app_integration/stand_alone.rb#15
  def configuration; end

  # source://compass//lib/compass/app_integration/stand_alone.rb#11
  def installer(*args); end
end

# source://compass//lib/compass/app_integration/stand_alone/configuration_defaults.rb#4
module Compass::AppIntegration::StandAlone::ConfigurationDefaults
  # source://compass//lib/compass/app_integration/stand_alone/configuration_defaults.rb#17
  def css_dir_without_default; end

  # source://compass//lib/compass/app_integration/stand_alone/configuration_defaults.rb#25
  def default_cache_dir; end

  # source://compass//lib/compass/app_integration/stand_alone/configuration_defaults.rb#5
  def default_project_type; end

  # source://compass//lib/compass/app_integration/stand_alone/configuration_defaults.rb#21
  def images_dir_without_default; end

  # source://compass//lib/compass/app_integration/stand_alone/configuration_defaults.rb#13
  def javascripts_dir_without_default; end

  # source://compass//lib/compass/app_integration/stand_alone/configuration_defaults.rb#9
  def sass_dir_without_default; end
end

# source://compass//lib/compass/app_integration/stand_alone/installer.rb#11
class Compass::AppIntegration::StandAlone::Installer < ::Compass::Installers::ManifestInstaller
  # @return [Boolean]
  #
  # source://compass//lib/compass/app_integration/stand_alone/installer.rb#77
  def compilation_required?; end

  # source://compass//lib/compass/app_integration/stand_alone/installer.rb#38
  def completed_configuration; end

  # source://compass//lib/compass/app_integration/stand_alone/installer.rb#27
  def config_contents; end

  # @return [Boolean]
  #
  # source://compass//lib/compass/app_integration/stand_alone/installer.rb#23
  def config_files_exist?; end

  # source://compass//lib/compass/app_integration/stand_alone/installer.rb#42
  def finalize(options = T.unsafe(nil)); end

  # source://compass//lib/compass/app_integration/stand_alone/installer.rb#13
  def init; end

  # source://compass//lib/compass/app_integration/stand_alone/installer.rb#34
  def prepare; end

  # source://compass//lib/compass/app_integration/stand_alone/installer.rb#18
  def write_configuration_files(config_file = T.unsafe(nil)); end
end

Compass::Commands = T.let(T.unsafe(nil), T.untyped)

# source://compass//lib/compass/compiler.rb#4
class Compass::Compiler
  include ::Compass::Actions

  # @return [Compiler] a new instance of Compiler
  #
  # source://compass//lib/compass/compiler.rb#10
  def initialize(working_path, from, to, options); end

  # source://compass//lib/compass/compiler.rb#108
  def clean!; end

  # Compile one Sass file
  #
  # source://compass//lib/compass/compiler.rb#166
  def compile(sass_filename, css_filename, sourcemap_filename = T.unsafe(nil)); end

  # source://compass//lib/compass/compiler.rb#144
  def compile_if_required(sass_filename, css_filename, sourcemap_filename = T.unsafe(nil)); end

  # source://compass//lib/compass/compiler.rb#66
  def corresponding_css_file(sass_file); end

  # source://compass//lib/compass/compiler.rb#70
  def corresponding_sourcemap_file(sass_file); end

  # source://compass//lib/compass/compiler.rb#58
  def css_files; end

  # source://compass//lib/compass/compiler.rb#37
  def determine_cache_location; end

  # A sass engine for compiling a single file.
  #
  # source://compass//lib/compass/compiler.rb#204
  def engine(sass_filename, css_filename, sourcemap_filename = T.unsafe(nil)); end

  # Haml refactored this logic in 2.3, this is backwards compatibility for either one
  #
  # source://compass//lib/compass/compiler.rb#227
  def error_contents(e, sass_filename); end

  # Returns the value of attribute from.
  #
  # source://compass//lib/compass/compiler.rb#8
  def from; end

  # Sets the attribute from
  #
  # @param value the value to set the attribute from to.
  #
  # source://compass//lib/compass/compiler.rb#8
  def from=(_arg0); end

  # Place the syntax error into the target css file,
  # formatted to display in the browser (in development mode)
  # if there's an error.
  #
  # source://compass//lib/compass/compiler.rb#216
  def handle_exception(sass_filename, css_filename, e); end

  # Returns the value of attribute importer.
  #
  # source://compass//lib/compass/compiler.rb#8
  def importer; end

  # Sets the attribute importer
  #
  # @param value the value to set the attribute importer to.
  #
  # source://compass//lib/compass/compiler.rb#8
  def importer=(_arg0); end

  # @return [Boolean]
  #
  # source://compass//lib/compass/compiler.rb#86
  def needs_update?(css_filename, sass_filename); end

  # Determines if the configuration file is newer than any css file
  #
  # @return [Boolean]
  #
  # source://compass//lib/compass/compiler.rb#91
  def new_config?; end

  # Returns the value of attribute options.
  #
  # source://compass//lib/compass/compiler.rb#8
  def options; end

  # Sets the attribute options
  #
  # @param value the value to set the attribute options to.
  #
  # source://compass//lib/compass/compiler.rb#8
  def options=(_arg0); end

  # Returns the sass file that needs to be compiled, if any.
  #
  # @return [Boolean]
  #
  # source://compass//lib/compass/compiler.rb#79
  def out_of_date?; end

  # source://compass//lib/compass/compiler.rb#191
  def relative_path(from_path, to_path); end

  # source://compass//lib/compass/compiler.rb#46
  def relative_stylesheet_name(sass_file); end

  # source://compass//lib/compass/compiler.rb#101
  def reset!; end

  # source://compass//lib/compass/compiler.rb#31
  def reset_staleness_checker!; end

  # source://compass//lib/compass/compiler.rb#116
  def run; end

  # source://compass//lib/compass/compiler.rb#41
  def sass_files(options = T.unsafe(nil)); end

  # Returns the value of attribute sass_options.
  #
  # source://compass//lib/compass/compiler.rb#8
  def sass_options; end

  # Sets the attribute sass_options
  #
  # @param value the value to set the attribute sass_options to.
  #
  # source://compass//lib/compass/compiler.rb#8
  def sass_options=(_arg0); end

  # @return [Boolean]
  #
  # source://compass//lib/compass/compiler.rb#195
  def should_compile?(sass_filename, css_filename, sourcemap_filename = T.unsafe(nil)); end

  # We don't want to show the full exception in production environments.
  #
  # @return [Boolean]
  #
  # source://compass//lib/compass/compiler.rb#244
  def show_full_exception?; end

  # source://compass//lib/compass/compiler.rb#62
  def sourcemap_files; end

  # Returns the value of attribute staleness_checker.
  #
  # source://compass//lib/compass/compiler.rb#8
  def staleness_checker; end

  # Sets the attribute staleness_checker
  #
  # @param value the value to set the attribute staleness_checker to.
  #
  # source://compass//lib/compass/compiler.rb#8
  def staleness_checker=(_arg0); end

  # source://compass//lib/compass/compiler.rb#50
  def stylesheet_name(sass_file); end

  # source://compass//lib/compass/compiler.rb#74
  def target_directories; end

  # source://compass//lib/compass/compiler.rb#153
  def timed(timed_thing = T.unsafe(nil)); end

  # Returns the value of attribute to.
  #
  # source://compass//lib/compass/compiler.rb#8
  def to; end

  # Sets the attribute to
  #
  # @param value the value to set the attribute to to.
  #
  # source://compass//lib/compass/compiler.rb#8
  def to=(_arg0); end

  # Returns the value of attribute working_path.
  #
  # source://compass//lib/compass/compiler.rb#8
  def working_path; end

  # Sets the attribute working_path
  #
  # @param value the value to set the attribute working_path to.
  #
  # source://compass//lib/compass/compiler.rb#8
  def working_path=(_arg0); end
end

# source://compass//lib/compass/configuration/helpers.rb#2
module Compass::Configuration
  class << self
    # source://compass-core/1.0.3/lib/compass/configuration.rb#21
    def add_configuration_property(name, comment = T.unsafe(nil), &default); end

    # source://compass-core/1.0.3/lib/compass/configuration.rb#5
    def attributes_for_directory(dir_name, http_dir_name = T.unsafe(nil)); end

    # source://compass-core/1.0.3/lib/compass/configuration.rb#44
    def remove_configuration_property(name); end
  end
end

# source://compass-core/1.0.3/lib/compass/configuration.rb#83
Compass::Configuration::ARRAY_ATTRIBUTES = T.let(T.unsafe(nil), Array)

# source://compass-core/1.0.3/lib/compass/configuration.rb#91
Compass::Configuration::ARRAY_ATTRIBUTE_OPTIONS = T.let(T.unsafe(nil), Hash)

# source://compass-core/1.0.3/lib/compass/configuration.rb#50
Compass::Configuration::ATTRIBUTES = T.let(T.unsafe(nil), Array)

# Comments are emitted into the configuration file when serialized and make it easier to understand for new users.
#
# source://compass//lib/compass/configuration/comments.rb#4
module Compass::Configuration::Comments
  # source://compass//lib/compass/configuration/comments.rb#6
  def comment_for_http_path; end

  # source://compass//lib/compass/configuration/comments.rb#24
  def comment_for_line_comments; end

  # source://compass//lib/compass/configuration/comments.rb#34
  def comment_for_output_style; end

  # source://compass//lib/compass/configuration/comments.rb#44
  def comment_for_preferred_syntax; end

  # source://compass//lib/compass/configuration/comments.rb#14
  def comment_for_relative_assets; end
end

# source://compass//lib/compass/configuration/comments.rb#58
class Compass::Configuration::Data
  include ::Compass::Configuration::Comments
  include ::Compass::Configuration::Serialization

  # source://compass-core/1.0.3/lib/compass/configuration/data.rb#83
  def initialize(name, attr_hash = T.unsafe(nil)); end

  # source://compass-core/1.0.3/lib/compass/configuration/data.rb#98
  def add_import_path(*paths); end

  # source://compass-core/1.0.3/lib/compass/configuration/inheritance.rb#144
  def add_to_additional_import_paths(v); end

  # source://compass-core/1.0.3/lib/compass/configuration/inheritance.rb#144
  def add_to_framework_path(v); end

  # source://compass-core/1.0.3/lib/compass/configuration/inheritance.rb#144
  def add_to_loaded_frameworks(v); end

  # source://compass-core/1.0.3/lib/compass/configuration/inheritance.rb#144
  def add_to_required_libraries(v); end

  # source://compass-core/1.0.3/lib/compass/configuration/inheritance.rb#144
  def add_to_sprite_load_path(v); end

  # source://compass-core/1.0.3/lib/compass/configuration/inheritance.rb#119
  def additional_import_paths; end

  # source://compass-core/1.0.3/lib/compass/configuration/inheritance.rb#122
  def additional_import_paths=(value); end

  # source://compass-core/1.0.3/lib/compass/configuration/inheritance.rb#32
  def additional_import_paths_set?; end

  # source://compass-core/1.0.3/lib/compass/configuration/inheritance.rb#49
  def additional_import_paths_without_default; end

  # source://compass-core/1.0.3/lib/compass/configuration/data.rb#140
  def asset_cache_buster(simple = T.unsafe(nil), &block); end

  # source://compass-core/1.0.3/lib/compass/configuration/inheritance.rb#22
  def asset_cache_buster=(value); end

  # source://compass-core/1.0.3/lib/compass/configuration/inheritance.rb#32
  def asset_cache_buster_set?; end

  # source://compass-core/1.0.3/lib/compass/configuration/inheritance.rb#49
  def asset_cache_buster_without_default; end

  # source://compass-core/1.0.3/lib/compass/configuration/data.rb#113
  def asset_host(&block); end

  # source://compass-core/1.0.3/lib/compass/configuration/inheritance.rb#22
  def asset_host=(value); end

  # source://compass-core/1.0.3/lib/compass/configuration/inheritance.rb#32
  def asset_host_set?; end

  # source://compass-core/1.0.3/lib/compass/configuration/inheritance.rb#49
  def asset_host_without_default; end

  # source://compass-core/1.0.3/lib/compass/configuration/inheritance.rb#52
  def cache; end

  # source://compass-core/1.0.3/lib/compass/configuration/inheritance.rb#22
  def cache=(value); end

  def cache_dir; end

  # source://compass-core/1.0.3/lib/compass/configuration/inheritance.rb#22
  def cache_dir=(value); end

  # source://compass-core/1.0.3/lib/compass/configuration/inheritance.rb#32
  def cache_dir_set?; end

  # source://compass-core/1.0.3/lib/compass/configuration/inheritance.rb#52
  def cache_dir_with_trailing_separator; end

  # source://compass-core/1.0.3/lib/compass/configuration/inheritance.rb#49
  def cache_dir_without_default; end

  def cache_path; end

  # source://compass-core/1.0.3/lib/compass/configuration/inheritance.rb#22
  def cache_path=(value); end

  # source://compass-core/1.0.3/lib/compass/configuration/inheritance.rb#32
  def cache_path_set?; end

  # source://compass-core/1.0.3/lib/compass/configuration/inheritance.rb#52
  def cache_path_with_trailing_separator; end

  # source://compass-core/1.0.3/lib/compass/configuration/inheritance.rb#49
  def cache_path_without_default; end

  # source://compass-core/1.0.3/lib/compass/configuration/inheritance.rb#32
  def cache_set?; end

  # source://compass-core/1.0.3/lib/compass/configuration/inheritance.rb#49
  def cache_without_default; end

  # source://compass-core/1.0.3/lib/compass/configuration/inheritance.rb#52
  def chunky_png_options; end

  # source://compass-core/1.0.3/lib/compass/configuration/inheritance.rb#22
  def chunky_png_options=(value); end

  # source://compass-core/1.0.3/lib/compass/configuration/inheritance.rb#32
  def chunky_png_options_set?; end

  # source://compass-core/1.0.3/lib/compass/configuration/inheritance.rb#49
  def chunky_png_options_without_default; end

  # source://compass-core/1.0.3/lib/compass/configuration/inheritance.rb#52
  def color_output; end

  # source://compass-core/1.0.3/lib/compass/configuration/inheritance.rb#22
  def color_output=(value); end

  # source://compass-core/1.0.3/lib/compass/configuration/inheritance.rb#32
  def color_output_set?; end

  # source://compass-core/1.0.3/lib/compass/configuration/inheritance.rb#49
  def color_output_without_default; end

  def css_dir; end

  # source://compass-core/1.0.3/lib/compass/configuration/inheritance.rb#22
  def css_dir=(value); end

  # source://compass-core/1.0.3/lib/compass/configuration/inheritance.rb#32
  def css_dir_set?; end

  # source://compass-core/1.0.3/lib/compass/configuration/inheritance.rb#52
  def css_dir_with_trailing_separator; end

  # source://compass-core/1.0.3/lib/compass/configuration/inheritance.rb#49
  def css_dir_without_default; end

  def css_path; end

  # source://compass-core/1.0.3/lib/compass/configuration/inheritance.rb#22
  def css_path=(value); end

  # source://compass-core/1.0.3/lib/compass/configuration/inheritance.rb#32
  def css_path_set?; end

  # source://compass-core/1.0.3/lib/compass/configuration/inheritance.rb#52
  def css_path_with_trailing_separator; end

  # source://compass-core/1.0.3/lib/compass/configuration/inheritance.rb#49
  def css_path_without_default; end

  # source://compass-core/1.0.3/lib/compass/configuration/inheritance.rb#52
  def disable_warnings; end

  # source://compass-core/1.0.3/lib/compass/configuration/inheritance.rb#22
  def disable_warnings=(value); end

  # source://compass-core/1.0.3/lib/compass/configuration/inheritance.rb#32
  def disable_warnings_set?; end

  # source://compass-core/1.0.3/lib/compass/configuration/inheritance.rb#49
  def disable_warnings_without_default; end

  # source://compass-core/1.0.3/lib/compass/configuration/data.rb#188
  def discover(frameworks_dir); end

  # source://compass-core/1.0.3/lib/compass/configuration/inheritance.rb#52
  def environment; end

  # source://compass-core/1.0.3/lib/compass/configuration/inheritance.rb#22
  def environment=(value); end

  # source://compass-core/1.0.3/lib/compass/configuration/inheritance.rb#32
  def environment_set?; end

  # source://compass-core/1.0.3/lib/compass/configuration/inheritance.rb#49
  def environment_without_default; end

  def extensions_dir; end

  # source://compass-core/1.0.3/lib/compass/configuration/inheritance.rb#22
  def extensions_dir=(value); end

  # source://compass-core/1.0.3/lib/compass/configuration/inheritance.rb#32
  def extensions_dir_set?; end

  # source://compass-core/1.0.3/lib/compass/configuration/inheritance.rb#52
  def extensions_dir_with_trailing_separator; end

  # source://compass-core/1.0.3/lib/compass/configuration/inheritance.rb#49
  def extensions_dir_without_default; end

  def extensions_path; end

  # source://compass-core/1.0.3/lib/compass/configuration/inheritance.rb#22
  def extensions_path=(value); end

  # source://compass-core/1.0.3/lib/compass/configuration/inheritance.rb#32
  def extensions_path_set?; end

  # source://compass-core/1.0.3/lib/compass/configuration/inheritance.rb#52
  def extensions_path_with_trailing_separator; end

  # source://compass-core/1.0.3/lib/compass/configuration/inheritance.rb#49
  def extensions_path_without_default; end

  def fonts_dir; end

  # source://compass-core/1.0.3/lib/compass/configuration/inheritance.rb#22
  def fonts_dir=(value); end

  # source://compass-core/1.0.3/lib/compass/configuration/inheritance.rb#32
  def fonts_dir_set?; end

  # source://compass-core/1.0.3/lib/compass/configuration/inheritance.rb#52
  def fonts_dir_with_trailing_separator; end

  # source://compass-core/1.0.3/lib/compass/configuration/inheritance.rb#49
  def fonts_dir_without_default; end

  def fonts_path; end

  # source://compass-core/1.0.3/lib/compass/configuration/inheritance.rb#22
  def fonts_path=(value); end

  # source://compass-core/1.0.3/lib/compass/configuration/inheritance.rb#32
  def fonts_path_set?; end

  # source://compass-core/1.0.3/lib/compass/configuration/inheritance.rb#52
  def fonts_path_with_trailing_separator; end

  # source://compass-core/1.0.3/lib/compass/configuration/inheritance.rb#49
  def fonts_path_without_default; end

  # source://compass-core/1.0.3/lib/compass/configuration/inheritance.rb#119
  def framework_path; end

  # source://compass-core/1.0.3/lib/compass/configuration/inheritance.rb#122
  def framework_path=(value); end

  # source://compass-core/1.0.3/lib/compass/configuration/inheritance.rb#32
  def framework_path_set?; end

  # source://compass-core/1.0.3/lib/compass/configuration/inheritance.rb#49
  def framework_path_without_default; end

  def generated_images_dir; end

  # source://compass-core/1.0.3/lib/compass/configuration/inheritance.rb#22
  def generated_images_dir=(value); end

  # source://compass-core/1.0.3/lib/compass/configuration/inheritance.rb#32
  def generated_images_dir_set?; end

  # source://compass-core/1.0.3/lib/compass/configuration/inheritance.rb#52
  def generated_images_dir_with_trailing_separator; end

  # source://compass-core/1.0.3/lib/compass/configuration/inheritance.rb#49
  def generated_images_dir_without_default; end

  def generated_images_path; end

  # source://compass-core/1.0.3/lib/compass/configuration/inheritance.rb#22
  def generated_images_path=(value); end

  # source://compass-core/1.0.3/lib/compass/configuration/inheritance.rb#32
  def generated_images_path_set?; end

  # source://compass-core/1.0.3/lib/compass/configuration/inheritance.rb#52
  def generated_images_path_with_trailing_separator; end

  # source://compass-core/1.0.3/lib/compass/configuration/inheritance.rb#49
  def generated_images_path_without_default; end

  def http_fonts_dir; end

  # source://compass-core/1.0.3/lib/compass/configuration/inheritance.rb#22
  def http_fonts_dir=(value); end

  # source://compass-core/1.0.3/lib/compass/configuration/inheritance.rb#32
  def http_fonts_dir_set?; end

  # source://compass-core/1.0.3/lib/compass/configuration/inheritance.rb#52
  def http_fonts_dir_with_trailing_separator; end

  # source://compass-core/1.0.3/lib/compass/configuration/inheritance.rb#49
  def http_fonts_dir_without_default; end

  def http_fonts_path; end

  # source://compass-core/1.0.3/lib/compass/configuration/inheritance.rb#22
  def http_fonts_path=(value); end

  # source://compass-core/1.0.3/lib/compass/configuration/inheritance.rb#32
  def http_fonts_path_set?; end

  # source://compass-core/1.0.3/lib/compass/configuration/inheritance.rb#52
  def http_fonts_path_with_trailing_separator; end

  # source://compass-core/1.0.3/lib/compass/configuration/inheritance.rb#49
  def http_fonts_path_without_default; end

  def http_generated_images_dir; end

  # source://compass-core/1.0.3/lib/compass/configuration/inheritance.rb#22
  def http_generated_images_dir=(value); end

  # source://compass-core/1.0.3/lib/compass/configuration/inheritance.rb#32
  def http_generated_images_dir_set?; end

  # source://compass-core/1.0.3/lib/compass/configuration/inheritance.rb#52
  def http_generated_images_dir_with_trailing_separator; end

  # source://compass-core/1.0.3/lib/compass/configuration/inheritance.rb#49
  def http_generated_images_dir_without_default; end

  def http_generated_images_path; end

  # source://compass-core/1.0.3/lib/compass/configuration/inheritance.rb#22
  def http_generated_images_path=(value); end

  # source://compass-core/1.0.3/lib/compass/configuration/inheritance.rb#32
  def http_generated_images_path_set?; end

  # source://compass-core/1.0.3/lib/compass/configuration/inheritance.rb#52
  def http_generated_images_path_with_trailing_separator; end

  # source://compass-core/1.0.3/lib/compass/configuration/inheritance.rb#49
  def http_generated_images_path_without_default; end

  def http_images_dir; end

  # source://compass-core/1.0.3/lib/compass/configuration/inheritance.rb#22
  def http_images_dir=(value); end

  # source://compass-core/1.0.3/lib/compass/configuration/inheritance.rb#32
  def http_images_dir_set?; end

  # source://compass-core/1.0.3/lib/compass/configuration/inheritance.rb#52
  def http_images_dir_with_trailing_separator; end

  # source://compass-core/1.0.3/lib/compass/configuration/inheritance.rb#49
  def http_images_dir_without_default; end

  def http_images_path; end

  # source://compass-core/1.0.3/lib/compass/configuration/inheritance.rb#22
  def http_images_path=(value); end

  # source://compass-core/1.0.3/lib/compass/configuration/inheritance.rb#32
  def http_images_path_set?; end

  # source://compass-core/1.0.3/lib/compass/configuration/inheritance.rb#52
  def http_images_path_with_trailing_separator; end

  # source://compass-core/1.0.3/lib/compass/configuration/inheritance.rb#49
  def http_images_path_without_default; end

  def http_javascripts_dir; end

  # source://compass-core/1.0.3/lib/compass/configuration/inheritance.rb#22
  def http_javascripts_dir=(value); end

  # source://compass-core/1.0.3/lib/compass/configuration/inheritance.rb#32
  def http_javascripts_dir_set?; end

  # source://compass-core/1.0.3/lib/compass/configuration/inheritance.rb#52
  def http_javascripts_dir_with_trailing_separator; end

  # source://compass-core/1.0.3/lib/compass/configuration/inheritance.rb#49
  def http_javascripts_dir_without_default; end

  def http_javascripts_path; end

  # source://compass-core/1.0.3/lib/compass/configuration/inheritance.rb#22
  def http_javascripts_path=(value); end

  # source://compass-core/1.0.3/lib/compass/configuration/inheritance.rb#32
  def http_javascripts_path_set?; end

  # source://compass-core/1.0.3/lib/compass/configuration/inheritance.rb#52
  def http_javascripts_path_with_trailing_separator; end

  # source://compass-core/1.0.3/lib/compass/configuration/inheritance.rb#49
  def http_javascripts_path_without_default; end

  def http_path; end

  # source://compass-core/1.0.3/lib/compass/configuration/inheritance.rb#22
  def http_path=(value); end

  # source://compass-core/1.0.3/lib/compass/configuration/inheritance.rb#32
  def http_path_set?; end

  # source://compass-core/1.0.3/lib/compass/configuration/inheritance.rb#52
  def http_path_with_trailing_separator; end

  # source://compass-core/1.0.3/lib/compass/configuration/inheritance.rb#49
  def http_path_without_default; end

  def http_stylesheets_dir; end

  # source://compass-core/1.0.3/lib/compass/configuration/inheritance.rb#22
  def http_stylesheets_dir=(value); end

  # source://compass-core/1.0.3/lib/compass/configuration/inheritance.rb#32
  def http_stylesheets_dir_set?; end

  # source://compass-core/1.0.3/lib/compass/configuration/inheritance.rb#52
  def http_stylesheets_dir_with_trailing_separator; end

  # source://compass-core/1.0.3/lib/compass/configuration/inheritance.rb#49
  def http_stylesheets_dir_without_default; end

  def http_stylesheets_path; end

  # source://compass-core/1.0.3/lib/compass/configuration/inheritance.rb#22
  def http_stylesheets_path=(value); end

  # source://compass-core/1.0.3/lib/compass/configuration/inheritance.rb#32
  def http_stylesheets_path_set?; end

  # source://compass-core/1.0.3/lib/compass/configuration/inheritance.rb#52
  def http_stylesheets_path_with_trailing_separator; end

  # source://compass-core/1.0.3/lib/compass/configuration/inheritance.rb#49
  def http_stylesheets_path_without_default; end

  def images_dir; end

  # source://compass-core/1.0.3/lib/compass/configuration/inheritance.rb#22
  def images_dir=(value); end

  # source://compass-core/1.0.3/lib/compass/configuration/inheritance.rb#32
  def images_dir_set?; end

  # source://compass-core/1.0.3/lib/compass/configuration/inheritance.rb#52
  def images_dir_with_trailing_separator; end

  # source://compass-core/1.0.3/lib/compass/configuration/inheritance.rb#49
  def images_dir_without_default; end

  def images_path; end

  # source://compass-core/1.0.3/lib/compass/configuration/inheritance.rb#22
  def images_path=(value); end

  # source://compass-core/1.0.3/lib/compass/configuration/inheritance.rb#32
  def images_path_set?; end

  # source://compass-core/1.0.3/lib/compass/configuration/inheritance.rb#52
  def images_path_with_trailing_separator; end

  # source://compass-core/1.0.3/lib/compass/configuration/inheritance.rb#49
  def images_path_without_default; end

  # source://compass-core/1.0.3/lib/compass/configuration/inheritance.rb#11
  def inherited_data; end

  # source://compass-core/1.0.3/lib/compass/configuration/inheritance.rb#11
  def inherited_data=(_arg0); end

  def javascripts_dir; end

  # source://compass-core/1.0.3/lib/compass/configuration/inheritance.rb#22
  def javascripts_dir=(value); end

  # source://compass-core/1.0.3/lib/compass/configuration/inheritance.rb#32
  def javascripts_dir_set?; end

  # source://compass-core/1.0.3/lib/compass/configuration/inheritance.rb#52
  def javascripts_dir_with_trailing_separator; end

  # source://compass-core/1.0.3/lib/compass/configuration/inheritance.rb#49
  def javascripts_dir_without_default; end

  def javascripts_path; end

  # source://compass-core/1.0.3/lib/compass/configuration/inheritance.rb#22
  def javascripts_path=(value); end

  # source://compass-core/1.0.3/lib/compass/configuration/inheritance.rb#32
  def javascripts_path_set?; end

  # source://compass-core/1.0.3/lib/compass/configuration/inheritance.rb#52
  def javascripts_path_with_trailing_separator; end

  # source://compass-core/1.0.3/lib/compass/configuration/inheritance.rb#49
  def javascripts_path_without_default; end

  # source://compass-core/1.0.3/lib/compass/configuration/inheritance.rb#52
  def line_comments; end

  # source://compass-core/1.0.3/lib/compass/configuration/inheritance.rb#22
  def line_comments=(value); end

  # source://compass-core/1.0.3/lib/compass/configuration/inheritance.rb#32
  def line_comments_set?; end

  # source://compass-core/1.0.3/lib/compass/configuration/inheritance.rb#49
  def line_comments_without_default; end

  # source://compass-core/1.0.3/lib/compass/configuration/data.rb#182
  def load(framework_dir); end

  # source://compass-core/1.0.3/lib/compass/configuration/inheritance.rb#119
  def loaded_frameworks; end

  # source://compass-core/1.0.3/lib/compass/configuration/inheritance.rb#122
  def loaded_frameworks=(value); end

  # source://compass-core/1.0.3/lib/compass/configuration/inheritance.rb#32
  def loaded_frameworks_set?; end

  # source://compass-core/1.0.3/lib/compass/configuration/inheritance.rb#49
  def loaded_frameworks_without_default; end

  # source://compass-core/1.0.3/lib/compass/configuration/data.rb#20
  def name; end

  # source://sass/3.4.25/lib/sass/callbacks.rb#53
  def on_sourcemap_removed(&block); end

  # source://sass/3.4.25/lib/sass/callbacks.rb#53
  def on_sourcemap_saved(&block); end

  # source://sass/3.4.25/lib/sass/callbacks.rb#53
  def on_sprite_generated(&block); end

  # source://sass/3.4.25/lib/sass/callbacks.rb#53
  def on_sprite_removed(&block); end

  # source://sass/3.4.25/lib/sass/callbacks.rb#53
  def on_sprite_saved(&block); end

  # source://sass/3.4.25/lib/sass/callbacks.rb#53
  def on_stylesheet_error(&block); end

  # source://sass/3.4.25/lib/sass/callbacks.rb#53
  def on_stylesheet_removed(&block); end

  # source://sass/3.4.25/lib/sass/callbacks.rb#53
  def on_stylesheet_saved(&block); end

  # source://compass-core/1.0.3/lib/compass/configuration/inheritance.rb#52
  def output_style; end

  # source://compass-core/1.0.3/lib/compass/configuration/inheritance.rb#22
  def output_style=(value); end

  # source://compass-core/1.0.3/lib/compass/configuration/inheritance.rb#32
  def output_style_set?; end

  # source://compass-core/1.0.3/lib/compass/configuration/inheritance.rb#49
  def output_style_without_default; end

  # source://compass-core/1.0.3/lib/compass/configuration/inheritance.rb#52
  def preferred_syntax; end

  # source://compass-core/1.0.3/lib/compass/configuration/inheritance.rb#22
  def preferred_syntax=(value); end

  # source://compass-core/1.0.3/lib/compass/configuration/inheritance.rb#32
  def preferred_syntax_set?; end

  # source://compass-core/1.0.3/lib/compass/configuration/inheritance.rb#49
  def preferred_syntax_without_default; end

  def project_path; end

  # source://compass-core/1.0.3/lib/compass/configuration/inheritance.rb#22
  def project_path=(value); end

  # source://compass-core/1.0.3/lib/compass/configuration/inheritance.rb#32
  def project_path_set?; end

  # source://compass-core/1.0.3/lib/compass/configuration/inheritance.rb#52
  def project_path_with_trailing_separator; end

  # source://compass-core/1.0.3/lib/compass/configuration/inheritance.rb#49
  def project_path_without_default; end

  # source://compass-core/1.0.3/lib/compass/configuration/inheritance.rb#52
  def project_type; end

  # source://compass-core/1.0.3/lib/compass/configuration/inheritance.rb#22
  def project_type=(value); end

  # source://compass-core/1.0.3/lib/compass/configuration/inheritance.rb#32
  def project_type_set?; end

  # source://compass-core/1.0.3/lib/compass/configuration/inheritance.rb#49
  def project_type_without_default; end

  # source://compass-core/1.0.3/lib/compass/configuration/inheritance.rb#46
  def raw_additional_import_paths; end

  # source://compass-core/1.0.3/lib/compass/configuration/inheritance.rb#46
  def raw_asset_cache_buster; end

  # source://compass-core/1.0.3/lib/compass/configuration/inheritance.rb#46
  def raw_asset_host; end

  # source://compass-core/1.0.3/lib/compass/configuration/inheritance.rb#46
  def raw_cache; end

  # source://compass-core/1.0.3/lib/compass/configuration/inheritance.rb#46
  def raw_cache_dir; end

  # source://compass-core/1.0.3/lib/compass/configuration/inheritance.rb#46
  def raw_cache_path; end

  # source://compass-core/1.0.3/lib/compass/configuration/inheritance.rb#46
  def raw_chunky_png_options; end

  # source://compass-core/1.0.3/lib/compass/configuration/inheritance.rb#46
  def raw_color_output; end

  # source://compass-core/1.0.3/lib/compass/configuration/inheritance.rb#46
  def raw_css_dir; end

  # source://compass-core/1.0.3/lib/compass/configuration/inheritance.rb#46
  def raw_css_path; end

  # source://compass-core/1.0.3/lib/compass/configuration/inheritance.rb#46
  def raw_disable_warnings; end

  # source://compass-core/1.0.3/lib/compass/configuration/inheritance.rb#46
  def raw_environment; end

  # source://compass-core/1.0.3/lib/compass/configuration/inheritance.rb#46
  def raw_extensions_dir; end

  # source://compass-core/1.0.3/lib/compass/configuration/inheritance.rb#46
  def raw_extensions_path; end

  # source://compass-core/1.0.3/lib/compass/configuration/inheritance.rb#46
  def raw_fonts_dir; end

  # source://compass-core/1.0.3/lib/compass/configuration/inheritance.rb#46
  def raw_fonts_path; end

  # source://compass-core/1.0.3/lib/compass/configuration/inheritance.rb#46
  def raw_framework_path; end

  # source://compass-core/1.0.3/lib/compass/configuration/inheritance.rb#46
  def raw_generated_images_dir; end

  # source://compass-core/1.0.3/lib/compass/configuration/inheritance.rb#46
  def raw_generated_images_path; end

  # source://compass-core/1.0.3/lib/compass/configuration/inheritance.rb#46
  def raw_http_fonts_dir; end

  # source://compass-core/1.0.3/lib/compass/configuration/inheritance.rb#46
  def raw_http_fonts_path; end

  # source://compass-core/1.0.3/lib/compass/configuration/inheritance.rb#46
  def raw_http_generated_images_dir; end

  # source://compass-core/1.0.3/lib/compass/configuration/inheritance.rb#46
  def raw_http_generated_images_path; end

  # source://compass-core/1.0.3/lib/compass/configuration/inheritance.rb#46
  def raw_http_images_dir; end

  # source://compass-core/1.0.3/lib/compass/configuration/inheritance.rb#46
  def raw_http_images_path; end

  # source://compass-core/1.0.3/lib/compass/configuration/inheritance.rb#46
  def raw_http_javascripts_dir; end

  # source://compass-core/1.0.3/lib/compass/configuration/inheritance.rb#46
  def raw_http_javascripts_path; end

  # source://compass-core/1.0.3/lib/compass/configuration/inheritance.rb#46
  def raw_http_path; end

  # source://compass-core/1.0.3/lib/compass/configuration/inheritance.rb#46
  def raw_http_stylesheets_dir; end

  # source://compass-core/1.0.3/lib/compass/configuration/inheritance.rb#46
  def raw_http_stylesheets_path; end

  # source://compass-core/1.0.3/lib/compass/configuration/inheritance.rb#46
  def raw_images_dir; end

  # source://compass-core/1.0.3/lib/compass/configuration/inheritance.rb#46
  def raw_images_path; end

  # source://compass-core/1.0.3/lib/compass/configuration/inheritance.rb#46
  def raw_javascripts_dir; end

  # source://compass-core/1.0.3/lib/compass/configuration/inheritance.rb#46
  def raw_javascripts_path; end

  # source://compass-core/1.0.3/lib/compass/configuration/inheritance.rb#46
  def raw_line_comments; end

  # source://compass-core/1.0.3/lib/compass/configuration/inheritance.rb#46
  def raw_loaded_frameworks; end

  # source://compass-core/1.0.3/lib/compass/configuration/inheritance.rb#46
  def raw_output_style; end

  # source://compass-core/1.0.3/lib/compass/configuration/inheritance.rb#46
  def raw_preferred_syntax; end

  # source://compass-core/1.0.3/lib/compass/configuration/inheritance.rb#46
  def raw_project_path; end

  # source://compass-core/1.0.3/lib/compass/configuration/inheritance.rb#46
  def raw_project_type; end

  # source://compass-core/1.0.3/lib/compass/configuration/inheritance.rb#46
  def raw_relative_assets; end

  # source://compass-core/1.0.3/lib/compass/configuration/inheritance.rb#46
  def raw_required_libraries; end

  # source://compass-core/1.0.3/lib/compass/configuration/inheritance.rb#46
  def raw_sass_dir; end

  # source://compass-core/1.0.3/lib/compass/configuration/inheritance.rb#46
  def raw_sass_options; end

  # source://compass-core/1.0.3/lib/compass/configuration/inheritance.rb#46
  def raw_sass_path; end

  # source://compass-core/1.0.3/lib/compass/configuration/inheritance.rb#46
  def raw_sourcemap; end

  # source://compass-core/1.0.3/lib/compass/configuration/inheritance.rb#46
  def raw_sprite_engine; end

  # source://compass-core/1.0.3/lib/compass/configuration/inheritance.rb#46
  def raw_sprite_load_path; end

  # source://compass-core/1.0.3/lib/compass/configuration/inheritance.rb#129
  def read_inherited_additional_import_paths_array; end

  # source://compass-core/1.0.3/lib/compass/configuration/inheritance.rb#129
  def read_inherited_framework_path_array; end

  # source://compass-core/1.0.3/lib/compass/configuration/inheritance.rb#129
  def read_inherited_loaded_frameworks_array; end

  # source://compass-core/1.0.3/lib/compass/configuration/inheritance.rb#129
  def read_inherited_required_libraries_array; end

  # source://compass-core/1.0.3/lib/compass/configuration/inheritance.rb#129
  def read_inherited_sprite_load_path_array; end

  # source://compass-core/1.0.3/lib/compass/configuration/inheritance.rb#52
  def relative_assets; end

  # source://compass-core/1.0.3/lib/compass/configuration/inheritance.rb#22
  def relative_assets=(value); end

  # source://compass-core/1.0.3/lib/compass/configuration/data.rb#193
  def relative_assets?; end

  # source://compass-core/1.0.3/lib/compass/configuration/inheritance.rb#32
  def relative_assets_set?; end

  # source://compass-core/1.0.3/lib/compass/configuration/inheritance.rb#49
  def relative_assets_without_default; end

  # source://compass-core/1.0.3/lib/compass/configuration/inheritance.rb#151
  def remove_from_additional_import_paths(v); end

  # source://compass-core/1.0.3/lib/compass/configuration/inheritance.rb#151
  def remove_from_framework_path(v); end

  # source://compass-core/1.0.3/lib/compass/configuration/inheritance.rb#151
  def remove_from_loaded_frameworks(v); end

  # source://compass-core/1.0.3/lib/compass/configuration/inheritance.rb#151
  def remove_from_required_libraries(v); end

  # source://compass-core/1.0.3/lib/compass/configuration/inheritance.rb#151
  def remove_from_sprite_load_path(v); end

  # source://compass-core/1.0.3/lib/compass/configuration/data.rb#177
  def require(lib); end

  # source://compass-core/1.0.3/lib/compass/configuration/inheritance.rb#119
  def required_libraries; end

  # source://compass-core/1.0.3/lib/compass/configuration/inheritance.rb#122
  def required_libraries=(value); end

  # source://compass-core/1.0.3/lib/compass/configuration/inheritance.rb#32
  def required_libraries_set?; end

  # source://compass-core/1.0.3/lib/compass/configuration/inheritance.rb#49
  def required_libraries_without_default; end

  # source://compass-core/1.0.3/lib/compass/configuration/inheritance.rb#166
  def run_sourcemap_removed(*args, &block); end

  # source://compass-core/1.0.3/lib/compass/configuration/inheritance.rb#166
  def run_sourcemap_saved(*args, &block); end

  # source://compass-core/1.0.3/lib/compass/configuration/inheritance.rb#166
  def run_sprite_generated(*args, &block); end

  # source://compass-core/1.0.3/lib/compass/configuration/inheritance.rb#166
  def run_sprite_removed(*args, &block); end

  # source://compass-core/1.0.3/lib/compass/configuration/inheritance.rb#166
  def run_sprite_saved(*args, &block); end

  # source://compass-core/1.0.3/lib/compass/configuration/inheritance.rb#166
  def run_stylesheet_error(*args, &block); end

  # source://compass-core/1.0.3/lib/compass/configuration/inheritance.rb#166
  def run_stylesheet_removed(*args, &block); end

  # source://compass-core/1.0.3/lib/compass/configuration/inheritance.rb#166
  def run_stylesheet_saved(*args, &block); end

  def sass_dir; end

  # source://compass-core/1.0.3/lib/compass/configuration/inheritance.rb#22
  def sass_dir=(value); end

  # source://compass-core/1.0.3/lib/compass/configuration/inheritance.rb#32
  def sass_dir_set?; end

  # source://compass-core/1.0.3/lib/compass/configuration/inheritance.rb#52
  def sass_dir_with_trailing_separator; end

  # source://compass-core/1.0.3/lib/compass/configuration/inheritance.rb#49
  def sass_dir_without_default; end

  # source://compass-core/1.0.3/lib/compass/configuration/inheritance.rb#52
  def sass_options; end

  # source://compass-core/1.0.3/lib/compass/configuration/inheritance.rb#22
  def sass_options=(value); end

  # source://compass-core/1.0.3/lib/compass/configuration/inheritance.rb#32
  def sass_options_set?; end

  # source://compass-core/1.0.3/lib/compass/configuration/inheritance.rb#49
  def sass_options_without_default; end

  def sass_path; end

  # source://compass-core/1.0.3/lib/compass/configuration/inheritance.rb#22
  def sass_path=(value); end

  # source://compass-core/1.0.3/lib/compass/configuration/inheritance.rb#32
  def sass_path_set?; end

  # source://compass-core/1.0.3/lib/compass/configuration/inheritance.rb#52
  def sass_path_with_trailing_separator; end

  # source://compass-core/1.0.3/lib/compass/configuration/inheritance.rb#49
  def sass_path_without_default; end

  # source://compass-core/1.0.3/lib/compass/configuration/data.rb#90
  def set_all(attr_hash); end

  # source://compass-core/1.0.3/lib/compass/configuration/inheritance.rb#11
  def set_attributes; end

  # source://compass-core/1.0.3/lib/compass/configuration/inheritance.rb#11
  def set_attributes=(_arg0); end

  # source://compass-core/1.0.3/lib/compass/configuration/inheritance.rb#52
  def sourcemap; end

  # source://compass-core/1.0.3/lib/compass/configuration/inheritance.rb#22
  def sourcemap=(value); end

  # source://compass-core/1.0.3/lib/compass/configuration/inheritance.rb#32
  def sourcemap_set?; end

  # source://compass-core/1.0.3/lib/compass/configuration/inheritance.rb#49
  def sourcemap_without_default; end

  # source://compass-core/1.0.3/lib/compass/configuration/inheritance.rb#52
  def sprite_engine; end

  # source://compass-core/1.0.3/lib/compass/configuration/inheritance.rb#22
  def sprite_engine=(value); end

  # source://compass-core/1.0.3/lib/compass/configuration/inheritance.rb#32
  def sprite_engine_set?; end

  # source://compass-core/1.0.3/lib/compass/configuration/inheritance.rb#49
  def sprite_engine_without_default; end

  # source://compass-core/1.0.3/lib/compass/configuration/inheritance.rb#119
  def sprite_load_path; end

  # source://compass-core/1.0.3/lib/compass/configuration/inheritance.rb#122
  def sprite_load_path=(value); end

  # source://compass-core/1.0.3/lib/compass/configuration/inheritance.rb#32
  def sprite_load_path_set?; end

  # source://compass-core/1.0.3/lib/compass/configuration/inheritance.rb#49
  def sprite_load_path_without_default; end

  # source://compass-core/1.0.3/lib/compass/configuration/inheritance.rb#11
  def top_level; end

  # source://compass-core/1.0.3/lib/compass/configuration/inheritance.rb#11
  def top_level=(_arg0); end

  # source://compass-core/1.0.3/lib/compass/configuration/inheritance.rb#28
  def unset_additional_import_paths!; end

  # source://compass-core/1.0.3/lib/compass/configuration/inheritance.rb#28
  def unset_asset_cache_buster!; end

  # source://compass-core/1.0.3/lib/compass/configuration/inheritance.rb#28
  def unset_asset_host!; end

  # source://compass-core/1.0.3/lib/compass/configuration/inheritance.rb#28
  def unset_cache!; end

  # source://compass-core/1.0.3/lib/compass/configuration/inheritance.rb#28
  def unset_cache_dir!; end

  # source://compass-core/1.0.3/lib/compass/configuration/inheritance.rb#28
  def unset_cache_path!; end

  # source://compass-core/1.0.3/lib/compass/configuration/inheritance.rb#28
  def unset_chunky_png_options!; end

  # source://compass-core/1.0.3/lib/compass/configuration/inheritance.rb#28
  def unset_color_output!; end

  # source://compass-core/1.0.3/lib/compass/configuration/inheritance.rb#28
  def unset_css_dir!; end

  # source://compass-core/1.0.3/lib/compass/configuration/inheritance.rb#28
  def unset_css_path!; end

  # source://compass-core/1.0.3/lib/compass/configuration/inheritance.rb#28
  def unset_disable_warnings!; end

  # source://compass-core/1.0.3/lib/compass/configuration/inheritance.rb#28
  def unset_environment!; end

  # source://compass-core/1.0.3/lib/compass/configuration/inheritance.rb#28
  def unset_extensions_dir!; end

  # source://compass-core/1.0.3/lib/compass/configuration/inheritance.rb#28
  def unset_extensions_path!; end

  # source://compass-core/1.0.3/lib/compass/configuration/inheritance.rb#28
  def unset_fonts_dir!; end

  # source://compass-core/1.0.3/lib/compass/configuration/inheritance.rb#28
  def unset_fonts_path!; end

  # source://compass-core/1.0.3/lib/compass/configuration/inheritance.rb#28
  def unset_framework_path!; end

  # source://compass-core/1.0.3/lib/compass/configuration/inheritance.rb#28
  def unset_generated_images_dir!; end

  # source://compass-core/1.0.3/lib/compass/configuration/inheritance.rb#28
  def unset_generated_images_path!; end

  # source://compass-core/1.0.3/lib/compass/configuration/inheritance.rb#28
  def unset_http_fonts_dir!; end

  # source://compass-core/1.0.3/lib/compass/configuration/inheritance.rb#28
  def unset_http_fonts_path!; end

  # source://compass-core/1.0.3/lib/compass/configuration/inheritance.rb#28
  def unset_http_generated_images_dir!; end

  # source://compass-core/1.0.3/lib/compass/configuration/inheritance.rb#28
  def unset_http_generated_images_path!; end

  # source://compass-core/1.0.3/lib/compass/configuration/inheritance.rb#28
  def unset_http_images_dir!; end

  # source://compass-core/1.0.3/lib/compass/configuration/inheritance.rb#28
  def unset_http_images_path!; end

  # source://compass-core/1.0.3/lib/compass/configuration/inheritance.rb#28
  def unset_http_javascripts_dir!; end

  # source://compass-core/1.0.3/lib/compass/configuration/inheritance.rb#28
  def unset_http_javascripts_path!; end

  # source://compass-core/1.0.3/lib/compass/configuration/inheritance.rb#28
  def unset_http_path!; end

  # source://compass-core/1.0.3/lib/compass/configuration/inheritance.rb#28
  def unset_http_stylesheets_dir!; end

  # source://compass-core/1.0.3/lib/compass/configuration/inheritance.rb#28
  def unset_http_stylesheets_path!; end

  # source://compass-core/1.0.3/lib/compass/configuration/inheritance.rb#28
  def unset_images_dir!; end

  # source://compass-core/1.0.3/lib/compass/configuration/inheritance.rb#28
  def unset_images_path!; end

  # source://compass-core/1.0.3/lib/compass/configuration/inheritance.rb#28
  def unset_javascripts_dir!; end

  # source://compass-core/1.0.3/lib/compass/configuration/inheritance.rb#28
  def unset_javascripts_path!; end

  # source://compass-core/1.0.3/lib/compass/configuration/inheritance.rb#28
  def unset_line_comments!; end

  # source://compass-core/1.0.3/lib/compass/configuration/inheritance.rb#28
  def unset_loaded_frameworks!; end

  # source://compass-core/1.0.3/lib/compass/configuration/inheritance.rb#28
  def unset_output_style!; end

  # source://compass-core/1.0.3/lib/compass/configuration/inheritance.rb#28
  def unset_preferred_syntax!; end

  # source://compass-core/1.0.3/lib/compass/configuration/inheritance.rb#28
  def unset_project_path!; end

  # source://compass-core/1.0.3/lib/compass/configuration/inheritance.rb#28
  def unset_project_type!; end

  # source://compass-core/1.0.3/lib/compass/configuration/inheritance.rb#28
  def unset_relative_assets!; end

  # source://compass-core/1.0.3/lib/compass/configuration/inheritance.rb#28
  def unset_required_libraries!; end

  # source://compass-core/1.0.3/lib/compass/configuration/inheritance.rb#28
  def unset_sass_dir!; end

  # source://compass-core/1.0.3/lib/compass/configuration/inheritance.rb#28
  def unset_sass_options!; end

  # source://compass-core/1.0.3/lib/compass/configuration/inheritance.rb#28
  def unset_sass_path!; end

  # source://compass-core/1.0.3/lib/compass/configuration/inheritance.rb#28
  def unset_sourcemap!; end

  # source://compass-core/1.0.3/lib/compass/configuration/inheritance.rb#28
  def unset_sprite_engine!; end

  # source://compass-core/1.0.3/lib/compass/configuration/inheritance.rb#28
  def unset_sprite_load_path!; end

  # source://compass-core/1.0.3/lib/compass/configuration/data.rb#161
  def watch(glob, &block); end

  # source://compass-core/1.0.3/lib/compass/configuration/data.rb#166
  def watches; end

  private

  # source://sass/3.4.25/lib/sass/callbacks.rb#58
  def _chained_run_sourcemap_removed(*args); end

  # source://sass/3.4.25/lib/sass/callbacks.rb#58
  def _chained_run_sourcemap_saved(*args); end

  # source://sass/3.4.25/lib/sass/callbacks.rb#58
  def _chained_run_sprite_generated(*args); end

  # source://sass/3.4.25/lib/sass/callbacks.rb#58
  def _chained_run_sprite_removed(*args); end

  # source://sass/3.4.25/lib/sass/callbacks.rb#58
  def _chained_run_sprite_saved(*args); end

  # source://sass/3.4.25/lib/sass/callbacks.rb#58
  def _chained_run_stylesheet_error(*args); end

  # source://sass/3.4.25/lib/sass/callbacks.rb#58
  def _chained_run_stylesheet_removed(*args); end

  # source://sass/3.4.25/lib/sass/callbacks.rb#58
  def _chained_run_stylesheet_saved(*args); end
end

# source://compass//lib/compass/configuration/file_data.rb#3
class Compass::Configuration::FileData < ::Compass::Configuration::Data
  class << self
    # source://compass//lib/compass/configuration/file_data.rb#4
    def new_from_file(config_file, defaults = T.unsafe(nil)); end

    # source://compass//lib/compass/configuration/file_data.rb#12
    def new_from_string(contents, filename, defaults = T.unsafe(nil)); end
  end
end

# The helpers are available as methods on the Compass module. E.g. Compass.configuration
#
# source://compass//lib/compass/configuration/helpers.rb#5
module Compass::Configuration::Helpers
  # Read the configuration file for this project
  #
  # @raise [ArgumentError]
  #
  # source://compass//lib/compass/configuration/helpers.rb#64
  def add_project_configuration(*args); end

  # @deprecated
  #
  # source://compass//lib/compass/configuration/helpers.rb#99
  def compiler; end

  # source://compass//lib/compass/configuration/helpers.rb#6
  def configuration_for(config, filename = T.unsafe(nil), defaults = T.unsafe(nil)); end

  # source://compass//lib/compass/configuration/helpers.rb#31
  def configure_sass_plugin!; end

  # Finds the configuration file, if it exists in a known location.
  #
  # source://compass//lib/compass/configuration/helpers.rb#87
  def detect_configuration_file(project_path = T.unsafe(nil)); end

  # source://compass//lib/compass/configuration/helpers.rb#92
  def handle_configuration_change!; end

  # source://compass//lib/compass/configuration/helpers.rb#106
  def sass_compiler(*args); end

  # source://compass//lib/compass/configuration/helpers.rb#59
  def sass_engine_options; end

  # source://compass//lib/compass/configuration/helpers.rb#27
  def sass_plugin_configuration; end
end

# TODO: Deprecate the src/config.rb location.
#
# source://compass//lib/compass/configuration/helpers.rb#84
Compass::Configuration::Helpers::KNOWN_CONFIG_LOCATIONS = T.let(T.unsafe(nil), Array)

# source://compass-core/1.0.3/lib/compass/configuration.rb#95
Compass::Configuration::RUNTIME_READONLY_ATTRIBUTES = T.let(T.unsafe(nil), Array)

# The serialization module manages reading and writing the configuration file(s).
#
# source://compass//lib/compass/configuration/serialization.rb#4
module Compass::Configuration::Serialization
  # parses a configuration file which is a ruby script
  #
  # source://compass//lib/compass/configuration/serialization.rb#10
  def _parse(config_file); end

  # source://compass//lib/compass/configuration/serialization.rb#19
  def get_binding; end

  # source://compass//lib/compass/configuration/serialization.rb#84
  def issue_deprecation_warnings; end

  # @raise [Compass::Error]
  #
  # source://compass//lib/compass/configuration/serialization.rb#5
  def parse(config_file); end

  # source://compass//lib/compass/configuration/serialization.rb#22
  def parse_string(contents, filename); end

  # source://compass//lib/compass/configuration/serialization.rb#41
  def serialize; end

  # source://compass//lib/compass/configuration/serialization.rb#76
  def serialize_property(prop, value); end
end

# source://compass//lib/compass/deprecation.rb#2
module Compass::Deprecation
  class << self
    # source://compass//lib/compass/deprecation.rb#8
    def deprecated!(identifier, message); end

    # Returns the value of attribute issued_deprecations.
    #
    # source://compass//lib/compass/deprecation.rb#4
    def issued_deprecations; end

    # Sets the attribute issued_deprecations
    #
    # @param value the value to set the attribute issued_deprecations to.
    #
    # source://compass//lib/compass/deprecation.rb#4
    def issued_deprecations=(_arg0); end

    # source://compass//lib/compass/deprecation.rb#15
    def mark_as_issued(identifier); end
  end
end

Compass::Exec = T.let(T.unsafe(nil), T.untyped)

# source://compass//lib/compass/errors.rb#3
class Compass::FilesystemConflict < ::Compass::Error; end

# source://compass//lib/compass/app_integration/stand_alone/installer.rb#2
module Compass::Installers; end

# source://compass//lib/compass/app_integration/stand_alone/installer.rb#3
class Compass::Installers::Base; end

# source://compass//lib/compass/app_integration/stand_alone/installer.rb#5
class Compass::Installers::ManifestInstaller < ::Compass::Installers::Base; end

# source://compass//lib/compass/logger.rb#3
class Compass::Logger
  # @return [Logger] a new instance of Logger
  #
  # source://compass//lib/compass/logger.rb#53
  def initialize(*actions); end

  # add padding to the left of an action that was performed.
  #
  # source://compass//lib/compass/logger.rb#120
  def action_padding(action); end

  # Returns the value of attribute actions.
  #
  # source://compass//lib/compass/logger.rb#51
  def actions; end

  # Sets the attribute actions
  #
  # @param value the value to set the attribute actions to.
  #
  # source://compass//lib/compass/logger.rb#51
  def actions=(_arg0); end

  # source://compass//lib/compass/logger.rb#95
  def color(c); end

  # Emit a log message without a trailing newline
  #
  # source://compass//lib/compass/logger.rb#108
  def emit(msg); end

  # source://compass//lib/compass/logger.rb#73
  def green; end

  # Emit a log message with a trailing newline
  #
  # source://compass//lib/compass/logger.rb#114
  def log(msg); end

  # the maximum length of all the actions known to the logger.
  #
  # source://compass//lib/compass/logger.rb#125
  def max_action_length; end

  # Returns the value of attribute options.
  #
  # source://compass//lib/compass/logger.rb#51
  def options; end

  # Sets the attribute options
  #
  # @param value the value to set the attribute options to.
  #
  # source://compass//lib/compass/logger.rb#51
  def options=(_arg0); end

  # Record an action that has occurred
  #
  # source://compass//lib/compass/logger.rb#60
  def record(action, *arguments); end

  # source://compass//lib/compass/logger.rb#77
  def red; end

  # Returns the value of attribute time.
  #
  # source://compass//lib/compass/logger.rb#51
  def time; end

  # Sets the attribute time
  #
  # @param value the value to set the attribute time to.
  #
  # source://compass//lib/compass/logger.rb#51
  def time=(_arg0); end

  # source://compass//lib/compass/logger.rb#85
  def wrap(c, reset_to = T.unsafe(nil)); end

  # source://compass//lib/compass/logger.rb#81
  def yellow; end
end

# source://compass//lib/compass/logger.rb#30
Compass::Logger::ACTION_CAN_BE_QUIET = T.let(T.unsafe(nil), Hash)

# source://compass//lib/compass/logger.rb#7
Compass::Logger::ACTION_COLORS = T.let(T.unsafe(nil), Hash)

# source://compass//lib/compass/logger.rb#5
Compass::Logger::COLORS = T.let(T.unsafe(nil), Hash)

# source://compass//lib/compass/logger.rb#28
Compass::Logger::DEFAULT_ACTIONS = T.let(T.unsafe(nil), Array)

# source://compass//lib/compass/errors.rb#6
class Compass::MissingDependency < ::Compass::Error; end

# source://compass//lib/compass/logger.rb#130
class Compass::NullLogger < ::Compass::Logger
  # source://compass//lib/compass/logger.rb#137
  def emit(msg); end

  # source://compass//lib/compass/logger.rb#134
  def log(msg); end

  # source://compass//lib/compass/logger.rb#131
  def record(*args); end
end

Compass::SassCompiler = T.let(T.unsafe(nil), T.untyped)

# source://compass//lib/compass/sass_extensions.rb#5
module Compass::SassExtensions
  class << self
    def const_missing(const_name); end
  end
end

# source://compass//lib/compass/sass_extensions/functions.rb#1
module Compass::SassExtensions::Functions
  class << self
    def const_missing(const_name); end
  end
end

# source://compass//lib/compass/sass_extensions/functions.rb#2
module Compass::SassExtensions::Functions::SassDeclarationHelper
  # source://compass//lib/compass/sass_extensions/functions.rb#3
  def declare(*args); end
end

# source://compass//lib/compass/sass_extensions/functions/sprites.rb#1
module Compass::SassExtensions::Functions::Sprites
  include ::Sass::Script::Value::Helpers
  extend ::Compass::SassExtensions::Functions::SassDeclarationHelper
  extend ::Sass::Script::Value::Helpers

  # Returns the sprite file as an inline image
  #    @include "icon/*.png";
  #     #{$icon-sprite-base-class} {
  #       background-image: inline-sprite($icon-sprites);
  #      }
  #
  # source://compass//lib/compass/sass_extensions/functions/sprites.rb#59
  def inline_sprite(map); end

  # Returns the image and background position for use in a single shorthand property:
  #
  #     $icons: sprite-map("icons/*.png"); // contains icons/new.png among others.
  #     background: sprite($icons, new) no-repeat;
  #
  # Becomes:
  #
  #     background: url('/images/icons.png?12345678') 0 -24px no-repeat;
  #
  # If the `use_percentages` parameter is passed as true, percentages will be
  # used to position the sprite. Example output:
  #
  #     background: url('/images/icons.png?12345678') 0 50% no-repeat;
  #
  # source://compass//lib/compass/sass_extensions/functions/sprites.rb#96
  def sprite(map, sprite, offset_x = T.unsafe(nil), offset_y = T.unsafe(nil), use_percentages = T.unsafe(nil)); end

  # Returns boolean if sprite has a parent
  #
  # source://compass//lib/compass/sass_extensions/functions/sprites.rb#133
  def sprite_does_not_have_parent(map, sprite); end

  # Returns the path to the original image file for the sprite with the given name
  #
  # source://compass//lib/compass/sass_extensions/functions/sprites.rb#118
  def sprite_file(map, sprite); end

  # Returns boolean if sprite has the selector
  #
  # source://compass//lib/compass/sass_extensions/functions/sprites.rb#155
  def sprite_has_selector(map, sprite, selector); end

  # source://compass//lib/compass/sass_extensions/functions/sprites.rb#169
  def sprite_has_valid_selector(selector); end

  # Returns the height of the generated sprite map
  #
  # source://compass//lib/compass/sass_extensions/functions/sprites.rb#31
  def sprite_height(map, sprite = T.unsafe(nil)); end

  # Creates a Compass::SassExtensions::Sprites::SpriteMap object. A sprite map, when used in a property is the same
  # as calling sprite-url. So the following background properties are equivalent:
  #
  #     $icons: sprite-map("icons/*.png");
  #     background: sprite-url($icons) no-repeat;
  #     background: $icons no-repeat;
  #
  # The sprite map object will generate the sprite map image, if necessary,
  # the first time it is converted to a url. Simply constructing it has no side-effects.
  #
  # source://compass//lib/compass/sass_extensions/functions/sprites.rb#76
  def sprite_map(glob, kwargs = T.unsafe(nil)); end

  # Returns the name of a sprite map
  # The name is derived from the folder than contains the sprites.
  #
  # source://compass//lib/compass/sass_extensions/functions/sprites.rb#111
  def sprite_map_name(map); end

  # Returns a list of all sprite names
  #
  # source://compass//lib/compass/sass_extensions/functions/sprites.rb#41
  def sprite_names(map); end

  # Returns the system path of the sprite file
  #
  # source://compass//lib/compass/sass_extensions/functions/sprites.rb#48
  def sprite_path(map); end

  # Returns the position for the original image in the sprite.
  # This is suitable for use as a value to background-position:
  #
  #     $icons: sprite-map("icons/*.png");
  #     background-position: sprite-position($icons, new);
  #
  # Might generate something like:
  #
  #     background-position: 0 -34px;
  #
  # You can adjust the background relative to this position by passing values for
  # `$offset-x` and `$offset-y`:
  #
  #     $icons: sprite-map("icons/*.png");
  #     background-position: sprite-position($icons, new, 3px, -2px);
  #
  # Would change the above output to:
  #
  #     background-position: 3px -36px;
  #
  # If you set the `use_percentages` parameter to true, the position will be
  # expressed in percentages. An example:
  #
  #     background-position: sprite-position($icons, new, 0, 0, true);
  #
  # Would result in something like this:
  #
  #     background-position: 0 42%;
  #
  # source://compass//lib/compass/sass_extensions/functions/sprites.rb#213
  def sprite_position(map, sprite = T.unsafe(nil), offset_x = T.unsafe(nil), offset_y = T.unsafe(nil), use_percentages = T.unsafe(nil)); end

  # return the name of the selector file
  #
  # @raise [Sass::SyntaxError]
  #
  # source://compass//lib/compass/sass_extensions/functions/sprites.rb#142
  def sprite_selector_file(map, sprite, selector); end

  # Returns a url to the sprite image.
  #
  # source://compass//lib/compass/sass_extensions/functions/sprites.rb#177
  def sprite_url(map); end

  # Returns the width of the generated sprite map
  #
  # source://compass//lib/compass/sass_extensions/functions/sprites.rb#21
  def sprite_width(map, sprite = T.unsafe(nil)); end

  protected

  # source://compass//lib/compass/sass_extensions/functions/sprites.rb#268
  def convert_sprite_name(sprite); end

  # source://compass//lib/compass/sass_extensions/functions/sprites.rb#252
  def get_sprite_file(map, sprite = T.unsafe(nil)); end

  # @raise [Sass::SyntaxError]
  #
  # source://compass//lib/compass/sass_extensions/functions/sprites.rb#297
  def missing_image!(map, sprite); end

  # @raise [Sass::SyntaxError]
  #
  # source://compass//lib/compass/sass_extensions/functions/sprites.rb#301
  def missing_sprite!(function_name); end

  # source://compass//lib/compass/sass_extensions/functions/sprites.rb#260
  def reversed_color_names; end

  # source://compass//lib/compass/sass_extensions/functions/sprites.rb#285
  def verify_map(map, error = T.unsafe(nil)); end

  # source://compass//lib/compass/sass_extensions/functions/sprites.rb#291
  def verify_sprite(sprite); end
end

# source://compass//lib/compass/sass_extensions/functions/sprites.rb#8
Compass::SassExtensions::Functions::Sprites::BOOL_FALSE = T.let(T.unsafe(nil), Sass::Script::Value::Bool)

# Determines if the CSS selector is valid
#
# source://compass//lib/compass/sass_extensions/functions/sprites.rb#168
Compass::SassExtensions::Functions::Sprites::IDENTIFIER_RX = T.let(T.unsafe(nil), Regexp)

# source://compass//lib/compass/sass_extensions/functions/sprites.rb#9
Compass::SassExtensions::Functions::Sprites::VALID_SELECTORS = T.let(T.unsafe(nil), Array)

# Provides a consistent interface for getting a variable in ruby
# from a keyword argument hash that accounts for underscores/dash equivalence
# and allows the caller to pass a symbol instead of a string.
#
# source://compass//lib/compass/sass_extensions/functions/sprites.rb#14
module Compass::SassExtensions::Functions::Sprites::VariableReader
  # source://compass//lib/compass/sass_extensions/functions/sprites.rb#15
  def get_var(variable_name); end
end

# source://compass//lib/compass/sass_extensions/functions/sprites.rb#7
Compass::SassExtensions::Functions::Sprites::ZERO = T.let(T.unsafe(nil), Sass::Script::Value::Number)

# source://compass//lib/compass/sass_extensions/sprites.rb#6
module Compass::SassExtensions::Sprites; end

# source://compass//lib/compass/sass_extensions/sprites/engines/chunky_png_engine.rb#10
class Compass::SassExtensions::Sprites::ChunkyPngEngine < ::Compass::SassExtensions::Sprites::Engine
  # source://compass//lib/compass/sass_extensions/sprites/engines/chunky_png_engine.rb#12
  def construct_sprite; end

  # source://compass//lib/compass/sass_extensions/sprites/engines/chunky_png_engine.rb#24
  def save(filename); end
end

# source://compass//lib/compass/sass_extensions/sprites/engines.rb#4
class Compass::SassExtensions::Sprites::Engine
  # @return [Engine] a new instance of Engine
  #
  # source://compass//lib/compass/sass_extensions/sprites/engines.rb#6
  def initialize(width, height, images); end

  # Returns the value of attribute canvas.
  #
  # source://compass//lib/compass/sass_extensions/sprites/engines.rb#5
  def canvas; end

  # Sets the attribute canvas
  #
  # @param value the value to set the attribute canvas to.
  #
  # source://compass//lib/compass/sass_extensions/sprites/engines.rb#5
  def canvas=(_arg0); end

  # @raise [::Compass::Error]
  #
  # source://compass//lib/compass/sass_extensions/sprites/engines.rb#11
  def construct_sprite; end

  # Returns the value of attribute height.
  #
  # source://compass//lib/compass/sass_extensions/sprites/engines.rb#5
  def height; end

  # Sets the attribute height
  #
  # @param value the value to set the attribute height to.
  #
  # source://compass//lib/compass/sass_extensions/sprites/engines.rb#5
  def height=(_arg0); end

  # Returns the value of attribute images.
  #
  # source://compass//lib/compass/sass_extensions/sprites/engines.rb#5
  def images; end

  # Sets the attribute images
  #
  # @param value the value to set the attribute images to.
  #
  # source://compass//lib/compass/sass_extensions/sprites/engines.rb#5
  def images=(_arg0); end

  # @raise [::Compass::Error]
  #
  # source://compass//lib/compass/sass_extensions/sprites/engines.rb#15
  def save(filename); end

  # Returns the value of attribute width.
  #
  # source://compass//lib/compass/sass_extensions/sprites/engines.rb#5
  def width; end

  # Sets the attribute width
  #
  # @param value the value to set the attribute width to.
  #
  # source://compass//lib/compass/sass_extensions/sprites/engines.rb#5
  def width=(_arg0); end
end

# source://compass//lib/compass/sass_extensions/sprites/image.rb#4
class Compass::SassExtensions::Sprites::Image
  include ::Sass::Script::Value::Helpers

  # @return [Image] a new instance of Image
  #
  # source://compass//lib/compass/sass_extensions/sprites/image.rb#21
  def initialize(base, relative_file, options); end

  # Active selector Image object if exsists
  #
  # source://compass//lib/compass/sass_extensions/sprites/image.rb#134
  def active; end

  # Is active selector
  #
  # @return [Boolean]
  #
  # source://compass//lib/compass/sass_extensions/sprites/image.rb#129
  def active?; end

  # Returns the value of attribute base.
  #
  # source://compass//lib/compass/sass_extensions/sprites/image.rb#18
  def base; end

  # MD5 hash of this file
  #
  # source://compass//lib/compass/sass_extensions/sprites/image.rb#99
  def digest; end

  # The Full path to the image
  #
  # source://compass//lib/compass/sass_extensions/sprites/image.rb#28
  def file; end

  # source://compass//lib/compass/sass_extensions/sprites/image.rb#32
  def find_file; end

  # Active selector Image object if exsists
  #
  # source://compass//lib/compass/sass_extensions/sprites/image.rb#144
  def focus; end

  # Is active selector
  #
  # @return [Boolean]
  #
  # source://compass//lib/compass/sass_extensions/sprites/image.rb#139
  def focus?; end

  # source://compass//lib/compass/sass_extensions/sprites/image.rb#55
  def get_var_file(var); end

  # Height of the image
  #
  # source://compass//lib/compass/sass_extensions/sprites/image.rb#51
  def height; end

  # Hover selector Image object if exsists
  #
  # source://compass//lib/compass/sass_extensions/sprites/image.rb#114
  def hover; end

  # Is hover selector
  #
  # @return [Boolean]
  #
  # source://compass//lib/compass/sass_extensions/sprites/image.rb#109
  def hover?; end

  # Returns the value of attribute left.
  #
  # source://compass//lib/compass/sass_extensions/sprites/image.rb#19
  def left; end

  # Sets the attribute left
  #
  # @param value the value to set the attribute left to.
  #
  # source://compass//lib/compass/sass_extensions/sprites/image.rb#19
  def left=(_arg0); end

  # mtime of this file
  #
  # source://compass//lib/compass/sass_extensions/sprites/image.rb#104
  def mtime; end

  # Returns the value of attribute name.
  #
  # source://compass//lib/compass/sass_extensions/sprites/image.rb#18
  def name; end

  # @return [Boolean]
  #
  # source://compass//lib/compass/sass_extensions/sprites/image.rb#79
  def no_repeat?; end

  # Offset within the sprite
  #
  # source://compass//lib/compass/sass_extensions/sprites/image.rb#89
  def offset; end

  # Returns the value of attribute options.
  #
  # source://compass//lib/compass/sass_extensions/sprites/image.rb#18
  def options; end

  # source://compass//lib/compass/sass_extensions/sprites/image.rb#148
  def parent; end

  # Value of <tt> $#{name}-position </tt> or <tt> $position </tt> defaults to <tt>0px</tt>
  #
  # source://compass//lib/compass/sass_extensions/sprites/image.rb#84
  def position; end

  # Returns the value of attribute relative_file.
  #
  # source://compass//lib/compass/sass_extensions/sprites/image.rb#18
  def relative_file; end

  # Value of <tt> $#{name}-repeat </tt> or <tt> $repeat </tt>
  #
  # source://compass//lib/compass/sass_extensions/sprites/image.rb#60
  def repeat; end

  # @return [Boolean]
  #
  # source://compass//lib/compass/sass_extensions/sprites/image.rb#71
  def repeat_x?; end

  # @return [Boolean]
  #
  # source://compass//lib/compass/sass_extensions/sprites/image.rb#75
  def repeat_y?; end

  # source://compass//lib/compass/sass_extensions/sprites/image.rb#46
  def size; end

  # Spacing between this image and the next
  #
  # source://compass//lib/compass/sass_extensions/sprites/image.rb#94
  def spacing; end

  # Target selector Image object if exsists
  #
  # source://compass//lib/compass/sass_extensions/sprites/image.rb#124
  def target; end

  # Is target selector
  #
  # @return [Boolean]
  #
  # source://compass//lib/compass/sass_extensions/sprites/image.rb#119
  def target?; end

  # Returns the value of attribute top.
  #
  # source://compass//lib/compass/sass_extensions/sprites/image.rb#19
  def top; end

  # Sets the attribute top
  #
  # @param value the value to set the attribute top to.
  #
  # source://compass//lib/compass/sass_extensions/sprites/image.rb#19
  def top=(_arg0); end

  # Width of the image
  #
  # source://compass//lib/compass/sass_extensions/sprites/image.rb#42
  def width; end

  private

  # source://compass//lib/compass/sass_extensions/sprites/image.rb#156
  def dimensions; end
end

# source://compass//lib/compass/sass_extensions/sprites/image.rb#6
Compass::SassExtensions::Sprites::Image::ACTIVE = T.let(T.unsafe(nil), Regexp)

# source://compass//lib/compass/sass_extensions/sprites/image.rb#9
Compass::SassExtensions::Sprites::Image::FOCUS = T.let(T.unsafe(nil), Regexp)

# source://compass//lib/compass/sass_extensions/sprites/image.rb#8
Compass::SassExtensions::Sprites::Image::HOVER = T.let(T.unsafe(nil), Regexp)

# source://compass//lib/compass/sass_extensions/sprites/image.rb#14
Compass::SassExtensions::Sprites::Image::NO_REPEAT = T.let(T.unsafe(nil), String)

# source://compass//lib/compass/sass_extensions/sprites/image.rb#10
Compass::SassExtensions::Sprites::Image::PARENT = T.let(T.unsafe(nil), Regexp)

# source://compass//lib/compass/sass_extensions/sprites/image.rb#12
Compass::SassExtensions::Sprites::Image::REPEAT_X = T.let(T.unsafe(nil), String)

# source://compass//lib/compass/sass_extensions/sprites/image.rb#13
Compass::SassExtensions::Sprites::Image::REPEAT_Y = T.let(T.unsafe(nil), String)

# source://compass//lib/compass/sass_extensions/sprites/image.rb#7
Compass::SassExtensions::Sprites::Image::TARGET = T.let(T.unsafe(nil), Regexp)

# source://compass//lib/compass/sass_extensions/sprites/image.rb#16
Compass::SassExtensions::Sprites::Image::VALID_REPEATS = T.let(T.unsafe(nil), Array)

# source://compass//lib/compass/sass_extensions/sprites/image_methods.rb#4
module Compass::SassExtensions::Sprites::ImageMethods
  # source://compass//lib/compass/sass_extensions/sprites/image_methods.rb#36
  def get_magic_selector_image(name, selector); end

  # Returns true if the image name has an active selector image
  #
  # @return [Boolean]
  #
  # source://compass//lib/compass/sass_extensions/sprites/image_methods.rb#30
  def has_active?(name); end

  # Returns true if the image name has a focus selector image
  #
  # @return [Boolean]
  #
  # source://compass//lib/compass/sass_extensions/sprites/image_methods.rb#25
  def has_focus?(name); end

  # Returns true if the image name has a hover selector image
  #
  # @return [Boolean]
  #
  # source://compass//lib/compass/sass_extensions/sprites/image_methods.rb#15
  def has_hover?(name); end

  # Returns true if the image name has a target selector image
  #
  # @return [Boolean]
  #
  # source://compass//lib/compass/sass_extensions/sprites/image_methods.rb#20
  def has_target?(name); end

  # Fetches the Sprite::Image object for the supplied name
  #
  # source://compass//lib/compass/sass_extensions/sprites/image_methods.rb#6
  def image_for(name); end

  # Return and array of image names that make up this sprite
  #
  # source://compass//lib/compass/sass_extensions/sprites/image_methods.rb#46
  def sprite_names; end
end

# source://compass//lib/compass/sass_extensions/sprites/image_methods.rb#34
Compass::SassExtensions::Sprites::ImageMethods::SEPERATORS = T.let(T.unsafe(nil), Array)

# source://compass//lib/compass/sass_extensions/sprites/image_row.rb#6
class Compass::SassExtensions::Sprites::ImageRow
  extend ::Forwardable

  # @return [ImageRow] a new instance of ImageRow
  #
  # source://compass//lib/compass/sass_extensions/sprites/image_row.rb#12
  def initialize(max_width); end

  # source://compass//lib/compass/sass_extensions/sprites/image_row.rb#17
  def <<(image); end

  # source://compass//lib/compass/sass_extensions/sprites/image_row.rb#17
  def add(image); end

  # source://forwardable/1.3.1/forwardable.rb#226
  def delete(*args, &block); end

  # source://compass//lib/compass/sass_extensions/sprites/image_row.rb#37
  def efficiency; end

  # source://forwardable/1.3.1/forwardable.rb#226
  def empty?(*args, &block); end

  # source://compass//lib/compass/sass_extensions/sprites/image_row.rb#25
  def height; end

  # Returns the value of attribute images.
  #
  # source://compass//lib/compass/sass_extensions/sprites/image_row.rb#9
  def images; end

  # source://forwardable/1.3.1/forwardable.rb#226
  def last(*args, &block); end

  # source://forwardable/1.3.1/forwardable.rb#226
  def length(*args, &block); end

  # Returns the value of attribute max_width.
  #
  # source://compass//lib/compass/sass_extensions/sprites/image_row.rb#9
  def max_width; end

  # source://compass//lib/compass/sass_extensions/sprites/image_row.rb#33
  def total_width; end

  # source://compass//lib/compass/sass_extensions/sprites/image_row.rb#29
  def width; end

  # @return [Boolean]
  #
  # source://compass//lib/compass/sass_extensions/sprites/image_row.rb#41
  def will_fit?(image); end
end

# source://compass//lib/compass/sass_extensions/sprites/images.rb#4
class Compass::SassExtensions::Sprites::Images < ::Array
  # source://compass//lib/compass/sass_extensions/sprites/images.rb#6
  def sort_by!(method); end
end

# source://compass//lib/compass/sass_extensions/sprites/layout.rb#5
module Compass::SassExtensions::Sprites::Layout; end

# source://compass//lib/compass/sass_extensions/sprites/layout.rb#6
class Compass::SassExtensions::Sprites::Layout::SpriteLayout
  # @return [SpriteLayout] a new instance of SpriteLayout
  #
  # source://compass//lib/compass/sass_extensions/sprites/layout.rb#11
  def initialize(images, kwargs = T.unsafe(nil)); end

  # Returns the value of attribute height.
  #
  # source://compass//lib/compass/sass_extensions/sprites/layout.rb#9
  def height; end

  # Sets the attribute height
  #
  # @param value the value to set the attribute height to.
  #
  # source://compass//lib/compass/sass_extensions/sprites/layout.rb#9
  def height=(_arg0); end

  # Returns the value of attribute images.
  #
  # source://compass//lib/compass/sass_extensions/sprites/layout.rb#8
  def images; end

  # @raise [Compass::SpriteException]
  #
  # source://compass//lib/compass/sass_extensions/sprites/layout.rb#20
  def layout!; end

  # Returns the value of attribute options.
  #
  # source://compass//lib/compass/sass_extensions/sprites/layout.rb#8
  def options; end

  # source://compass//lib/compass/sass_extensions/sprites/layout.rb#24
  def properties; end

  # Returns the value of attribute width.
  #
  # source://compass//lib/compass/sass_extensions/sprites/layout.rb#9
  def width; end

  # Sets the attribute width
  #
  # @param value the value to set the attribute width to.
  #
  # source://compass//lib/compass/sass_extensions/sprites/layout.rb#9
  def width=(_arg0); end
end

# source://compass//lib/compass/sass_extensions/sprites/layout_methods.rb#4
module Compass::SassExtensions::Sprites::LayoutMethods
  # Calculates the overal image dimensions
  # collects image sizes and input parameters for each sprite
  #
  # source://compass//lib/compass/sass_extensions/sprites/layout_methods.rb#32
  def compute_image_positions!; end

  # @return [Boolean]
  #
  # source://compass//lib/compass/sass_extensions/sprites/layout_methods.rb#18
  def diagonal?; end

  # @return [Boolean]
  #
  # source://compass//lib/compass/sass_extensions/sprites/layout_methods.rb#14
  def horizontal?; end

  # source://compass//lib/compass/sass_extensions/sprites/layout_methods.rb#26
  def layout; end

  # @return [Boolean]
  #
  # source://compass//lib/compass/sass_extensions/sprites/layout_methods.rb#10
  def smart?; end

  # @return [Boolean]
  #
  # source://compass//lib/compass/sass_extensions/sprites/layout_methods.rb#22
  def vertical?; end
end

# source://compass//lib/compass/sass_extensions/sprites/layout_methods.rb#6
Compass::SassExtensions::Sprites::LayoutMethods::DIAGONAL = T.let(T.unsafe(nil), String)

# source://compass//lib/compass/sass_extensions/sprites/layout_methods.rb#5
Compass::SassExtensions::Sprites::LayoutMethods::HORIZONTAL = T.let(T.unsafe(nil), String)

# source://compass//lib/compass/sass_extensions/sprites/layout_methods.rb#7
Compass::SassExtensions::Sprites::LayoutMethods::SMART = T.let(T.unsafe(nil), String)

# source://compass//lib/compass/sass_extensions/sprites/layout_methods.rb#8
Compass::SassExtensions::Sprites::LayoutMethods::VERTICAL = T.let(T.unsafe(nil), String)

# source://compass//lib/compass/sass_extensions/sprites/row_fitter.rb#6
class Compass::SassExtensions::Sprites::RowFitter
  extend ::Forwardable

  # @return [RowFitter] a new instance of RowFitter
  #
  # source://compass//lib/compass/sass_extensions/sprites/row_fitter.rb#12
  def initialize(images); end

  # source://forwardable/1.3.1/forwardable.rb#226
  def [](*args, &block); end

  # source://compass//lib/compass/sass_extensions/sprites/row_fitter.rb#36
  def efficiency; end

  # source://compass//lib/compass/sass_extensions/sprites/row_fitter.rb#23
  def fit!(style = T.unsafe(nil)); end

  # source://compass//lib/compass/sass_extensions/sprites/row_fitter.rb#32
  def height; end

  # Returns the value of attribute images.
  #
  # source://compass//lib/compass/sass_extensions/sprites/row_fitter.rb#9
  def images; end

  # Returns the value of attribute rows.
  #
  # source://compass//lib/compass/sass_extensions/sprites/row_fitter.rb#9
  def rows; end

  # source://compass//lib/compass/sass_extensions/sprites/row_fitter.rb#28
  def width; end

  private

  # source://compass//lib/compass/sass_extensions/sprites/row_fitter.rb#47
  def fast_fit; end

  # source://compass//lib/compass/sass_extensions/sprites/row_fitter.rb#41
  def new_row(image = T.unsafe(nil)); end

  # source://compass//lib/compass/sass_extensions/sprites/row_fitter.rb#59
  def scan_fit; end
end

# source://compass//lib/compass/sass_extensions/sprites/sprite_map.rb#4
class Compass::SassExtensions::Sprites::SpriteMap < ::Sass::Script::Value::Base
  include ::Compass::SassExtensions::Sprites::SpriteMethods
  include ::Compass::SassExtensions::Sprites::ImageMethods
  include ::Compass::SassExtensions::Sprites::LayoutMethods
  include ::Sass::Script::Value::Helpers

  # @return [SpriteMap] a new instance of SpriteMap
  #
  # source://compass//lib/compass/sass_extensions/sprites/sprite_map.rb#37
  def initialize(sprites, path, name, context, kwargs); end

  # Returns the value of attribute engine.
  #
  # source://compass//lib/compass/sass_extensions/sprites/sprite_map.rb#6
  def engine; end

  # Sets the attribute engine
  #
  # @param value the value to set the attribute engine to.
  #
  # source://compass//lib/compass/sass_extensions/sprites/sprite_map.rb#6
  def engine=(_arg0); end

  # Returns the value of attribute height.
  #
  # source://compass//lib/compass/sass_extensions/sprites/sprite_map.rb#6
  def height; end

  # Sets the attribute height
  #
  # @param value the value to set the attribute height to.
  #
  # source://compass//lib/compass/sass_extensions/sprites/sprite_map.rb#6
  def height=(_arg0); end

  # Returns the value of attribute image_names.
  #
  # source://compass//lib/compass/sass_extensions/sprites/sprite_map.rb#5
  def image_names; end

  # Sets the attribute image_names
  #
  # @param value the value to set the attribute image_names to.
  #
  # source://compass//lib/compass/sass_extensions/sprites/sprite_map.rb#5
  def image_names=(_arg0); end

  # Returns the value of attribute images.
  #
  # source://compass//lib/compass/sass_extensions/sprites/sprite_map.rb#6
  def images; end

  # Sets the attribute images
  #
  # @param value the value to set the attribute images to.
  #
  # source://compass//lib/compass/sass_extensions/sprites/sprite_map.rb#6
  def images=(_arg0); end

  # source://compass//lib/compass/sass_extensions/sprites/sprite_map.rb#57
  def inspect; end

  # Returns the value of attribute kwargs.
  #
  # source://compass//lib/compass/sass_extensions/sprites/sprite_map.rb#5
  def kwargs; end

  # Sets the attribute kwargs
  #
  # @param value the value to set the attribute kwargs to.
  #
  # source://compass//lib/compass/sass_extensions/sprites/sprite_map.rb#5
  def kwargs=(_arg0); end

  # Returns the value of attribute map.
  #
  # source://compass//lib/compass/sass_extensions/sprites/sprite_map.rb#5
  def map; end

  # Sets the attribute map
  #
  # @param value the value to set the attribute map to.
  #
  # source://compass//lib/compass/sass_extensions/sprites/sprite_map.rb#5
  def map=(_arg0); end

  # source://compass//lib/compass/sass_extensions/sprites/sprite_map.rb#76
  def method_missing(meth, *args, &block); end

  # Returns the value of attribute name.
  #
  # source://compass//lib/compass/sass_extensions/sprites/sprite_map.rb#5
  def name; end

  # Sets the attribute name
  #
  # @param value the value to set the attribute name to.
  #
  # source://compass//lib/compass/sass_extensions/sprites/sprite_map.rb#5
  def name=(_arg0); end

  # Returns the value of attribute path.
  #
  # source://compass//lib/compass/sass_extensions/sprites/sprite_map.rb#5
  def path; end

  # Sets the attribute path
  #
  # @param value the value to set the attribute path to.
  #
  # source://compass//lib/compass/sass_extensions/sprites/sprite_map.rb#5
  def path=(_arg0); end

  # @return [Boolean]
  #
  # source://compass//lib/compass/sass_extensions/sprites/sprite_map.rb#72
  def respond_to?(meth); end

  # source://compass//lib/compass/sass_extensions/sprites/sprite_map.rb#53
  def sort_method; end

  # source://compass//lib/compass/sass_extensions/sprites/sprite_map.rb#68
  def to_s(kwargs = T.unsafe(nil)); end

  # Returns the value of attribute width.
  #
  # source://compass//lib/compass/sass_extensions/sprites/sprite_map.rb#6
  def width; end

  # Sets the attribute width
  #
  # @param value the value to set the attribute width to.
  #
  # source://compass//lib/compass/sass_extensions/sprites/sprite_map.rb#6
  def width=(_arg0); end

  private

  # source://compass//lib/compass/sass_extensions/sprites/sprite_map.rb#86
  def modulize; end

  class << self
    # Initialize a new sprite object from a relative file path
    # the path is relative to the <tt>images_path</tt> confguration option
    #
    # source://compass//lib/compass/sass_extensions/sprites/sprite_map.rb#16
    def from_uri(uri, context, kwargs); end

    # source://compass//lib/compass/sass_extensions/sprites/sprite_map.rb#26
    def relative_name(sprite); end
  end
end

# source://compass//lib/compass/sass_extensions/sprites/sprite_methods.rb#4
module Compass::SassExtensions::Sprites::SpriteMethods
  # source://compass//lib/compass/sass_extensions/sprites/sprite_methods.rb#65
  def cleanup_old_sprites; end

  # Calculates the overal image dimensions
  # collects image sizes and input parameters for each sprite
  # Calculates the height
  #
  # source://compass//lib/compass/sass_extensions/sprites/sprite_methods.rb#13
  def compute_image_metadata!; end

  # The on-the-disk filename of the sprite
  #
  # source://compass//lib/compass/sass_extensions/sprites/sprite_methods.rb#43
  def filename; end

  # Generate a sprite image if necessary
  #
  # source://compass//lib/compass/sass_extensions/sprites/sprite_methods.rb#52
  def generate; end

  # Does this sprite need to be generated
  #
  # @return [Boolean]
  #
  # source://compass//lib/compass/sass_extensions/sprites/sprite_methods.rb#74
  def generation_required?; end

  # All the full-path filenames involved in this sprite
  #
  # source://compass//lib/compass/sass_extensions/sprites/sprite_methods.rb#106
  def image_filenames; end

  # source://compass//lib/compass/sass_extensions/sprites/sprite_methods.rb#20
  def init_engine; end

  # Creates the Sprite::Image objects for each image and calculates the width
  #
  # source://compass//lib/compass/sass_extensions/sprites/sprite_methods.rb#28
  def init_images; end

  # source://compass//lib/compass/sass_extensions/sprites/sprite_methods.rb#128
  def log(action, filename, *extra); end

  # Mtime of the sprite file
  #
  # source://compass//lib/compass/sass_extensions/sprites/sprite_methods.rb#119
  def mtime; end

  # source://compass//lib/compass/sass_extensions/sprites/sprite_methods.rb#38
  def name_and_hash; end

  # Checks whether this sprite is outdated
  #
  # @return [Boolean]
  #
  # source://compass//lib/compass/sass_extensions/sprites/sprite_methods.rb#111
  def outdated?; end

  # source://compass//lib/compass/sass_extensions/sprites/sprite_methods.rb#47
  def relativize(path); end

  # Saves the sprite engine
  #
  # source://compass//lib/compass/sass_extensions/sprites/sprite_methods.rb#96
  def save!; end

  # Calculate the size of the sprite
  #
  # source://compass//lib/compass/sass_extensions/sprites/sprite_methods.rb#124
  def size; end

  # Returns the uniqueness hash for this sprite object
  #
  # source://compass//lib/compass/sass_extensions/sprites/sprite_methods.rb#79
  def uniqueness_hash; end
end

# Changing this string will invalidate all previously generated sprite images.
# We should do so only when the packing algorithm changes
#
# source://compass//lib/compass/sass_extensions/sprites/sprite_methods.rb#8
Compass::SassExtensions::Sprites::SpriteMethods::SPRITE_VERSION = T.let(T.unsafe(nil), String)

# source://compass//lib/compass/errors.rb#8
class Compass::SpriteException < ::Compass::Error; end

# source://compass//lib/compass/sprite_importer.rb#4
class Compass::SpriteImporter < ::Sass::Importers::Base
  # @return [Boolean]
  #
  # source://compass//lib/compass/sprite_importer.rb#41
  def eql?(other); end

  # source://compass//lib/compass/sprite_importer.rb#22
  def find(uri, options); end

  # source://compass//lib/compass/sprite_importer.rb#29
  def find_relative(uri, base, options); end

  # source://compass//lib/compass/sprite_importer.rb#37
  def hash; end

  # source://compass//lib/compass/sprite_importer.rb#51
  def key(uri, options = T.unsafe(nil)); end

  # source://compass//lib/compass/sprite_importer.rb#45
  def mtime(uri, options); end

  # source://compass//lib/compass/sprite_importer.rb#55
  def public_url(*args); end

  # source://compass//lib/compass/sprite_importer.rb#33
  def to_s; end

  class << self
    # Generates the Sass for this sprite file
    #
    # source://compass//lib/compass/sprite_importer.rb#111
    def content_for_images(uri, name, skip_overrides = T.unsafe(nil)); end

    # Returns the Glob of image files for the uri
    #
    # @raise [Compass::SpriteException]
    #
    # source://compass//lib/compass/sprite_importer.rb#81
    def files(uri); end

    # finds all sprite files
    #
    # source://compass//lib/compass/sprite_importer.rb#16
    def find_all_sprite_map_files(path); end

    # The on-disk location of this sprite
    #
    # source://compass//lib/compass/sprite_importer.rb#75
    def path(uri); end

    # source://compass//lib/compass/sprite_importer.rb#60
    def path_and_name(uri); end

    # Returns a Sass::Engine for this sprite object
    #
    # source://compass//lib/compass/sprite_importer.rb#105
    def sass_engine(uri, name, importer, options); end

    # Returns the sass_options for this sprite
    #
    # source://compass//lib/compass/sprite_importer.rb#100
    def sass_options(uri, importer, options); end

    # Name of this spite
    #
    # source://compass//lib/compass/sprite_importer.rb#69
    def sprite_name(uri); end

    # Returns an Array of image names without the file extension
    #
    # source://compass//lib/compass/sprite_importer.rb#93
    def sprite_names(uri); end
  end
end

# source://compass//lib/compass/sprite_importer.rb#11
Compass::SpriteImporter::CONTENT_TEMPLATE = T.let(T.unsafe(nil), ERB)

# source://compass//lib/compass/sprite_importer.rb#10
Compass::SpriteImporter::CONTENT_TEMPLATE_FILE = T.let(T.unsafe(nil), String)

# source://compass//lib/compass/sprite_importer.rb#6
Compass::SpriteImporter::SPRITE_IMPORTER_REGEX = T.let(T.unsafe(nil), Regexp)

# source://compass//lib/compass/sprite_importer.rb#9
Compass::SpriteImporter::TEMPLATE_FOLDER = T.let(T.unsafe(nil), String)

# source://compass//lib/compass/sprite_importer.rb#5
Compass::SpriteImporter::VAILD_FILE_NAME = T.let(T.unsafe(nil), Regexp)

# source://compass//lib/compass/sprite_importer.rb#7
Compass::SpriteImporter::VALID_EXTENSIONS = T.let(T.unsafe(nil), Array)

# source://compass//lib/compass/sprite_importer/binding.rb#3
module Compass::Sprites; end

# source://compass//lib/compass/sprite_importer/binding.rb#4
class Compass::Sprites::Binding < ::OpenStruct
  # source://compass//lib/compass/sprite_importer/binding.rb#6
  def get_binding; end
end

Compass::Stats = T.let(T.unsafe(nil), T.untyped)

# Write your unit test like this if you want to make sure all your stylesheets compile.
#
# require 'compass/test_case'
# class StylesheetsTest < Compass::TestCase
#   def test_stylesheets
#     my_sass_files.each do |sass_file|
#       assert_compiles(sass_file) do |result|
#         assert_not_blank result
#       end
#     end
#   end
#   protected
#   def my_sass_files
#     Dir.glob(File.expand_path(File.join(File.dirname(__FILE__), "../..", "app/stylesheets/**/[^_]*.sass")))
#   end
# end
Compass::TestCase = T.let(T.unsafe(nil), T.untyped)

# source://compass//lib/compass/version.rb#36
Compass::VERSION = T.let(T.unsafe(nil), String)

# source://compass//lib/compass/version.rb#40
Compass::VERSION_DETAILS = T.let(T.unsafe(nil), Hash)

# source://compass//lib/compass/version.rb#37
Compass::VERSION_NAME = T.let(T.unsafe(nil), String)

# source://compass//lib/compass/version.rb#3
module Compass::Version
  # source://compass//lib/compass/version.rb#8
  def parse_version(version, name); end

  # source://compass//lib/compass/version.rb#4
  def scope(file); end

  # Returns a hash representing the version.
  # The :major, :minor, and :teeny keys have their respective numbers.
  # The :string key contains a human-readable string representation of the version.
  # The :rev key will have the current revision hash.
  #
  # This method swiped from Haml and then modified, some credit goes to Nathan Weizenbaum
  #
  # source://compass//lib/compass/version.rb#28
  def version; end
end

# source://compass//lib/compass/quick_cache.rb#1
module QuickCache
  # cache a value in memory for just a few seconds
  # This can speed up reads of values that change relatively infrequently
  # but might be read many times in a short burst of reads.
  #
  # source://compass//lib/compass/quick_cache.rb#6
  def quick_cache(key, ttl = T.unsafe(nil)); end
end

# source://compass//lib/compass/sass_extensions/functions.rb#13
module Sass::Script::Functions
  include ::Sass::Script::Value::Helpers
  include ::Compass::SassExtensions::Functions::Sprites

  # source://sass/3.4.25/lib/sass/script/functions.rb#1777
  def abs(number); end

  # source://sass/3.4.25/lib/sass/script/functions.rb#1126
  def adjust_color(color, kwargs); end

  # source://sass/3.4.25/lib/sass/script/functions.rb#1068
  def adjust_hue(color, degrees); end

  # source://sass/3.4.25/lib/sass/script/functions.rb#898
  def alpha(*args); end

  # source://sass/3.4.25/lib/sass/script/functions.rb#1951
  def append(list, val, separator = T.unsafe(nil)); end

  # source://sass/3.4.25/lib/sass/script/functions.rb#828
  def blue(color); end

  # source://sass/3.4.25/lib/sass/script/functions.rb#2219
  def call(name, *args); end

  # source://sass/3.4.25/lib/sass/script/functions.rb#1749
  def ceil(number); end

  # source://sass/3.4.25/lib/sass/script/functions.rb#1258
  def change_color(color, kwargs); end

  # source://sass/3.4.25/lib/sass/script/functions.rb#1702
  def comparable(number1, number2); end

  # source://sass/3.4.25/lib/sass/script/functions.rb#1377
  def complement(color); end

  # source://sass/3.4.25/lib/sass/script/functions.rb#2242
  def counter(*args); end

  # source://sass/3.4.25/lib/sass/script/functions.rb#2256
  def counters(*args); end

  # source://sass/3.4.25/lib/sass/script/functions.rb#1007
  def darken(color, amount); end

  # source://sass/3.4.25/lib/sass/script/functions.rb#1049
  def desaturate(color, amount); end

  # source://sass/3.4.25/lib/sass/script/functions.rb#944
  def fade_in(color, amount); end

  # source://sass/3.4.25/lib/sass/script/functions.rb#966
  def fade_out(color, amount); end

  # source://sass/3.4.25/lib/sass/script/functions.rb#1650
  def feature_exists(feature); end

  # source://sass/3.4.25/lib/sass/script/functions.rb#1763
  def floor(number); end

  # source://sass/3.4.25/lib/sass/script/functions.rb#2318
  def function_exists(name); end

  # source://sass/3.4.25/lib/sass/script/functions.rb#2300
  def global_variable_exists(name); end

  # source://sass/3.4.25/lib/sass/script/functions.rb#1361
  def grayscale(color); end

  # source://sass/3.4.25/lib/sass/script/functions.rb#812
  def green(color); end

  # source://sass/3.4.25/lib/sass/script/functions.rb#736
  def hsl(hue, saturation, lightness); end

  # source://sass/3.4.25/lib/sass/script/functions.rb#764
  def hsla(hue, saturation, lightness, alpha); end

  # source://sass/3.4.25/lib/sass/script/functions.rb#846
  def hue(color); end

  # source://sass/3.4.25/lib/sass/script/functions.rb#1086
  def ie_hex_str(color); end

  # source://sass/3.4.25/lib/sass/script/functions.rb#2180
  def if(condition, if_true, if_false); end

  # source://sass/3.4.25/lib/sass/script/functions.rb#2012
  def index(list, value); end

  # source://sass/3.4.25/lib/sass/script/functions.rb#2350
  def inspect(value); end

  # source://sass/3.4.25/lib/sass/script/functions.rb#1389
  def invert(color); end

  # source://sass/3.4.25/lib/sass/script/functions.rb#2648
  def is_superselector(sup, sub); end

  # source://sass/3.4.25/lib/sass/script/functions.rb#1915
  def join(list1, list2, separator = T.unsafe(nil)); end

  # source://sass/3.4.25/lib/sass/script/functions.rb#2161
  def keywords(args); end

  # source://sass/3.4.25/lib/sass/script/functions.rb#1827
  def length(list); end

  # source://sass/3.4.25/lib/sass/script/functions.rb#988
  def lighten(color, amount); end

  # source://sass/3.4.25/lib/sass/script/functions.rb#882
  def lightness(color); end

  # source://sass/3.4.25/lib/sass/script/functions.rb#2028
  def list_separator(list); end

  # source://sass/3.4.25/lib/sass/script/functions.rb#2046
  def map_get(map, key); end

  # source://sass/3.4.25/lib/sass/script/functions.rb#2141
  def map_has_key(map, key); end

  # source://sass/3.4.25/lib/sass/script/functions.rb#2109
  def map_keys(map); end

  # source://sass/3.4.25/lib/sass/script/functions.rb#2072
  def map_merge(map1, map2); end

  # source://sass/3.4.25/lib/sass/script/functions.rb#2093
  def map_remove(map, *keys); end

  # source://sass/3.4.25/lib/sass/script/functions.rb#2125
  def map_values(map); end

  # source://sass/3.4.25/lib/sass/script/functions.rb#1810
  def max(*values); end

  # source://sass/3.4.25/lib/sass/script/functions.rb#1793
  def min(*numbers); end

  # source://sass/3.4.25/lib/sass/script/functions.rb#1313
  def mix(color1, color2, weight = T.unsafe(nil)); end

  # source://sass/3.4.25/lib/sass/script/functions.rb#2338
  def mixin_exists(name); end

  # source://sass/3.4.25/lib/sass/script/functions.rb#1883
  def nth(list, n); end

  # source://sass/3.4.25/lib/sass/script/functions.rb#944
  def opacify(color, amount); end

  # source://sass/3.4.25/lib/sass/script/functions.rb#921
  def opacity(color); end

  # source://sass/3.4.25/lib/sass/script/functions.rb#1718
  def percentage(number); end

  # source://sass/3.4.25/lib/sass/script/functions.rb#1449
  def quote(string); end

  # source://compass-core/1.0.3/lib/compass/core/sass_extensions/functions/math.rb#20
  def random(*args); end

  # source://sass/3.4.25/lib/sass/script/functions.rb#796
  def red(color); end

  # source://sass/3.4.25/lib/sass/script/functions.rb#637
  def rgb(red, green, blue); end

  # source://sass/3.4.25/lib/sass/script/functions.rb#693
  def rgba(*args); end

  # source://sass/3.4.25/lib/sass/script/functions.rb#1735
  def round(number); end

  # source://sass/3.4.25/lib/sass/script/functions.rb#2365
  def sass_random(limit = T.unsafe(nil)); end

  # source://sass/3.4.25/lib/sass/script/functions.rb#1026
  def saturate(color, amount = T.unsafe(nil)); end

  # source://sass/3.4.25/lib/sass/script/functions.rb#864
  def saturation(color); end

  # source://sass/3.4.25/lib/sass/script/functions.rb#1194
  def scale_color(color, kwargs); end

  # source://sass/3.4.25/lib/sass/script/functions.rb#2449
  def selector_append(*selectors); end

  # source://sass/3.4.25/lib/sass/script/functions.rb#2506
  def selector_extend(selector, extendee, extender); end

  # source://sass/3.4.25/lib/sass/script/functions.rb#2419
  def selector_nest(*selectors); end

  # source://sass/3.4.25/lib/sass/script/functions.rb#2393
  def selector_parse(selector); end

  # source://sass/3.4.25/lib/sass/script/functions.rb#2549
  def selector_replace(selector, original, replacement); end

  # source://sass/3.4.25/lib/sass/script/functions.rb#2595
  def selector_unify(selector1, selector2); end

  # source://sass/3.4.25/lib/sass/script/functions.rb#1852
  def set_nth(list, n, value); end

  # source://sass/3.4.25/lib/sass/script/functions.rb#2622
  def simple_selectors(selector); end

  # source://sass/3.4.25/lib/sass/script/functions.rb#1525
  def str_index(string, substring); end

  # source://sass/3.4.25/lib/sass/script/functions.rb#1493
  def str_insert(original, insert, index); end

  # source://sass/3.4.25/lib/sass/script/functions.rb#1467
  def str_length(string); end

  # source://sass/3.4.25/lib/sass/script/functions.rb#1555
  def str_slice(string, start_at, end_at = T.unsafe(nil)); end

  # source://sass/3.4.25/lib/sass/script/functions.rb#1599
  def to_lower_case(string); end

  # source://sass/3.4.25/lib/sass/script/functions.rb#1584
  def to_upper_case(string); end

  # source://sass/3.4.25/lib/sass/script/functions.rb#966
  def transparentize(color, amount); end

  # source://sass/3.4.25/lib/sass/script/functions.rb#1619
  def type_of(value); end

  # source://sass/3.4.25/lib/sass/script/functions.rb#2195
  def unique_id; end

  # source://sass/3.4.25/lib/sass/script/functions.rb#1670
  def unit(number); end

  # source://sass/3.4.25/lib/sass/script/functions.rb#1685
  def unitless(number); end

  # source://sass/3.4.25/lib/sass/script/functions.rb#1413
  def unquote(string); end

  # source://sass/3.4.25/lib/sass/script/functions.rb#2276
  def variable_exists(name); end

  # source://sass/3.4.25/lib/sass/script/functions.rb#1979
  def zip(*lists); end

  private

  # source://sass/3.4.25/lib/sass/script/functions.rb#2668
  def _adjust(color, amount, attr, range, op, units = T.unsafe(nil)); end

  # source://sass/3.4.25/lib/sass/script/functions.rb#2677
  def check_alpha_unit(alpha, function); end

  # source://sass/3.4.25/lib/sass/script/functions.rb#2660
  def numeric_transformation(value); end

  class << self
    def callable?(*_arg0); end

    # source://sass/3.4.25/lib/sass/script/functions.rb#406
    def declare(method_name, args, options = T.unsafe(nil)); end

    # source://sass/3.4.25/lib/sass/script/functions.rb#480
    def random_number_generator; end

    # source://sass/3.4.25/lib/sass/script/functions.rb#473
    def random_seed=(seed); end

    # source://sass/3.4.25/lib/sass/script/functions.rb#440
    def signature(method_name, arg_arity, kwarg_arity); end

    private

    # source://sass/3.4.25/lib/sass/script/functions.rb#612
    def include(*args); end
  end
end
