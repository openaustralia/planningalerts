# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for types exported from the `http_parser.rb` gem.
# Please instead update this file by running `bin/tapioca gem http_parser.rb`.

# source://http_parser.rb//lib/http_parser.rb#6
module HTTP
  class << self
    # source://http/4.4.1/lib/http/chainable.rb#180
    def [](headers); end
  end
end

# source://http/4.4.1/lib/http/content_type.rb#6
HTTP::CHARSET_RE = T.let(T.unsafe(nil), Regexp)

# source://http/4.4.1/lib/http/content_type.rb#5
HTTP::MIME_TYPE_RE = T.let(T.unsafe(nil), Regexp)

# source://http_parser.rb//lib/http_parser.rb#7
class HTTP::Parser
  def initialize(*_arg0); end

  def <<(_arg0); end
  def header_value_type; end
  def header_value_type=(_arg0); end
  def headers; end
  def http_major; end
  def http_method; end
  def http_minor; end
  def http_version; end
  def keep_alive?; end
  def on_body=(_arg0); end
  def on_headers_complete=(_arg0); end
  def on_message_begin=(_arg0); end
  def on_message_complete=(_arg0); end
  def request_url; end
  def reset!; end
  def status_code; end
  def upgrade?; end
  def upgrade_data; end

  class << self
    # Returns the value of attribute default_header_value_type.
    #
    # source://http_parser.rb//lib/http_parser.rb#9
    def default_header_value_type; end

    # source://http_parser.rb//lib/http_parser.rb#11
    def default_header_value_type=(val); end

    def strict?; end
  end
end

class HTTP::Parser::Error < ::IOError; end
class HTTP::RequestParser < ::HTTP::Parser; end
class HTTP::ResponseParser < ::HTTP::Parser; end

# source://http/4.4.1/lib/http/version.rb#4
HTTP::VERSION = T.let(T.unsafe(nil), String)

# source://http_parser.rb//lib/http_parser.rb#4
Http = HTTP
