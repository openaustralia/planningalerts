# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for types exported from the `wikidata` gem.
# Please instead update this file by running `bin/tapioca gem wikidata`.

# source://wikidata//lib/wikidata/version.rb#1
module Wikidata
  class << self
    # source://wikidata//lib/wikidata.rb#27
    def default_languages_hash; end

    # source://wikidata//lib/wikidata.rb#23
    def use_only_default_language; end

    # source://wikidata//lib/wikidata.rb#35
    def verbose=(v); end

    # @return [Boolean]
    #
    # source://wikidata//lib/wikidata.rb#31
    def verbose?; end
  end
end

# source://wikidata//lib/wikidata/datavalues/value.rb#2
module Wikidata::DataValues; end

# source://wikidata//lib/wikidata/datavalues/commons_media.rb#3
class Wikidata::DataValues::CommonsMedia < ::Wikidata::DataValues::Value
  # source://wikidata//lib/wikidata/datavalues/commons_media.rb#9
  def resolve!; end

  # source://wikidata//lib/wikidata/datavalues/commons_media.rb#5
  def to_s; end
end

# source://wikidata//lib/wikidata/datavalues/entity.rb#3
class Wikidata::DataValues::Entity < ::Wikidata::DataValues::Value
  # source://wikidata//lib/wikidata/datavalues/entity.rb#17
  def entity; end

  # source://wikidata//lib/wikidata/datavalues/entity.rb#13
  def item_id; end

  # source://wikidata//lib/wikidata/datavalues/entity.rb#5
  def kind; end

  # source://wikidata//lib/wikidata/datavalues/entity.rb#9
  def numeric_id; end

  # source://wikidata//lib/wikidata/datavalues/entity.rb#25
  def resolve!; end

  # source://wikidata//lib/wikidata/datavalues/entity.rb#29
  def to_s; end
end

# source://wikidata//lib/wikidata/datavalues/globecoordinate.rb#3
class Wikidata::DataValues::Globecoordinate < ::Wikidata::DataValues::Value
  # source://wikidata//lib/wikidata/datavalues/globecoordinate.rb#5
  def to_s; end
end

# source://wikidata//lib/wikidata/datavalues/string.rb#3
class Wikidata::DataValues::String < ::Wikidata::DataValues::Value
  # source://wikidata//lib/wikidata/datavalues/string.rb#5
  def to_s; end
end

# source://wikidata//lib/wikidata/datavalues/time.rb#3
class Wikidata::DataValues::Time < ::Wikidata::DataValues::Value
  # source://wikidata//lib/wikidata/datavalues/time.rb#9
  def to_s; end

  # source://wikidata//lib/wikidata/datavalues/time.rb#5
  def to_time; end
end

# source://wikidata//lib/wikidata/datavalues/value.rb#3
class Wikidata::DataValues::Value < ::Wikidata::HashedObject
  # source://wikidata//lib/wikidata/datavalues/value.rb#5
  def resolve!; end

  # source://wikidata//lib/wikidata/datavalues/value.rb#8
  def resolved; end
end

# source://wikidata//lib/wikidata/entity.rb#4
class Wikidata::Entity < ::Wikidata::HashedObject
  # source://wikidata//lib/wikidata/entity.rb#88
  def delocalize(hash, locale = T.unsafe(nil)); end

  # source://wikidata//lib/wikidata/entity.rb#98
  def description(*args); end

  # source://wikidata//lib/wikidata/entity.rb#84
  def inspect; end

  # source://wikidata//lib/wikidata/entity.rb#94
  def label(*args); end

  class << self
    # source://wikidata//lib/wikidata/entity.rb#6
    def find_all(query); end

    # source://wikidata//lib/wikidata/entity.rb#68
    def find_all_by_id(id, query = T.unsafe(nil)); end

    # source://wikidata//lib/wikidata/entity.rb#76
    def find_all_by_title(title, query = T.unsafe(nil)); end

    # source://wikidata//lib/wikidata/entity.rb#72
    def find_by_id(*args); end

    # source://wikidata//lib/wikidata/entity.rb#80
    def find_by_title(*args); end

    # source://wikidata//lib/wikidata/entity.rb#58
    def query_and_build_objects(query); end
  end
end

# source://wikidata//lib/wikidata/hashed_object.rb#2
class Wikidata::HashedObject
  # @return [HashedObject] a new instance of HashedObject
  #
  # source://wikidata//lib/wikidata/hashed_object.rb#6
  def initialize(data_hash); end

  # Returns the value of attribute data_hash.
  #
  # source://wikidata//lib/wikidata/hashed_object.rb#4
  def data_hash; end

  # source://wikidata//lib/wikidata/hashed_object.rb#10
  def method_missing(meth, *args, &block); end
end

# source://wikidata//lib/wikidata/identity_map.rb#2
class Wikidata::IdentityMap < ::Wikidata::HashedObject
  class << self
    # source://wikidata//lib/wikidata/identity_map.rb#17
    def cache!(key, value); end

    # source://wikidata//lib/wikidata/identity_map.rb#12
    def cached_value(key); end

    # source://wikidata//lib/wikidata/identity_map.rb#4
    def if_uncached(key, &block); end
  end
end

# source://wikidata//lib/wikidata/item.rb#2
class Wikidata::Item < ::Wikidata::Entity
  # source://wikidata//lib/wikidata/item.rb#59
  def children; end

  # source://wikidata//lib/wikidata/item.rb#4
  def claims; end

  # source://wikidata//lib/wikidata/item.rb#27
  def claims_for_property_id(property_id); end

  # source://wikidata//lib/wikidata/item.rb#63
  def doctoral_advisors; end

  # source://wikidata//lib/wikidata/item.rb#31
  def entities_for_property_id(property_id); end

  # source://wikidata//lib/wikidata/item.rb#55
  def fathers; end

  # Convenience methods
  #
  # source://wikidata//lib/wikidata/item.rb#46
  def image; end

  # source://wikidata//lib/wikidata/item.rb#51
  def mothers; end

  # source://wikidata//lib/wikidata/item.rb#18
  def resolve_claims!; end
end

# source://wikidata//lib/wikidata/property.rb#2
class Wikidata::Property < ::Wikidata::Entity; end

# source://wikidata//lib/wikidata/snak.rb#2
class Wikidata::Snak < ::Wikidata::HashedObject
  # source://wikidata//lib/wikidata/snak.rb#32
  def inspect; end

  # source://wikidata//lib/wikidata/snak.rb#8
  def property; end

  # source://wikidata//lib/wikidata/snak.rb#4
  def property_id; end

  # source://wikidata//lib/wikidata/snak.rb#12
  def value; end
end

# source://wikidata//lib/wikidata/statement.rb#2
class Wikidata::Statement < ::Wikidata::HashedObject
  # source://wikidata//lib/wikidata/statement.rb#4
  def mainsnak; end
end

# source://wikidata//lib/wikidata/version.rb#2
Wikidata::VERSION = T.let(T.unsafe(nil), String)
