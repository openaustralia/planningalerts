# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for types exported from the `equalizer` gem.
# Please instead update this file by running `bin/tapioca gem equalizer`.

# Define equality, equivalence and inspection methods
#
# source://equalizer//lib/equalizer.rb#14
class Equalizer < ::Module
  # Initialize an Equalizer with the given keys
  #
  # Will use the keys with which it is initialized to define #cmp?,
  # #hash, and #inspect
  #
  # @api private
  # @param keys [Array<Symbol>]
  # @return [undefined]
  #
  # source://equalizer//lib/equalizer.rb#15
  def initialize(*keys); end

  private

  # Define an #cmp? method based on the instance's values identified by #keys
  #
  # @api private
  # @return [undefined]
  #
  # source://equalizer//lib/equalizer.rb#52
  def define_cmp_method; end

  # Define a #hash method based on the instance's values identified by #keys
  #
  # @api private
  # @return [undefined]
  #
  # source://equalizer//lib/equalizer.rb#67
  def define_hash_method; end

  # Define an inspect method that reports the values of the instance's keys
  #
  # @api private
  # @return [undefined]
  #
  # source://equalizer//lib/equalizer.rb#79
  def define_inspect_method; end

  # Define the equalizer methods based on #keys
  #
  # @api private
  # @return [undefined]
  #
  # source://equalizer//lib/equalizer.rb#41
  def define_methods; end

  # Hook called when module is included
  #
  # @api private
  # @param descendant [Module] the module or class including Equalizer
  # @return [self]
  #
  # source://equalizer//lib/equalizer.rb#31
  def included(descendant); end
end

# The comparison methods
#
# source://equalizer//lib/equalizer.rb#89
module Equalizer::Methods
  # Compare the object with other object for equivalency
  #
  # @api public
  # @example
  #   object == other  # => true or false
  # @param other [Object] the other object to compare with
  # @return [Boolean]
  #
  # source://equalizer//lib/equalizer.rb#116
  def ==(other); end

  # Compare the object with other object for equality
  #
  # @api public
  # @example
  #   object.eql?(other)  # => true or false
  # @param other [Object] the other object to compare with
  # @return [Boolean]
  #
  # source://equalizer//lib/equalizer.rb#101
  def eql?(other); end
end
